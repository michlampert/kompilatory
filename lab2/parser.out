Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction
Rule 2     program -> program instruction
Rule 3     instruction -> expression ;
Rule 4     instruction -> BREAK ;
Rule 5     instruction -> CONTINUE ;
Rule 6     instruction -> RETURN expression ;
Rule 7     instructions_list -> instruction
Rule 8     instructions_list -> instructions_list instruction
Rule 9     instruction -> { instructions_list }
Rule 10    expression -> ( expression )
Rule 11    expression -> [ ]
Rule 12    expression -> [ expression_list ]
Rule 13    expression -> INTNUM
Rule 14    expression -> FLOAT
Rule 15    expression -> ID
Rule 16    expression -> STRING
Rule 17    expression -> expression TRANSPOSITION
Rule 18    expression -> - expression
Rule 19    expression -> ZEROS ( expression_list )
Rule 20    expression -> ONES ( expression_list )
Rule 21    expression -> EYE ( expression_list )
Rule 22    expression -> ID = expression
Rule 23    expression -> ID ADDASSIGN expression
Rule 24    expression -> ID SUBASSIGN expression
Rule 25    expression -> ID MULASSIGN expression
Rule 26    expression -> ID DIVASSIGN expression
Rule 27    expression -> ID [ expression_list ] = expression
Rule 28    expression -> ID [ expression_list ] ADDASSIGN expression
Rule 29    expression -> ID [ expression_list ] SUBASSIGN expression
Rule 30    expression -> ID [ expression_list ] MULASSIGN expression
Rule 31    expression -> ID [ expression_list ] DIVASSIGN expression
Rule 32    expression -> ID [ expression_list ]
Rule 33    expression -> expression + expression
Rule 34    expression -> expression - expression
Rule 35    expression -> expression * expression
Rule 36    expression -> expression / expression
Rule 37    expression -> expression DOTADD expression
Rule 38    expression -> expression DOTSUB expression
Rule 39    expression -> expression DOTMUL expression
Rule 40    expression -> expression DOTDIV expression
Rule 41    expression -> expression EQ expression
Rule 42    expression -> expression NEQ expression
Rule 43    expression -> expression LT expression
Rule 44    expression -> expression NLT expression
Rule 45    expression -> expression GT expression
Rule 46    expression -> expression NGT expression
Rule 47    expression_list -> expression
Rule 48    expression_list -> expression_list , expression
Rule 49    instruction -> IF ( expression ) instruction ELSE instruction
Rule 50    instruction -> IF ( expression ) instruction
Rule 51    instruction -> WHILE ( expression ) instruction
Rule 52    range -> expression : expression
Rule 53    instruction -> FOR ID = range instruction
Rule 54    instruction -> PRINT expression_list ;

Terminals, with rules where they appear

(                    : 10 19 20 21 49 50 51
)                    : 10 19 20 21 49 50 51
*                    : 35
+                    : 33
,                    : 48
-                    : 18 34
/                    : 36
:                    : 52
;                    : 3 4 5 6 54
=                    : 22 27 53
ADDASSIGN            : 23 28
BREAK                : 4
CONTINUE             : 5
DIVASSIGN            : 26 31
DOTADD               : 37
DOTDIV               : 40
DOTMUL               : 39
DOTSUB               : 38
ELSE                 : 49
EQ                   : 41
EYE                  : 21
FLOAT                : 14
FOR                  : 53
GT                   : 45
ID                   : 15 22 23 24 25 26 27 28 29 30 31 32 53
IF                   : 49 50
INTNUM               : 13
LT                   : 43
MULASSIGN            : 25 30
NEQ                  : 42
NGT                  : 46
NLT                  : 44
ONES                 : 20
PRINT                : 54
RETURN               : 6
STRING               : 16
SUBASSIGN            : 24 29
TRANSPOSITION        : 17
WHILE                : 51
ZEROS                : 19
[                    : 11 12 27 28 29 30 31 32
]                    : 11 12 27 28 29 30 31 32
error                : 
{                    : 9
}                    : 9

Nonterminals, with rules where they appear

expression           : 3 6 10 17 18 22 23 24 25 26 27 28 29 30 31 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 49 50 51 52 52
expression_list      : 12 19 20 21 27 28 29 30 31 32 48 54
instruction          : 1 2 7 8 49 49 50 51 53
instructions_list    : 8 9
program              : 2 0
range                : 53

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction
    (2) program -> . program instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    program                        shift and go to state 1
    instruction                    shift and go to state 2
    expression                     shift and go to state 3

state 1

    (0) S' -> program .
    (2) program -> program . instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    instruction                    shift and go to state 22
    expression                     shift and go to state 3

state 2

    (1) program -> instruction .

    BREAK           reduce using rule 1 (program -> instruction .)
    CONTINUE        reduce using rule 1 (program -> instruction .)
    RETURN          reduce using rule 1 (program -> instruction .)
    {               reduce using rule 1 (program -> instruction .)
    IF              reduce using rule 1 (program -> instruction .)
    WHILE           reduce using rule 1 (program -> instruction .)
    FOR             reduce using rule 1 (program -> instruction .)
    PRINT           reduce using rule 1 (program -> instruction .)
    (               reduce using rule 1 (program -> instruction .)
    [               reduce using rule 1 (program -> instruction .)
    INTNUM          reduce using rule 1 (program -> instruction .)
    FLOAT           reduce using rule 1 (program -> instruction .)
    ID              reduce using rule 1 (program -> instruction .)
    STRING          reduce using rule 1 (program -> instruction .)
    -               reduce using rule 1 (program -> instruction .)
    ZEROS           reduce using rule 1 (program -> instruction .)
    ONES            reduce using rule 1 (program -> instruction .)
    EYE             reduce using rule 1 (program -> instruction .)
    $end            reduce using rule 1 (program -> instruction .)


state 3

    (3) instruction -> expression . ;
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               shift and go to state 23
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 4

    (4) instruction -> BREAK . ;

    ;               shift and go to state 39


state 5

    (5) instruction -> CONTINUE . ;

    ;               shift and go to state 40


state 6

    (6) instruction -> RETURN . expression ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 41

state 7

    (9) instruction -> { . instructions_list }
    (7) instructions_list -> . instruction
    (8) instructions_list -> . instructions_list instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    instructions_list              shift and go to state 42
    instruction                    shift and go to state 43
    expression                     shift and go to state 3

state 8

    (49) instruction -> IF . ( expression ) instruction ELSE instruction
    (50) instruction -> IF . ( expression ) instruction

    (               shift and go to state 44


state 9

    (10) expression -> ( . expression )
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 45

state 10

    (51) instruction -> WHILE . ( expression ) instruction

    (               shift and go to state 46


state 11

    (53) instruction -> FOR . ID = range instruction

    ID              shift and go to state 47


state 12

    (15) expression -> ID .
    (22) expression -> ID . = expression
    (23) expression -> ID . ADDASSIGN expression
    (24) expression -> ID . SUBASSIGN expression
    (25) expression -> ID . MULASSIGN expression
    (26) expression -> ID . DIVASSIGN expression
    (27) expression -> ID . [ expression_list ] = expression
    (28) expression -> ID . [ expression_list ] ADDASSIGN expression
    (29) expression -> ID . [ expression_list ] SUBASSIGN expression
    (30) expression -> ID . [ expression_list ] MULASSIGN expression
    (31) expression -> ID . [ expression_list ] DIVASSIGN expression
    (32) expression -> ID . [ expression_list ]

  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 15 (expression -> ID .)
    TRANSPOSITION   reduce using rule 15 (expression -> ID .)
    +               reduce using rule 15 (expression -> ID .)
    -               reduce using rule 15 (expression -> ID .)
    *               reduce using rule 15 (expression -> ID .)
    /               reduce using rule 15 (expression -> ID .)
    DOTADD          reduce using rule 15 (expression -> ID .)
    DOTSUB          reduce using rule 15 (expression -> ID .)
    DOTMUL          reduce using rule 15 (expression -> ID .)
    DOTDIV          reduce using rule 15 (expression -> ID .)
    EQ              reduce using rule 15 (expression -> ID .)
    NEQ             reduce using rule 15 (expression -> ID .)
    LT              reduce using rule 15 (expression -> ID .)
    NLT             reduce using rule 15 (expression -> ID .)
    GT              reduce using rule 15 (expression -> ID .)
    NGT             reduce using rule 15 (expression -> ID .)
    )               reduce using rule 15 (expression -> ID .)
    ,               reduce using rule 15 (expression -> ID .)
    ]               reduce using rule 15 (expression -> ID .)
    :               reduce using rule 15 (expression -> ID .)
    BREAK           reduce using rule 15 (expression -> ID .)
    CONTINUE        reduce using rule 15 (expression -> ID .)
    RETURN          reduce using rule 15 (expression -> ID .)
    {               reduce using rule 15 (expression -> ID .)
    IF              reduce using rule 15 (expression -> ID .)
    WHILE           reduce using rule 15 (expression -> ID .)
    FOR             reduce using rule 15 (expression -> ID .)
    PRINT           reduce using rule 15 (expression -> ID .)
    (               reduce using rule 15 (expression -> ID .)
    INTNUM          reduce using rule 15 (expression -> ID .)
    FLOAT           reduce using rule 15 (expression -> ID .)
    ID              reduce using rule 15 (expression -> ID .)
    STRING          reduce using rule 15 (expression -> ID .)
    ZEROS           reduce using rule 15 (expression -> ID .)
    ONES            reduce using rule 15 (expression -> ID .)
    EYE             reduce using rule 15 (expression -> ID .)
    =               shift and go to state 48
    ADDASSIGN       shift and go to state 49
    SUBASSIGN       shift and go to state 50
    MULASSIGN       shift and go to state 51
    DIVASSIGN       shift and go to state 52
    [               shift and go to state 53

  ! [               [ reduce using rule 15 (expression -> ID .) ]


state 13

    (54) instruction -> PRINT . expression_list ;
    (47) expression_list -> . expression
    (48) expression_list -> . expression_list , expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression_list                shift and go to state 54
    expression                     shift and go to state 55

state 14

    (11) expression -> [ . ]
    (12) expression -> [ . expression_list ]
    (47) expression_list -> . expression
    (48) expression_list -> . expression_list , expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    ]               shift and go to state 56
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression_list                shift and go to state 57
    expression                     shift and go to state 55

state 15

    (13) expression -> INTNUM .

    ;               reduce using rule 13 (expression -> INTNUM .)
    TRANSPOSITION   reduce using rule 13 (expression -> INTNUM .)
    +               reduce using rule 13 (expression -> INTNUM .)
    -               reduce using rule 13 (expression -> INTNUM .)
    *               reduce using rule 13 (expression -> INTNUM .)
    /               reduce using rule 13 (expression -> INTNUM .)
    DOTADD          reduce using rule 13 (expression -> INTNUM .)
    DOTSUB          reduce using rule 13 (expression -> INTNUM .)
    DOTMUL          reduce using rule 13 (expression -> INTNUM .)
    DOTDIV          reduce using rule 13 (expression -> INTNUM .)
    EQ              reduce using rule 13 (expression -> INTNUM .)
    NEQ             reduce using rule 13 (expression -> INTNUM .)
    LT              reduce using rule 13 (expression -> INTNUM .)
    NLT             reduce using rule 13 (expression -> INTNUM .)
    GT              reduce using rule 13 (expression -> INTNUM .)
    NGT             reduce using rule 13 (expression -> INTNUM .)
    )               reduce using rule 13 (expression -> INTNUM .)
    ,               reduce using rule 13 (expression -> INTNUM .)
    ]               reduce using rule 13 (expression -> INTNUM .)
    :               reduce using rule 13 (expression -> INTNUM .)
    BREAK           reduce using rule 13 (expression -> INTNUM .)
    CONTINUE        reduce using rule 13 (expression -> INTNUM .)
    RETURN          reduce using rule 13 (expression -> INTNUM .)
    {               reduce using rule 13 (expression -> INTNUM .)
    IF              reduce using rule 13 (expression -> INTNUM .)
    WHILE           reduce using rule 13 (expression -> INTNUM .)
    FOR             reduce using rule 13 (expression -> INTNUM .)
    PRINT           reduce using rule 13 (expression -> INTNUM .)
    (               reduce using rule 13 (expression -> INTNUM .)
    [               reduce using rule 13 (expression -> INTNUM .)
    INTNUM          reduce using rule 13 (expression -> INTNUM .)
    FLOAT           reduce using rule 13 (expression -> INTNUM .)
    ID              reduce using rule 13 (expression -> INTNUM .)
    STRING          reduce using rule 13 (expression -> INTNUM .)
    ZEROS           reduce using rule 13 (expression -> INTNUM .)
    ONES            reduce using rule 13 (expression -> INTNUM .)
    EYE             reduce using rule 13 (expression -> INTNUM .)


state 16

    (14) expression -> FLOAT .

    ;               reduce using rule 14 (expression -> FLOAT .)
    TRANSPOSITION   reduce using rule 14 (expression -> FLOAT .)
    +               reduce using rule 14 (expression -> FLOAT .)
    -               reduce using rule 14 (expression -> FLOAT .)
    *               reduce using rule 14 (expression -> FLOAT .)
    /               reduce using rule 14 (expression -> FLOAT .)
    DOTADD          reduce using rule 14 (expression -> FLOAT .)
    DOTSUB          reduce using rule 14 (expression -> FLOAT .)
    DOTMUL          reduce using rule 14 (expression -> FLOAT .)
    DOTDIV          reduce using rule 14 (expression -> FLOAT .)
    EQ              reduce using rule 14 (expression -> FLOAT .)
    NEQ             reduce using rule 14 (expression -> FLOAT .)
    LT              reduce using rule 14 (expression -> FLOAT .)
    NLT             reduce using rule 14 (expression -> FLOAT .)
    GT              reduce using rule 14 (expression -> FLOAT .)
    NGT             reduce using rule 14 (expression -> FLOAT .)
    )               reduce using rule 14 (expression -> FLOAT .)
    ,               reduce using rule 14 (expression -> FLOAT .)
    ]               reduce using rule 14 (expression -> FLOAT .)
    :               reduce using rule 14 (expression -> FLOAT .)
    BREAK           reduce using rule 14 (expression -> FLOAT .)
    CONTINUE        reduce using rule 14 (expression -> FLOAT .)
    RETURN          reduce using rule 14 (expression -> FLOAT .)
    {               reduce using rule 14 (expression -> FLOAT .)
    IF              reduce using rule 14 (expression -> FLOAT .)
    WHILE           reduce using rule 14 (expression -> FLOAT .)
    FOR             reduce using rule 14 (expression -> FLOAT .)
    PRINT           reduce using rule 14 (expression -> FLOAT .)
    (               reduce using rule 14 (expression -> FLOAT .)
    [               reduce using rule 14 (expression -> FLOAT .)
    INTNUM          reduce using rule 14 (expression -> FLOAT .)
    FLOAT           reduce using rule 14 (expression -> FLOAT .)
    ID              reduce using rule 14 (expression -> FLOAT .)
    STRING          reduce using rule 14 (expression -> FLOAT .)
    ZEROS           reduce using rule 14 (expression -> FLOAT .)
    ONES            reduce using rule 14 (expression -> FLOAT .)
    EYE             reduce using rule 14 (expression -> FLOAT .)


state 17

    (16) expression -> STRING .

    ;               reduce using rule 16 (expression -> STRING .)
    TRANSPOSITION   reduce using rule 16 (expression -> STRING .)
    +               reduce using rule 16 (expression -> STRING .)
    -               reduce using rule 16 (expression -> STRING .)
    *               reduce using rule 16 (expression -> STRING .)
    /               reduce using rule 16 (expression -> STRING .)
    DOTADD          reduce using rule 16 (expression -> STRING .)
    DOTSUB          reduce using rule 16 (expression -> STRING .)
    DOTMUL          reduce using rule 16 (expression -> STRING .)
    DOTDIV          reduce using rule 16 (expression -> STRING .)
    EQ              reduce using rule 16 (expression -> STRING .)
    NEQ             reduce using rule 16 (expression -> STRING .)
    LT              reduce using rule 16 (expression -> STRING .)
    NLT             reduce using rule 16 (expression -> STRING .)
    GT              reduce using rule 16 (expression -> STRING .)
    NGT             reduce using rule 16 (expression -> STRING .)
    )               reduce using rule 16 (expression -> STRING .)
    ,               reduce using rule 16 (expression -> STRING .)
    ]               reduce using rule 16 (expression -> STRING .)
    :               reduce using rule 16 (expression -> STRING .)
    BREAK           reduce using rule 16 (expression -> STRING .)
    CONTINUE        reduce using rule 16 (expression -> STRING .)
    RETURN          reduce using rule 16 (expression -> STRING .)
    {               reduce using rule 16 (expression -> STRING .)
    IF              reduce using rule 16 (expression -> STRING .)
    WHILE           reduce using rule 16 (expression -> STRING .)
    FOR             reduce using rule 16 (expression -> STRING .)
    PRINT           reduce using rule 16 (expression -> STRING .)
    (               reduce using rule 16 (expression -> STRING .)
    [               reduce using rule 16 (expression -> STRING .)
    INTNUM          reduce using rule 16 (expression -> STRING .)
    FLOAT           reduce using rule 16 (expression -> STRING .)
    ID              reduce using rule 16 (expression -> STRING .)
    STRING          reduce using rule 16 (expression -> STRING .)
    ZEROS           reduce using rule 16 (expression -> STRING .)
    ONES            reduce using rule 16 (expression -> STRING .)
    EYE             reduce using rule 16 (expression -> STRING .)


state 18

    (18) expression -> - . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 58

state 19

    (19) expression -> ZEROS . ( expression_list )

    (               shift and go to state 59


state 20

    (20) expression -> ONES . ( expression_list )

    (               shift and go to state 60


state 21

    (21) expression -> EYE . ( expression_list )

    (               shift and go to state 61


state 22

    (2) program -> program instruction .

    BREAK           reduce using rule 2 (program -> program instruction .)
    CONTINUE        reduce using rule 2 (program -> program instruction .)
    RETURN          reduce using rule 2 (program -> program instruction .)
    {               reduce using rule 2 (program -> program instruction .)
    IF              reduce using rule 2 (program -> program instruction .)
    WHILE           reduce using rule 2 (program -> program instruction .)
    FOR             reduce using rule 2 (program -> program instruction .)
    PRINT           reduce using rule 2 (program -> program instruction .)
    (               reduce using rule 2 (program -> program instruction .)
    [               reduce using rule 2 (program -> program instruction .)
    INTNUM          reduce using rule 2 (program -> program instruction .)
    FLOAT           reduce using rule 2 (program -> program instruction .)
    ID              reduce using rule 2 (program -> program instruction .)
    STRING          reduce using rule 2 (program -> program instruction .)
    -               reduce using rule 2 (program -> program instruction .)
    ZEROS           reduce using rule 2 (program -> program instruction .)
    ONES            reduce using rule 2 (program -> program instruction .)
    EYE             reduce using rule 2 (program -> program instruction .)
    $end            reduce using rule 2 (program -> program instruction .)


state 23

    (3) instruction -> expression ; .

    BREAK           reduce using rule 3 (instruction -> expression ; .)
    CONTINUE        reduce using rule 3 (instruction -> expression ; .)
    RETURN          reduce using rule 3 (instruction -> expression ; .)
    {               reduce using rule 3 (instruction -> expression ; .)
    IF              reduce using rule 3 (instruction -> expression ; .)
    WHILE           reduce using rule 3 (instruction -> expression ; .)
    FOR             reduce using rule 3 (instruction -> expression ; .)
    PRINT           reduce using rule 3 (instruction -> expression ; .)
    (               reduce using rule 3 (instruction -> expression ; .)
    [               reduce using rule 3 (instruction -> expression ; .)
    INTNUM          reduce using rule 3 (instruction -> expression ; .)
    FLOAT           reduce using rule 3 (instruction -> expression ; .)
    ID              reduce using rule 3 (instruction -> expression ; .)
    STRING          reduce using rule 3 (instruction -> expression ; .)
    -               reduce using rule 3 (instruction -> expression ; .)
    ZEROS           reduce using rule 3 (instruction -> expression ; .)
    ONES            reduce using rule 3 (instruction -> expression ; .)
    EYE             reduce using rule 3 (instruction -> expression ; .)
    $end            reduce using rule 3 (instruction -> expression ; .)
    }               reduce using rule 3 (instruction -> expression ; .)
    ELSE            reduce using rule 3 (instruction -> expression ; .)


state 24

    (17) expression -> expression TRANSPOSITION .

    ;               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    TRANSPOSITION   reduce using rule 17 (expression -> expression TRANSPOSITION .)
    +               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    -               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    *               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    /               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    DOTADD          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    DOTSUB          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    DOTMUL          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    DOTDIV          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    EQ              reduce using rule 17 (expression -> expression TRANSPOSITION .)
    NEQ             reduce using rule 17 (expression -> expression TRANSPOSITION .)
    LT              reduce using rule 17 (expression -> expression TRANSPOSITION .)
    NLT             reduce using rule 17 (expression -> expression TRANSPOSITION .)
    GT              reduce using rule 17 (expression -> expression TRANSPOSITION .)
    NGT             reduce using rule 17 (expression -> expression TRANSPOSITION .)
    )               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    ,               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    ]               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    :               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    BREAK           reduce using rule 17 (expression -> expression TRANSPOSITION .)
    CONTINUE        reduce using rule 17 (expression -> expression TRANSPOSITION .)
    RETURN          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    {               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    IF              reduce using rule 17 (expression -> expression TRANSPOSITION .)
    WHILE           reduce using rule 17 (expression -> expression TRANSPOSITION .)
    FOR             reduce using rule 17 (expression -> expression TRANSPOSITION .)
    PRINT           reduce using rule 17 (expression -> expression TRANSPOSITION .)
    (               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    [               reduce using rule 17 (expression -> expression TRANSPOSITION .)
    INTNUM          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    FLOAT           reduce using rule 17 (expression -> expression TRANSPOSITION .)
    ID              reduce using rule 17 (expression -> expression TRANSPOSITION .)
    STRING          reduce using rule 17 (expression -> expression TRANSPOSITION .)
    ZEROS           reduce using rule 17 (expression -> expression TRANSPOSITION .)
    ONES            reduce using rule 17 (expression -> expression TRANSPOSITION .)
    EYE             reduce using rule 17 (expression -> expression TRANSPOSITION .)


state 25

    (33) expression -> expression + . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 62

state 26

    (34) expression -> expression - . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 63

state 27

    (35) expression -> expression * . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 64

state 28

    (36) expression -> expression / . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 65

state 29

    (37) expression -> expression DOTADD . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 66

state 30

    (38) expression -> expression DOTSUB . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 67

state 31

    (39) expression -> expression DOTMUL . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 68

state 32

    (40) expression -> expression DOTDIV . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 69

state 33

    (41) expression -> expression EQ . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 70

state 34

    (42) expression -> expression NEQ . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 71

state 35

    (43) expression -> expression LT . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 72

state 36

    (44) expression -> expression NLT . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 73

state 37

    (45) expression -> expression GT . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 74

state 38

    (46) expression -> expression NGT . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 75

state 39

    (4) instruction -> BREAK ; .

    BREAK           reduce using rule 4 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 4 (instruction -> BREAK ; .)
    RETURN          reduce using rule 4 (instruction -> BREAK ; .)
    {               reduce using rule 4 (instruction -> BREAK ; .)
    IF              reduce using rule 4 (instruction -> BREAK ; .)
    WHILE           reduce using rule 4 (instruction -> BREAK ; .)
    FOR             reduce using rule 4 (instruction -> BREAK ; .)
    PRINT           reduce using rule 4 (instruction -> BREAK ; .)
    (               reduce using rule 4 (instruction -> BREAK ; .)
    [               reduce using rule 4 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 4 (instruction -> BREAK ; .)
    FLOAT           reduce using rule 4 (instruction -> BREAK ; .)
    ID              reduce using rule 4 (instruction -> BREAK ; .)
    STRING          reduce using rule 4 (instruction -> BREAK ; .)
    -               reduce using rule 4 (instruction -> BREAK ; .)
    ZEROS           reduce using rule 4 (instruction -> BREAK ; .)
    ONES            reduce using rule 4 (instruction -> BREAK ; .)
    EYE             reduce using rule 4 (instruction -> BREAK ; .)
    $end            reduce using rule 4 (instruction -> BREAK ; .)
    }               reduce using rule 4 (instruction -> BREAK ; .)
    ELSE            reduce using rule 4 (instruction -> BREAK ; .)


state 40

    (5) instruction -> CONTINUE ; .

    BREAK           reduce using rule 5 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 5 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 5 (instruction -> CONTINUE ; .)
    {               reduce using rule 5 (instruction -> CONTINUE ; .)
    IF              reduce using rule 5 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 5 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 5 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 5 (instruction -> CONTINUE ; .)
    (               reduce using rule 5 (instruction -> CONTINUE ; .)
    [               reduce using rule 5 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 5 (instruction -> CONTINUE ; .)
    FLOAT           reduce using rule 5 (instruction -> CONTINUE ; .)
    ID              reduce using rule 5 (instruction -> CONTINUE ; .)
    STRING          reduce using rule 5 (instruction -> CONTINUE ; .)
    -               reduce using rule 5 (instruction -> CONTINUE ; .)
    ZEROS           reduce using rule 5 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 5 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 5 (instruction -> CONTINUE ; .)
    $end            reduce using rule 5 (instruction -> CONTINUE ; .)
    }               reduce using rule 5 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 5 (instruction -> CONTINUE ; .)


state 41

    (6) instruction -> RETURN expression . ;
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               shift and go to state 76
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 42

    (9) instruction -> { instructions_list . }
    (8) instructions_list -> instructions_list . instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    }               shift and go to state 77
    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    instruction                    shift and go to state 78
    expression                     shift and go to state 3

state 43

    (7) instructions_list -> instruction .

    }               reduce using rule 7 (instructions_list -> instruction .)
    BREAK           reduce using rule 7 (instructions_list -> instruction .)
    CONTINUE        reduce using rule 7 (instructions_list -> instruction .)
    RETURN          reduce using rule 7 (instructions_list -> instruction .)
    {               reduce using rule 7 (instructions_list -> instruction .)
    IF              reduce using rule 7 (instructions_list -> instruction .)
    WHILE           reduce using rule 7 (instructions_list -> instruction .)
    FOR             reduce using rule 7 (instructions_list -> instruction .)
    PRINT           reduce using rule 7 (instructions_list -> instruction .)
    (               reduce using rule 7 (instructions_list -> instruction .)
    [               reduce using rule 7 (instructions_list -> instruction .)
    INTNUM          reduce using rule 7 (instructions_list -> instruction .)
    FLOAT           reduce using rule 7 (instructions_list -> instruction .)
    ID              reduce using rule 7 (instructions_list -> instruction .)
    STRING          reduce using rule 7 (instructions_list -> instruction .)
    -               reduce using rule 7 (instructions_list -> instruction .)
    ZEROS           reduce using rule 7 (instructions_list -> instruction .)
    ONES            reduce using rule 7 (instructions_list -> instruction .)
    EYE             reduce using rule 7 (instructions_list -> instruction .)


state 44

    (49) instruction -> IF ( . expression ) instruction ELSE instruction
    (50) instruction -> IF ( . expression ) instruction
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 79

state 45

    (10) expression -> ( expression . )
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    )               shift and go to state 80
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 46

    (51) instruction -> WHILE ( . expression ) instruction
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 81

state 47

    (53) instruction -> FOR ID . = range instruction

    =               shift and go to state 82


state 48

    (22) expression -> ID = . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 83

state 49

    (23) expression -> ID ADDASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 84

state 50

    (24) expression -> ID SUBASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 85

state 51

    (25) expression -> ID MULASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 86

state 52

    (26) expression -> ID DIVASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 87

state 53

    (27) expression -> ID [ . expression_list ] = expression
    (28) expression -> ID [ . expression_list ] ADDASSIGN expression
    (29) expression -> ID [ . expression_list ] SUBASSIGN expression
    (30) expression -> ID [ . expression_list ] MULASSIGN expression
    (31) expression -> ID [ . expression_list ] DIVASSIGN expression
    (32) expression -> ID [ . expression_list ]
    (47) expression_list -> . expression
    (48) expression_list -> . expression_list , expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression_list                shift and go to state 88
    expression                     shift and go to state 55

state 54

    (54) instruction -> PRINT expression_list . ;
    (48) expression_list -> expression_list . , expression

    ;               shift and go to state 89
    ,               shift and go to state 90


state 55

    (47) expression_list -> expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 47 (expression_list -> expression .)
    ,               reduce using rule 47 (expression_list -> expression .)
    ]               reduce using rule 47 (expression_list -> expression .)
    )               reduce using rule 47 (expression_list -> expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 56

    (11) expression -> [ ] .

    ;               reduce using rule 11 (expression -> [ ] .)
    TRANSPOSITION   reduce using rule 11 (expression -> [ ] .)
    +               reduce using rule 11 (expression -> [ ] .)
    -               reduce using rule 11 (expression -> [ ] .)
    *               reduce using rule 11 (expression -> [ ] .)
    /               reduce using rule 11 (expression -> [ ] .)
    DOTADD          reduce using rule 11 (expression -> [ ] .)
    DOTSUB          reduce using rule 11 (expression -> [ ] .)
    DOTMUL          reduce using rule 11 (expression -> [ ] .)
    DOTDIV          reduce using rule 11 (expression -> [ ] .)
    EQ              reduce using rule 11 (expression -> [ ] .)
    NEQ             reduce using rule 11 (expression -> [ ] .)
    LT              reduce using rule 11 (expression -> [ ] .)
    NLT             reduce using rule 11 (expression -> [ ] .)
    GT              reduce using rule 11 (expression -> [ ] .)
    NGT             reduce using rule 11 (expression -> [ ] .)
    )               reduce using rule 11 (expression -> [ ] .)
    ,               reduce using rule 11 (expression -> [ ] .)
    ]               reduce using rule 11 (expression -> [ ] .)
    :               reduce using rule 11 (expression -> [ ] .)
    BREAK           reduce using rule 11 (expression -> [ ] .)
    CONTINUE        reduce using rule 11 (expression -> [ ] .)
    RETURN          reduce using rule 11 (expression -> [ ] .)
    {               reduce using rule 11 (expression -> [ ] .)
    IF              reduce using rule 11 (expression -> [ ] .)
    WHILE           reduce using rule 11 (expression -> [ ] .)
    FOR             reduce using rule 11 (expression -> [ ] .)
    PRINT           reduce using rule 11 (expression -> [ ] .)
    (               reduce using rule 11 (expression -> [ ] .)
    [               reduce using rule 11 (expression -> [ ] .)
    INTNUM          reduce using rule 11 (expression -> [ ] .)
    FLOAT           reduce using rule 11 (expression -> [ ] .)
    ID              reduce using rule 11 (expression -> [ ] .)
    STRING          reduce using rule 11 (expression -> [ ] .)
    ZEROS           reduce using rule 11 (expression -> [ ] .)
    ONES            reduce using rule 11 (expression -> [ ] .)
    EYE             reduce using rule 11 (expression -> [ ] .)


state 57

    (12) expression -> [ expression_list . ]
    (48) expression_list -> expression_list . , expression

    ]               shift and go to state 91
    ,               shift and go to state 90


state 58

    (18) expression -> - expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 18 (expression -> - expression .)
    +               reduce using rule 18 (expression -> - expression .)
    -               reduce using rule 18 (expression -> - expression .)
    *               reduce using rule 18 (expression -> - expression .)
    /               reduce using rule 18 (expression -> - expression .)
    DOTADD          reduce using rule 18 (expression -> - expression .)
    DOTSUB          reduce using rule 18 (expression -> - expression .)
    DOTMUL          reduce using rule 18 (expression -> - expression .)
    DOTDIV          reduce using rule 18 (expression -> - expression .)
    EQ              reduce using rule 18 (expression -> - expression .)
    NEQ             reduce using rule 18 (expression -> - expression .)
    LT              reduce using rule 18 (expression -> - expression .)
    NLT             reduce using rule 18 (expression -> - expression .)
    GT              reduce using rule 18 (expression -> - expression .)
    NGT             reduce using rule 18 (expression -> - expression .)
    )               reduce using rule 18 (expression -> - expression .)
    ,               reduce using rule 18 (expression -> - expression .)
    ]               reduce using rule 18 (expression -> - expression .)
    :               reduce using rule 18 (expression -> - expression .)
    BREAK           reduce using rule 18 (expression -> - expression .)
    CONTINUE        reduce using rule 18 (expression -> - expression .)
    RETURN          reduce using rule 18 (expression -> - expression .)
    {               reduce using rule 18 (expression -> - expression .)
    IF              reduce using rule 18 (expression -> - expression .)
    WHILE           reduce using rule 18 (expression -> - expression .)
    FOR             reduce using rule 18 (expression -> - expression .)
    PRINT           reduce using rule 18 (expression -> - expression .)
    (               reduce using rule 18 (expression -> - expression .)
    [               reduce using rule 18 (expression -> - expression .)
    INTNUM          reduce using rule 18 (expression -> - expression .)
    FLOAT           reduce using rule 18 (expression -> - expression .)
    ID              reduce using rule 18 (expression -> - expression .)
    STRING          reduce using rule 18 (expression -> - expression .)
    ZEROS           reduce using rule 18 (expression -> - expression .)
    ONES            reduce using rule 18 (expression -> - expression .)
    EYE             reduce using rule 18 (expression -> - expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 18 (expression -> - expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 59

    (19) expression -> ZEROS ( . expression_list )
    (47) expression_list -> . expression
    (48) expression_list -> . expression_list , expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression_list                shift and go to state 92
    expression                     shift and go to state 55

state 60

    (20) expression -> ONES ( . expression_list )
    (47) expression_list -> . expression
    (48) expression_list -> . expression_list , expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression_list                shift and go to state 93
    expression                     shift and go to state 55

state 61

    (21) expression -> EYE ( . expression_list )
    (47) expression_list -> . expression
    (48) expression_list -> . expression_list , expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression_list                shift and go to state 94
    expression                     shift and go to state 55

state 62

    (33) expression -> expression + expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 33 (expression -> expression + expression .)
    +               reduce using rule 33 (expression -> expression + expression .)
    -               reduce using rule 33 (expression -> expression + expression .)
    DOTADD          reduce using rule 33 (expression -> expression + expression .)
    DOTSUB          reduce using rule 33 (expression -> expression + expression .)
    EQ              reduce using rule 33 (expression -> expression + expression .)
    NEQ             reduce using rule 33 (expression -> expression + expression .)
    LT              reduce using rule 33 (expression -> expression + expression .)
    NLT             reduce using rule 33 (expression -> expression + expression .)
    GT              reduce using rule 33 (expression -> expression + expression .)
    NGT             reduce using rule 33 (expression -> expression + expression .)
    )               reduce using rule 33 (expression -> expression + expression .)
    ,               reduce using rule 33 (expression -> expression + expression .)
    ]               reduce using rule 33 (expression -> expression + expression .)
    :               reduce using rule 33 (expression -> expression + expression .)
    BREAK           reduce using rule 33 (expression -> expression + expression .)
    CONTINUE        reduce using rule 33 (expression -> expression + expression .)
    RETURN          reduce using rule 33 (expression -> expression + expression .)
    {               reduce using rule 33 (expression -> expression + expression .)
    IF              reduce using rule 33 (expression -> expression + expression .)
    WHILE           reduce using rule 33 (expression -> expression + expression .)
    FOR             reduce using rule 33 (expression -> expression + expression .)
    PRINT           reduce using rule 33 (expression -> expression + expression .)
    (               reduce using rule 33 (expression -> expression + expression .)
    [               reduce using rule 33 (expression -> expression + expression .)
    INTNUM          reduce using rule 33 (expression -> expression + expression .)
    FLOAT           reduce using rule 33 (expression -> expression + expression .)
    ID              reduce using rule 33 (expression -> expression + expression .)
    STRING          reduce using rule 33 (expression -> expression + expression .)
    ZEROS           reduce using rule 33 (expression -> expression + expression .)
    ONES            reduce using rule 33 (expression -> expression + expression .)
    EYE             reduce using rule 33 (expression -> expression + expression .)
    TRANSPOSITION   shift and go to state 24
    *               shift and go to state 27
    /               shift and go to state 28
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 33 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 33 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 33 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 33 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 33 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 63

    (34) expression -> expression - expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 34 (expression -> expression - expression .)
    +               reduce using rule 34 (expression -> expression - expression .)
    -               reduce using rule 34 (expression -> expression - expression .)
    DOTADD          reduce using rule 34 (expression -> expression - expression .)
    DOTSUB          reduce using rule 34 (expression -> expression - expression .)
    EQ              reduce using rule 34 (expression -> expression - expression .)
    NEQ             reduce using rule 34 (expression -> expression - expression .)
    LT              reduce using rule 34 (expression -> expression - expression .)
    NLT             reduce using rule 34 (expression -> expression - expression .)
    GT              reduce using rule 34 (expression -> expression - expression .)
    NGT             reduce using rule 34 (expression -> expression - expression .)
    )               reduce using rule 34 (expression -> expression - expression .)
    ,               reduce using rule 34 (expression -> expression - expression .)
    ]               reduce using rule 34 (expression -> expression - expression .)
    :               reduce using rule 34 (expression -> expression - expression .)
    BREAK           reduce using rule 34 (expression -> expression - expression .)
    CONTINUE        reduce using rule 34 (expression -> expression - expression .)
    RETURN          reduce using rule 34 (expression -> expression - expression .)
    {               reduce using rule 34 (expression -> expression - expression .)
    IF              reduce using rule 34 (expression -> expression - expression .)
    WHILE           reduce using rule 34 (expression -> expression - expression .)
    FOR             reduce using rule 34 (expression -> expression - expression .)
    PRINT           reduce using rule 34 (expression -> expression - expression .)
    (               reduce using rule 34 (expression -> expression - expression .)
    [               reduce using rule 34 (expression -> expression - expression .)
    INTNUM          reduce using rule 34 (expression -> expression - expression .)
    FLOAT           reduce using rule 34 (expression -> expression - expression .)
    ID              reduce using rule 34 (expression -> expression - expression .)
    STRING          reduce using rule 34 (expression -> expression - expression .)
    ZEROS           reduce using rule 34 (expression -> expression - expression .)
    ONES            reduce using rule 34 (expression -> expression - expression .)
    EYE             reduce using rule 34 (expression -> expression - expression .)
    TRANSPOSITION   shift and go to state 24
    *               shift and go to state 27
    /               shift and go to state 28
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 34 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 34 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 34 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 64

    (35) expression -> expression * expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 35 (expression -> expression * expression .)
    +               reduce using rule 35 (expression -> expression * expression .)
    -               reduce using rule 35 (expression -> expression * expression .)
    *               reduce using rule 35 (expression -> expression * expression .)
    /               reduce using rule 35 (expression -> expression * expression .)
    DOTADD          reduce using rule 35 (expression -> expression * expression .)
    DOTSUB          reduce using rule 35 (expression -> expression * expression .)
    DOTMUL          reduce using rule 35 (expression -> expression * expression .)
    DOTDIV          reduce using rule 35 (expression -> expression * expression .)
    EQ              reduce using rule 35 (expression -> expression * expression .)
    NEQ             reduce using rule 35 (expression -> expression * expression .)
    LT              reduce using rule 35 (expression -> expression * expression .)
    NLT             reduce using rule 35 (expression -> expression * expression .)
    GT              reduce using rule 35 (expression -> expression * expression .)
    NGT             reduce using rule 35 (expression -> expression * expression .)
    )               reduce using rule 35 (expression -> expression * expression .)
    ,               reduce using rule 35 (expression -> expression * expression .)
    ]               reduce using rule 35 (expression -> expression * expression .)
    :               reduce using rule 35 (expression -> expression * expression .)
    BREAK           reduce using rule 35 (expression -> expression * expression .)
    CONTINUE        reduce using rule 35 (expression -> expression * expression .)
    RETURN          reduce using rule 35 (expression -> expression * expression .)
    {               reduce using rule 35 (expression -> expression * expression .)
    IF              reduce using rule 35 (expression -> expression * expression .)
    WHILE           reduce using rule 35 (expression -> expression * expression .)
    FOR             reduce using rule 35 (expression -> expression * expression .)
    PRINT           reduce using rule 35 (expression -> expression * expression .)
    (               reduce using rule 35 (expression -> expression * expression .)
    [               reduce using rule 35 (expression -> expression * expression .)
    INTNUM          reduce using rule 35 (expression -> expression * expression .)
    FLOAT           reduce using rule 35 (expression -> expression * expression .)
    ID              reduce using rule 35 (expression -> expression * expression .)
    STRING          reduce using rule 35 (expression -> expression * expression .)
    ZEROS           reduce using rule 35 (expression -> expression * expression .)
    ONES            reduce using rule 35 (expression -> expression * expression .)
    EYE             reduce using rule 35 (expression -> expression * expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 35 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 65

    (36) expression -> expression / expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 36 (expression -> expression / expression .)
    +               reduce using rule 36 (expression -> expression / expression .)
    -               reduce using rule 36 (expression -> expression / expression .)
    *               reduce using rule 36 (expression -> expression / expression .)
    /               reduce using rule 36 (expression -> expression / expression .)
    DOTADD          reduce using rule 36 (expression -> expression / expression .)
    DOTSUB          reduce using rule 36 (expression -> expression / expression .)
    DOTMUL          reduce using rule 36 (expression -> expression / expression .)
    DOTDIV          reduce using rule 36 (expression -> expression / expression .)
    EQ              reduce using rule 36 (expression -> expression / expression .)
    NEQ             reduce using rule 36 (expression -> expression / expression .)
    LT              reduce using rule 36 (expression -> expression / expression .)
    NLT             reduce using rule 36 (expression -> expression / expression .)
    GT              reduce using rule 36 (expression -> expression / expression .)
    NGT             reduce using rule 36 (expression -> expression / expression .)
    )               reduce using rule 36 (expression -> expression / expression .)
    ,               reduce using rule 36 (expression -> expression / expression .)
    ]               reduce using rule 36 (expression -> expression / expression .)
    :               reduce using rule 36 (expression -> expression / expression .)
    BREAK           reduce using rule 36 (expression -> expression / expression .)
    CONTINUE        reduce using rule 36 (expression -> expression / expression .)
    RETURN          reduce using rule 36 (expression -> expression / expression .)
    {               reduce using rule 36 (expression -> expression / expression .)
    IF              reduce using rule 36 (expression -> expression / expression .)
    WHILE           reduce using rule 36 (expression -> expression / expression .)
    FOR             reduce using rule 36 (expression -> expression / expression .)
    PRINT           reduce using rule 36 (expression -> expression / expression .)
    (               reduce using rule 36 (expression -> expression / expression .)
    [               reduce using rule 36 (expression -> expression / expression .)
    INTNUM          reduce using rule 36 (expression -> expression / expression .)
    FLOAT           reduce using rule 36 (expression -> expression / expression .)
    ID              reduce using rule 36 (expression -> expression / expression .)
    STRING          reduce using rule 36 (expression -> expression / expression .)
    ZEROS           reduce using rule 36 (expression -> expression / expression .)
    ONES            reduce using rule 36 (expression -> expression / expression .)
    EYE             reduce using rule 36 (expression -> expression / expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 36 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 66

    (37) expression -> expression DOTADD expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 37 (expression -> expression DOTADD expression .)
    +               reduce using rule 37 (expression -> expression DOTADD expression .)
    -               reduce using rule 37 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 37 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 37 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 37 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 37 (expression -> expression DOTADD expression .)
    LT              reduce using rule 37 (expression -> expression DOTADD expression .)
    NLT             reduce using rule 37 (expression -> expression DOTADD expression .)
    GT              reduce using rule 37 (expression -> expression DOTADD expression .)
    NGT             reduce using rule 37 (expression -> expression DOTADD expression .)
    )               reduce using rule 37 (expression -> expression DOTADD expression .)
    ,               reduce using rule 37 (expression -> expression DOTADD expression .)
    ]               reduce using rule 37 (expression -> expression DOTADD expression .)
    :               reduce using rule 37 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 37 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 37 (expression -> expression DOTADD expression .)
    {               reduce using rule 37 (expression -> expression DOTADD expression .)
    IF              reduce using rule 37 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 37 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 37 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 37 (expression -> expression DOTADD expression .)
    (               reduce using rule 37 (expression -> expression DOTADD expression .)
    [               reduce using rule 37 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 37 (expression -> expression DOTADD expression .)
    FLOAT           reduce using rule 37 (expression -> expression DOTADD expression .)
    ID              reduce using rule 37 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 37 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 37 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 37 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 37 (expression -> expression DOTADD expression .)
    TRANSPOSITION   shift and go to state 24
    *               shift and go to state 27
    /               shift and go to state 28
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 37 (expression -> expression DOTADD expression .) ]
  ! *               [ reduce using rule 37 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 37 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 37 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 67

    (38) expression -> expression DOTSUB expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 38 (expression -> expression DOTSUB expression .)
    +               reduce using rule 38 (expression -> expression DOTSUB expression .)
    -               reduce using rule 38 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 38 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 38 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 38 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 38 (expression -> expression DOTSUB expression .)
    LT              reduce using rule 38 (expression -> expression DOTSUB expression .)
    NLT             reduce using rule 38 (expression -> expression DOTSUB expression .)
    GT              reduce using rule 38 (expression -> expression DOTSUB expression .)
    NGT             reduce using rule 38 (expression -> expression DOTSUB expression .)
    )               reduce using rule 38 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 38 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 38 (expression -> expression DOTSUB expression .)
    :               reduce using rule 38 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 38 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 38 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 38 (expression -> expression DOTSUB expression .)
    {               reduce using rule 38 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 38 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 38 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 38 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 38 (expression -> expression DOTSUB expression .)
    (               reduce using rule 38 (expression -> expression DOTSUB expression .)
    [               reduce using rule 38 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 38 (expression -> expression DOTSUB expression .)
    FLOAT           reduce using rule 38 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 38 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 38 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 38 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 38 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 38 (expression -> expression DOTSUB expression .)
    TRANSPOSITION   shift and go to state 24
    *               shift and go to state 27
    /               shift and go to state 28
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 38 (expression -> expression DOTSUB expression .) ]
  ! *               [ reduce using rule 38 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 38 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 38 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 38 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 68

    (39) expression -> expression DOTMUL expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 39 (expression -> expression DOTMUL expression .)
    +               reduce using rule 39 (expression -> expression DOTMUL expression .)
    -               reduce using rule 39 (expression -> expression DOTMUL expression .)
    *               reduce using rule 39 (expression -> expression DOTMUL expression .)
    /               reduce using rule 39 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 39 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 39 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 39 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 39 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 39 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 39 (expression -> expression DOTMUL expression .)
    LT              reduce using rule 39 (expression -> expression DOTMUL expression .)
    NLT             reduce using rule 39 (expression -> expression DOTMUL expression .)
    GT              reduce using rule 39 (expression -> expression DOTMUL expression .)
    NGT             reduce using rule 39 (expression -> expression DOTMUL expression .)
    )               reduce using rule 39 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 39 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 39 (expression -> expression DOTMUL expression .)
    :               reduce using rule 39 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 39 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 39 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 39 (expression -> expression DOTMUL expression .)
    {               reduce using rule 39 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 39 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 39 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 39 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 39 (expression -> expression DOTMUL expression .)
    (               reduce using rule 39 (expression -> expression DOTMUL expression .)
    [               reduce using rule 39 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 39 (expression -> expression DOTMUL expression .)
    FLOAT           reduce using rule 39 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 39 (expression -> expression DOTMUL expression .)
    STRING          reduce using rule 39 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 39 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 39 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 39 (expression -> expression DOTMUL expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 39 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 69

    (40) expression -> expression DOTDIV expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 40 (expression -> expression DOTDIV expression .)
    +               reduce using rule 40 (expression -> expression DOTDIV expression .)
    -               reduce using rule 40 (expression -> expression DOTDIV expression .)
    *               reduce using rule 40 (expression -> expression DOTDIV expression .)
    /               reduce using rule 40 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 40 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 40 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 40 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 40 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 40 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 40 (expression -> expression DOTDIV expression .)
    LT              reduce using rule 40 (expression -> expression DOTDIV expression .)
    NLT             reduce using rule 40 (expression -> expression DOTDIV expression .)
    GT              reduce using rule 40 (expression -> expression DOTDIV expression .)
    NGT             reduce using rule 40 (expression -> expression DOTDIV expression .)
    )               reduce using rule 40 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 40 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 40 (expression -> expression DOTDIV expression .)
    :               reduce using rule 40 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 40 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 40 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 40 (expression -> expression DOTDIV expression .)
    {               reduce using rule 40 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 40 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 40 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 40 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 40 (expression -> expression DOTDIV expression .)
    (               reduce using rule 40 (expression -> expression DOTDIV expression .)
    [               reduce using rule 40 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 40 (expression -> expression DOTDIV expression .)
    FLOAT           reduce using rule 40 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 40 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 40 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 40 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 40 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 40 (expression -> expression DOTDIV expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 40 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 70

    (41) expression -> expression EQ expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 41 (expression -> expression EQ expression .)
    EQ              reduce using rule 41 (expression -> expression EQ expression .)
    NEQ             reduce using rule 41 (expression -> expression EQ expression .)
    LT              reduce using rule 41 (expression -> expression EQ expression .)
    NLT             reduce using rule 41 (expression -> expression EQ expression .)
    GT              reduce using rule 41 (expression -> expression EQ expression .)
    NGT             reduce using rule 41 (expression -> expression EQ expression .)
    )               reduce using rule 41 (expression -> expression EQ expression .)
    ,               reduce using rule 41 (expression -> expression EQ expression .)
    ]               reduce using rule 41 (expression -> expression EQ expression .)
    :               reduce using rule 41 (expression -> expression EQ expression .)
    BREAK           reduce using rule 41 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 41 (expression -> expression EQ expression .)
    RETURN          reduce using rule 41 (expression -> expression EQ expression .)
    {               reduce using rule 41 (expression -> expression EQ expression .)
    IF              reduce using rule 41 (expression -> expression EQ expression .)
    WHILE           reduce using rule 41 (expression -> expression EQ expression .)
    FOR             reduce using rule 41 (expression -> expression EQ expression .)
    PRINT           reduce using rule 41 (expression -> expression EQ expression .)
    (               reduce using rule 41 (expression -> expression EQ expression .)
    [               reduce using rule 41 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 41 (expression -> expression EQ expression .)
    FLOAT           reduce using rule 41 (expression -> expression EQ expression .)
    ID              reduce using rule 41 (expression -> expression EQ expression .)
    STRING          reduce using rule 41 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 41 (expression -> expression EQ expression .)
    ONES            reduce using rule 41 (expression -> expression EQ expression .)
    EYE             reduce using rule 41 (expression -> expression EQ expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! +               [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 71

    (42) expression -> expression NEQ expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 42 (expression -> expression NEQ expression .)
    EQ              reduce using rule 42 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 42 (expression -> expression NEQ expression .)
    LT              reduce using rule 42 (expression -> expression NEQ expression .)
    NLT             reduce using rule 42 (expression -> expression NEQ expression .)
    GT              reduce using rule 42 (expression -> expression NEQ expression .)
    NGT             reduce using rule 42 (expression -> expression NEQ expression .)
    )               reduce using rule 42 (expression -> expression NEQ expression .)
    ,               reduce using rule 42 (expression -> expression NEQ expression .)
    ]               reduce using rule 42 (expression -> expression NEQ expression .)
    :               reduce using rule 42 (expression -> expression NEQ expression .)
    BREAK           reduce using rule 42 (expression -> expression NEQ expression .)
    CONTINUE        reduce using rule 42 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 42 (expression -> expression NEQ expression .)
    {               reduce using rule 42 (expression -> expression NEQ expression .)
    IF              reduce using rule 42 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 42 (expression -> expression NEQ expression .)
    FOR             reduce using rule 42 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 42 (expression -> expression NEQ expression .)
    (               reduce using rule 42 (expression -> expression NEQ expression .)
    [               reduce using rule 42 (expression -> expression NEQ expression .)
    INTNUM          reduce using rule 42 (expression -> expression NEQ expression .)
    FLOAT           reduce using rule 42 (expression -> expression NEQ expression .)
    ID              reduce using rule 42 (expression -> expression NEQ expression .)
    STRING          reduce using rule 42 (expression -> expression NEQ expression .)
    ZEROS           reduce using rule 42 (expression -> expression NEQ expression .)
    ONES            reduce using rule 42 (expression -> expression NEQ expression .)
    EYE             reduce using rule 42 (expression -> expression NEQ expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! +               [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! -               [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! *               [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! /               [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! DOTADD          [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! DOTSUB          [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! DOTMUL          [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! DOTDIV          [ reduce using rule 42 (expression -> expression NEQ expression .) ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 72

    (43) expression -> expression LT expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 43 (expression -> expression LT expression .)
    EQ              reduce using rule 43 (expression -> expression LT expression .)
    NEQ             reduce using rule 43 (expression -> expression LT expression .)
    LT              reduce using rule 43 (expression -> expression LT expression .)
    NLT             reduce using rule 43 (expression -> expression LT expression .)
    GT              reduce using rule 43 (expression -> expression LT expression .)
    NGT             reduce using rule 43 (expression -> expression LT expression .)
    )               reduce using rule 43 (expression -> expression LT expression .)
    ,               reduce using rule 43 (expression -> expression LT expression .)
    ]               reduce using rule 43 (expression -> expression LT expression .)
    :               reduce using rule 43 (expression -> expression LT expression .)
    BREAK           reduce using rule 43 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 43 (expression -> expression LT expression .)
    RETURN          reduce using rule 43 (expression -> expression LT expression .)
    {               reduce using rule 43 (expression -> expression LT expression .)
    IF              reduce using rule 43 (expression -> expression LT expression .)
    WHILE           reduce using rule 43 (expression -> expression LT expression .)
    FOR             reduce using rule 43 (expression -> expression LT expression .)
    PRINT           reduce using rule 43 (expression -> expression LT expression .)
    (               reduce using rule 43 (expression -> expression LT expression .)
    [               reduce using rule 43 (expression -> expression LT expression .)
    INTNUM          reduce using rule 43 (expression -> expression LT expression .)
    FLOAT           reduce using rule 43 (expression -> expression LT expression .)
    ID              reduce using rule 43 (expression -> expression LT expression .)
    STRING          reduce using rule 43 (expression -> expression LT expression .)
    ZEROS           reduce using rule 43 (expression -> expression LT expression .)
    ONES            reduce using rule 43 (expression -> expression LT expression .)
    EYE             reduce using rule 43 (expression -> expression LT expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! +               [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! -               [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! *               [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! /               [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! DOTADD          [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! DOTSUB          [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! DOTMUL          [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! DOTDIV          [ reduce using rule 43 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 73

    (44) expression -> expression NLT expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 44 (expression -> expression NLT expression .)
    EQ              reduce using rule 44 (expression -> expression NLT expression .)
    NEQ             reduce using rule 44 (expression -> expression NLT expression .)
    LT              reduce using rule 44 (expression -> expression NLT expression .)
    NLT             reduce using rule 44 (expression -> expression NLT expression .)
    GT              reduce using rule 44 (expression -> expression NLT expression .)
    NGT             reduce using rule 44 (expression -> expression NLT expression .)
    )               reduce using rule 44 (expression -> expression NLT expression .)
    ,               reduce using rule 44 (expression -> expression NLT expression .)
    ]               reduce using rule 44 (expression -> expression NLT expression .)
    :               reduce using rule 44 (expression -> expression NLT expression .)
    BREAK           reduce using rule 44 (expression -> expression NLT expression .)
    CONTINUE        reduce using rule 44 (expression -> expression NLT expression .)
    RETURN          reduce using rule 44 (expression -> expression NLT expression .)
    {               reduce using rule 44 (expression -> expression NLT expression .)
    IF              reduce using rule 44 (expression -> expression NLT expression .)
    WHILE           reduce using rule 44 (expression -> expression NLT expression .)
    FOR             reduce using rule 44 (expression -> expression NLT expression .)
    PRINT           reduce using rule 44 (expression -> expression NLT expression .)
    (               reduce using rule 44 (expression -> expression NLT expression .)
    [               reduce using rule 44 (expression -> expression NLT expression .)
    INTNUM          reduce using rule 44 (expression -> expression NLT expression .)
    FLOAT           reduce using rule 44 (expression -> expression NLT expression .)
    ID              reduce using rule 44 (expression -> expression NLT expression .)
    STRING          reduce using rule 44 (expression -> expression NLT expression .)
    ZEROS           reduce using rule 44 (expression -> expression NLT expression .)
    ONES            reduce using rule 44 (expression -> expression NLT expression .)
    EYE             reduce using rule 44 (expression -> expression NLT expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! +               [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! -               [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! *               [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! /               [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! DOTADD          [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! DOTSUB          [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! DOTMUL          [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression NLT expression .) ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 74

    (45) expression -> expression GT expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 45 (expression -> expression GT expression .)
    EQ              reduce using rule 45 (expression -> expression GT expression .)
    NEQ             reduce using rule 45 (expression -> expression GT expression .)
    LT              reduce using rule 45 (expression -> expression GT expression .)
    NLT             reduce using rule 45 (expression -> expression GT expression .)
    GT              reduce using rule 45 (expression -> expression GT expression .)
    NGT             reduce using rule 45 (expression -> expression GT expression .)
    )               reduce using rule 45 (expression -> expression GT expression .)
    ,               reduce using rule 45 (expression -> expression GT expression .)
    ]               reduce using rule 45 (expression -> expression GT expression .)
    :               reduce using rule 45 (expression -> expression GT expression .)
    BREAK           reduce using rule 45 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 45 (expression -> expression GT expression .)
    RETURN          reduce using rule 45 (expression -> expression GT expression .)
    {               reduce using rule 45 (expression -> expression GT expression .)
    IF              reduce using rule 45 (expression -> expression GT expression .)
    WHILE           reduce using rule 45 (expression -> expression GT expression .)
    FOR             reduce using rule 45 (expression -> expression GT expression .)
    PRINT           reduce using rule 45 (expression -> expression GT expression .)
    (               reduce using rule 45 (expression -> expression GT expression .)
    [               reduce using rule 45 (expression -> expression GT expression .)
    INTNUM          reduce using rule 45 (expression -> expression GT expression .)
    FLOAT           reduce using rule 45 (expression -> expression GT expression .)
    ID              reduce using rule 45 (expression -> expression GT expression .)
    STRING          reduce using rule 45 (expression -> expression GT expression .)
    ZEROS           reduce using rule 45 (expression -> expression GT expression .)
    ONES            reduce using rule 45 (expression -> expression GT expression .)
    EYE             reduce using rule 45 (expression -> expression GT expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! +               [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! -               [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! *               [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! /               [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! DOTADD          [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! DOTSUB          [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! DOTMUL          [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! DOTDIV          [ reduce using rule 45 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 75

    (46) expression -> expression NGT expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 46 (expression -> expression NGT expression .)
    EQ              reduce using rule 46 (expression -> expression NGT expression .)
    NEQ             reduce using rule 46 (expression -> expression NGT expression .)
    LT              reduce using rule 46 (expression -> expression NGT expression .)
    NLT             reduce using rule 46 (expression -> expression NGT expression .)
    GT              reduce using rule 46 (expression -> expression NGT expression .)
    NGT             reduce using rule 46 (expression -> expression NGT expression .)
    )               reduce using rule 46 (expression -> expression NGT expression .)
    ,               reduce using rule 46 (expression -> expression NGT expression .)
    ]               reduce using rule 46 (expression -> expression NGT expression .)
    :               reduce using rule 46 (expression -> expression NGT expression .)
    BREAK           reduce using rule 46 (expression -> expression NGT expression .)
    CONTINUE        reduce using rule 46 (expression -> expression NGT expression .)
    RETURN          reduce using rule 46 (expression -> expression NGT expression .)
    {               reduce using rule 46 (expression -> expression NGT expression .)
    IF              reduce using rule 46 (expression -> expression NGT expression .)
    WHILE           reduce using rule 46 (expression -> expression NGT expression .)
    FOR             reduce using rule 46 (expression -> expression NGT expression .)
    PRINT           reduce using rule 46 (expression -> expression NGT expression .)
    (               reduce using rule 46 (expression -> expression NGT expression .)
    [               reduce using rule 46 (expression -> expression NGT expression .)
    INTNUM          reduce using rule 46 (expression -> expression NGT expression .)
    FLOAT           reduce using rule 46 (expression -> expression NGT expression .)
    ID              reduce using rule 46 (expression -> expression NGT expression .)
    STRING          reduce using rule 46 (expression -> expression NGT expression .)
    ZEROS           reduce using rule 46 (expression -> expression NGT expression .)
    ONES            reduce using rule 46 (expression -> expression NGT expression .)
    EYE             reduce using rule 46 (expression -> expression NGT expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32

  ! TRANSPOSITION   [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! +               [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! -               [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! *               [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! /               [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! DOTADD          [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! DOTSUB          [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! DOTMUL          [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! DOTDIV          [ reduce using rule 46 (expression -> expression NGT expression .) ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 76

    (6) instruction -> RETURN expression ; .

    BREAK           reduce using rule 6 (instruction -> RETURN expression ; .)
    CONTINUE        reduce using rule 6 (instruction -> RETURN expression ; .)
    RETURN          reduce using rule 6 (instruction -> RETURN expression ; .)
    {               reduce using rule 6 (instruction -> RETURN expression ; .)
    IF              reduce using rule 6 (instruction -> RETURN expression ; .)
    WHILE           reduce using rule 6 (instruction -> RETURN expression ; .)
    FOR             reduce using rule 6 (instruction -> RETURN expression ; .)
    PRINT           reduce using rule 6 (instruction -> RETURN expression ; .)
    (               reduce using rule 6 (instruction -> RETURN expression ; .)
    [               reduce using rule 6 (instruction -> RETURN expression ; .)
    INTNUM          reduce using rule 6 (instruction -> RETURN expression ; .)
    FLOAT           reduce using rule 6 (instruction -> RETURN expression ; .)
    ID              reduce using rule 6 (instruction -> RETURN expression ; .)
    STRING          reduce using rule 6 (instruction -> RETURN expression ; .)
    -               reduce using rule 6 (instruction -> RETURN expression ; .)
    ZEROS           reduce using rule 6 (instruction -> RETURN expression ; .)
    ONES            reduce using rule 6 (instruction -> RETURN expression ; .)
    EYE             reduce using rule 6 (instruction -> RETURN expression ; .)
    $end            reduce using rule 6 (instruction -> RETURN expression ; .)
    }               reduce using rule 6 (instruction -> RETURN expression ; .)
    ELSE            reduce using rule 6 (instruction -> RETURN expression ; .)


state 77

    (9) instruction -> { instructions_list } .

    BREAK           reduce using rule 9 (instruction -> { instructions_list } .)
    CONTINUE        reduce using rule 9 (instruction -> { instructions_list } .)
    RETURN          reduce using rule 9 (instruction -> { instructions_list } .)
    {               reduce using rule 9 (instruction -> { instructions_list } .)
    IF              reduce using rule 9 (instruction -> { instructions_list } .)
    WHILE           reduce using rule 9 (instruction -> { instructions_list } .)
    FOR             reduce using rule 9 (instruction -> { instructions_list } .)
    PRINT           reduce using rule 9 (instruction -> { instructions_list } .)
    (               reduce using rule 9 (instruction -> { instructions_list } .)
    [               reduce using rule 9 (instruction -> { instructions_list } .)
    INTNUM          reduce using rule 9 (instruction -> { instructions_list } .)
    FLOAT           reduce using rule 9 (instruction -> { instructions_list } .)
    ID              reduce using rule 9 (instruction -> { instructions_list } .)
    STRING          reduce using rule 9 (instruction -> { instructions_list } .)
    -               reduce using rule 9 (instruction -> { instructions_list } .)
    ZEROS           reduce using rule 9 (instruction -> { instructions_list } .)
    ONES            reduce using rule 9 (instruction -> { instructions_list } .)
    EYE             reduce using rule 9 (instruction -> { instructions_list } .)
    $end            reduce using rule 9 (instruction -> { instructions_list } .)
    }               reduce using rule 9 (instruction -> { instructions_list } .)
    ELSE            reduce using rule 9 (instruction -> { instructions_list } .)


state 78

    (8) instructions_list -> instructions_list instruction .

    }               reduce using rule 8 (instructions_list -> instructions_list instruction .)
    BREAK           reduce using rule 8 (instructions_list -> instructions_list instruction .)
    CONTINUE        reduce using rule 8 (instructions_list -> instructions_list instruction .)
    RETURN          reduce using rule 8 (instructions_list -> instructions_list instruction .)
    {               reduce using rule 8 (instructions_list -> instructions_list instruction .)
    IF              reduce using rule 8 (instructions_list -> instructions_list instruction .)
    WHILE           reduce using rule 8 (instructions_list -> instructions_list instruction .)
    FOR             reduce using rule 8 (instructions_list -> instructions_list instruction .)
    PRINT           reduce using rule 8 (instructions_list -> instructions_list instruction .)
    (               reduce using rule 8 (instructions_list -> instructions_list instruction .)
    [               reduce using rule 8 (instructions_list -> instructions_list instruction .)
    INTNUM          reduce using rule 8 (instructions_list -> instructions_list instruction .)
    FLOAT           reduce using rule 8 (instructions_list -> instructions_list instruction .)
    ID              reduce using rule 8 (instructions_list -> instructions_list instruction .)
    STRING          reduce using rule 8 (instructions_list -> instructions_list instruction .)
    -               reduce using rule 8 (instructions_list -> instructions_list instruction .)
    ZEROS           reduce using rule 8 (instructions_list -> instructions_list instruction .)
    ONES            reduce using rule 8 (instructions_list -> instructions_list instruction .)
    EYE             reduce using rule 8 (instructions_list -> instructions_list instruction .)


state 79

    (49) instruction -> IF ( expression . ) instruction ELSE instruction
    (50) instruction -> IF ( expression . ) instruction
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    )               shift and go to state 95
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 80

    (10) expression -> ( expression ) .

    ;               reduce using rule 10 (expression -> ( expression ) .)
    TRANSPOSITION   reduce using rule 10 (expression -> ( expression ) .)
    +               reduce using rule 10 (expression -> ( expression ) .)
    -               reduce using rule 10 (expression -> ( expression ) .)
    *               reduce using rule 10 (expression -> ( expression ) .)
    /               reduce using rule 10 (expression -> ( expression ) .)
    DOTADD          reduce using rule 10 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 10 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 10 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 10 (expression -> ( expression ) .)
    EQ              reduce using rule 10 (expression -> ( expression ) .)
    NEQ             reduce using rule 10 (expression -> ( expression ) .)
    LT              reduce using rule 10 (expression -> ( expression ) .)
    NLT             reduce using rule 10 (expression -> ( expression ) .)
    GT              reduce using rule 10 (expression -> ( expression ) .)
    NGT             reduce using rule 10 (expression -> ( expression ) .)
    )               reduce using rule 10 (expression -> ( expression ) .)
    ,               reduce using rule 10 (expression -> ( expression ) .)
    ]               reduce using rule 10 (expression -> ( expression ) .)
    :               reduce using rule 10 (expression -> ( expression ) .)
    BREAK           reduce using rule 10 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 10 (expression -> ( expression ) .)
    RETURN          reduce using rule 10 (expression -> ( expression ) .)
    {               reduce using rule 10 (expression -> ( expression ) .)
    IF              reduce using rule 10 (expression -> ( expression ) .)
    WHILE           reduce using rule 10 (expression -> ( expression ) .)
    FOR             reduce using rule 10 (expression -> ( expression ) .)
    PRINT           reduce using rule 10 (expression -> ( expression ) .)
    (               reduce using rule 10 (expression -> ( expression ) .)
    [               reduce using rule 10 (expression -> ( expression ) .)
    INTNUM          reduce using rule 10 (expression -> ( expression ) .)
    FLOAT           reduce using rule 10 (expression -> ( expression ) .)
    ID              reduce using rule 10 (expression -> ( expression ) .)
    STRING          reduce using rule 10 (expression -> ( expression ) .)
    ZEROS           reduce using rule 10 (expression -> ( expression ) .)
    ONES            reduce using rule 10 (expression -> ( expression ) .)
    EYE             reduce using rule 10 (expression -> ( expression ) .)


state 81

    (51) instruction -> WHILE ( expression . ) instruction
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    )               shift and go to state 96
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 82

    (53) instruction -> FOR ID = . range instruction
    (52) range -> . expression : expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    range                          shift and go to state 97
    expression                     shift and go to state 98

state 83

    (22) expression -> ID = expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 22 (expression -> ID = expression .)
    +               reduce using rule 22 (expression -> ID = expression .)
    -               reduce using rule 22 (expression -> ID = expression .)
    *               reduce using rule 22 (expression -> ID = expression .)
    /               reduce using rule 22 (expression -> ID = expression .)
    DOTADD          reduce using rule 22 (expression -> ID = expression .)
    DOTSUB          reduce using rule 22 (expression -> ID = expression .)
    DOTMUL          reduce using rule 22 (expression -> ID = expression .)
    DOTDIV          reduce using rule 22 (expression -> ID = expression .)
    EQ              reduce using rule 22 (expression -> ID = expression .)
    NEQ             reduce using rule 22 (expression -> ID = expression .)
    LT              reduce using rule 22 (expression -> ID = expression .)
    NLT             reduce using rule 22 (expression -> ID = expression .)
    GT              reduce using rule 22 (expression -> ID = expression .)
    NGT             reduce using rule 22 (expression -> ID = expression .)
    )               reduce using rule 22 (expression -> ID = expression .)
    ,               reduce using rule 22 (expression -> ID = expression .)
    ]               reduce using rule 22 (expression -> ID = expression .)
    :               reduce using rule 22 (expression -> ID = expression .)
    BREAK           reduce using rule 22 (expression -> ID = expression .)
    CONTINUE        reduce using rule 22 (expression -> ID = expression .)
    RETURN          reduce using rule 22 (expression -> ID = expression .)
    {               reduce using rule 22 (expression -> ID = expression .)
    IF              reduce using rule 22 (expression -> ID = expression .)
    WHILE           reduce using rule 22 (expression -> ID = expression .)
    FOR             reduce using rule 22 (expression -> ID = expression .)
    PRINT           reduce using rule 22 (expression -> ID = expression .)
    (               reduce using rule 22 (expression -> ID = expression .)
    [               reduce using rule 22 (expression -> ID = expression .)
    INTNUM          reduce using rule 22 (expression -> ID = expression .)
    FLOAT           reduce using rule 22 (expression -> ID = expression .)
    ID              reduce using rule 22 (expression -> ID = expression .)
    STRING          reduce using rule 22 (expression -> ID = expression .)
    ZEROS           reduce using rule 22 (expression -> ID = expression .)
    ONES            reduce using rule 22 (expression -> ID = expression .)
    EYE             reduce using rule 22 (expression -> ID = expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 22 (expression -> ID = expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 84

    (23) expression -> ID ADDASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    +               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    -               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    *               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    /               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    DOTADD          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    DOTSUB          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    DOTMUL          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    DOTDIV          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    EQ              reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    NEQ             reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    LT              reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    NLT             reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    GT              reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    NGT             reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    )               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    ,               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    ]               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    :               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    BREAK           reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    CONTINUE        reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    RETURN          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    {               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    IF              reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    WHILE           reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    FOR             reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    PRINT           reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    (               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    [               reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    INTNUM          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    FLOAT           reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    ID              reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    STRING          reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    ZEROS           reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    ONES            reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    EYE             reduce using rule 23 (expression -> ID ADDASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 23 (expression -> ID ADDASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 85

    (24) expression -> ID SUBASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    +               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    -               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    *               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    /               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    DOTADD          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    DOTSUB          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    DOTMUL          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    DOTDIV          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    EQ              reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    NEQ             reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    LT              reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    NLT             reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    GT              reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    NGT             reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    )               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    ,               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    ]               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    :               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    BREAK           reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    CONTINUE        reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    RETURN          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    {               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    IF              reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    WHILE           reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    FOR             reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    PRINT           reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    (               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    [               reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    INTNUM          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    FLOAT           reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    ID              reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    STRING          reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    ZEROS           reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    ONES            reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    EYE             reduce using rule 24 (expression -> ID SUBASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 24 (expression -> ID SUBASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 86

    (25) expression -> ID MULASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    +               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    -               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    *               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    /               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    DOTADD          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    DOTSUB          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    DOTMUL          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    DOTDIV          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    EQ              reduce using rule 25 (expression -> ID MULASSIGN expression .)
    NEQ             reduce using rule 25 (expression -> ID MULASSIGN expression .)
    LT              reduce using rule 25 (expression -> ID MULASSIGN expression .)
    NLT             reduce using rule 25 (expression -> ID MULASSIGN expression .)
    GT              reduce using rule 25 (expression -> ID MULASSIGN expression .)
    NGT             reduce using rule 25 (expression -> ID MULASSIGN expression .)
    )               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    ,               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    ]               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    :               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    BREAK           reduce using rule 25 (expression -> ID MULASSIGN expression .)
    CONTINUE        reduce using rule 25 (expression -> ID MULASSIGN expression .)
    RETURN          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    {               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    IF              reduce using rule 25 (expression -> ID MULASSIGN expression .)
    WHILE           reduce using rule 25 (expression -> ID MULASSIGN expression .)
    FOR             reduce using rule 25 (expression -> ID MULASSIGN expression .)
    PRINT           reduce using rule 25 (expression -> ID MULASSIGN expression .)
    (               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    [               reduce using rule 25 (expression -> ID MULASSIGN expression .)
    INTNUM          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    FLOAT           reduce using rule 25 (expression -> ID MULASSIGN expression .)
    ID              reduce using rule 25 (expression -> ID MULASSIGN expression .)
    STRING          reduce using rule 25 (expression -> ID MULASSIGN expression .)
    ZEROS           reduce using rule 25 (expression -> ID MULASSIGN expression .)
    ONES            reduce using rule 25 (expression -> ID MULASSIGN expression .)
    EYE             reduce using rule 25 (expression -> ID MULASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 25 (expression -> ID MULASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 87

    (26) expression -> ID DIVASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    +               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    -               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    *               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    /               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    DOTADD          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    DOTSUB          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    DOTMUL          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    DOTDIV          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    EQ              reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    NEQ             reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    LT              reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    NLT             reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    GT              reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    NGT             reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    )               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    ,               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    ]               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    :               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    BREAK           reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    CONTINUE        reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    RETURN          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    {               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    IF              reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    WHILE           reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    FOR             reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    PRINT           reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    (               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    [               reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    INTNUM          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    FLOAT           reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    ID              reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    STRING          reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    ZEROS           reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    ONES            reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    EYE             reduce using rule 26 (expression -> ID DIVASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 26 (expression -> ID DIVASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 88

    (27) expression -> ID [ expression_list . ] = expression
    (28) expression -> ID [ expression_list . ] ADDASSIGN expression
    (29) expression -> ID [ expression_list . ] SUBASSIGN expression
    (30) expression -> ID [ expression_list . ] MULASSIGN expression
    (31) expression -> ID [ expression_list . ] DIVASSIGN expression
    (32) expression -> ID [ expression_list . ]
    (48) expression_list -> expression_list . , expression

    ]               shift and go to state 99
    ,               shift and go to state 90


state 89

    (54) instruction -> PRINT expression_list ; .

    BREAK           reduce using rule 54 (instruction -> PRINT expression_list ; .)
    CONTINUE        reduce using rule 54 (instruction -> PRINT expression_list ; .)
    RETURN          reduce using rule 54 (instruction -> PRINT expression_list ; .)
    {               reduce using rule 54 (instruction -> PRINT expression_list ; .)
    IF              reduce using rule 54 (instruction -> PRINT expression_list ; .)
    WHILE           reduce using rule 54 (instruction -> PRINT expression_list ; .)
    FOR             reduce using rule 54 (instruction -> PRINT expression_list ; .)
    PRINT           reduce using rule 54 (instruction -> PRINT expression_list ; .)
    (               reduce using rule 54 (instruction -> PRINT expression_list ; .)
    [               reduce using rule 54 (instruction -> PRINT expression_list ; .)
    INTNUM          reduce using rule 54 (instruction -> PRINT expression_list ; .)
    FLOAT           reduce using rule 54 (instruction -> PRINT expression_list ; .)
    ID              reduce using rule 54 (instruction -> PRINT expression_list ; .)
    STRING          reduce using rule 54 (instruction -> PRINT expression_list ; .)
    -               reduce using rule 54 (instruction -> PRINT expression_list ; .)
    ZEROS           reduce using rule 54 (instruction -> PRINT expression_list ; .)
    ONES            reduce using rule 54 (instruction -> PRINT expression_list ; .)
    EYE             reduce using rule 54 (instruction -> PRINT expression_list ; .)
    $end            reduce using rule 54 (instruction -> PRINT expression_list ; .)
    }               reduce using rule 54 (instruction -> PRINT expression_list ; .)
    ELSE            reduce using rule 54 (instruction -> PRINT expression_list ; .)


state 90

    (48) expression_list -> expression_list , . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 100

state 91

    (12) expression -> [ expression_list ] .

    ;               reduce using rule 12 (expression -> [ expression_list ] .)
    TRANSPOSITION   reduce using rule 12 (expression -> [ expression_list ] .)
    +               reduce using rule 12 (expression -> [ expression_list ] .)
    -               reduce using rule 12 (expression -> [ expression_list ] .)
    *               reduce using rule 12 (expression -> [ expression_list ] .)
    /               reduce using rule 12 (expression -> [ expression_list ] .)
    DOTADD          reduce using rule 12 (expression -> [ expression_list ] .)
    DOTSUB          reduce using rule 12 (expression -> [ expression_list ] .)
    DOTMUL          reduce using rule 12 (expression -> [ expression_list ] .)
    DOTDIV          reduce using rule 12 (expression -> [ expression_list ] .)
    EQ              reduce using rule 12 (expression -> [ expression_list ] .)
    NEQ             reduce using rule 12 (expression -> [ expression_list ] .)
    LT              reduce using rule 12 (expression -> [ expression_list ] .)
    NLT             reduce using rule 12 (expression -> [ expression_list ] .)
    GT              reduce using rule 12 (expression -> [ expression_list ] .)
    NGT             reduce using rule 12 (expression -> [ expression_list ] .)
    )               reduce using rule 12 (expression -> [ expression_list ] .)
    ,               reduce using rule 12 (expression -> [ expression_list ] .)
    ]               reduce using rule 12 (expression -> [ expression_list ] .)
    :               reduce using rule 12 (expression -> [ expression_list ] .)
    BREAK           reduce using rule 12 (expression -> [ expression_list ] .)
    CONTINUE        reduce using rule 12 (expression -> [ expression_list ] .)
    RETURN          reduce using rule 12 (expression -> [ expression_list ] .)
    {               reduce using rule 12 (expression -> [ expression_list ] .)
    IF              reduce using rule 12 (expression -> [ expression_list ] .)
    WHILE           reduce using rule 12 (expression -> [ expression_list ] .)
    FOR             reduce using rule 12 (expression -> [ expression_list ] .)
    PRINT           reduce using rule 12 (expression -> [ expression_list ] .)
    (               reduce using rule 12 (expression -> [ expression_list ] .)
    [               reduce using rule 12 (expression -> [ expression_list ] .)
    INTNUM          reduce using rule 12 (expression -> [ expression_list ] .)
    FLOAT           reduce using rule 12 (expression -> [ expression_list ] .)
    ID              reduce using rule 12 (expression -> [ expression_list ] .)
    STRING          reduce using rule 12 (expression -> [ expression_list ] .)
    ZEROS           reduce using rule 12 (expression -> [ expression_list ] .)
    ONES            reduce using rule 12 (expression -> [ expression_list ] .)
    EYE             reduce using rule 12 (expression -> [ expression_list ] .)


state 92

    (19) expression -> ZEROS ( expression_list . )
    (48) expression_list -> expression_list . , expression

    )               shift and go to state 101
    ,               shift and go to state 90


state 93

    (20) expression -> ONES ( expression_list . )
    (48) expression_list -> expression_list . , expression

    )               shift and go to state 102
    ,               shift and go to state 90


state 94

    (21) expression -> EYE ( expression_list . )
    (48) expression_list -> expression_list . , expression

    )               shift and go to state 103
    ,               shift and go to state 90


state 95

    (49) instruction -> IF ( expression ) . instruction ELSE instruction
    (50) instruction -> IF ( expression ) . instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 3
    instruction                    shift and go to state 104

state 96

    (51) instruction -> WHILE ( expression ) . instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 3
    instruction                    shift and go to state 105

state 97

    (53) instruction -> FOR ID = range . instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    instruction                    shift and go to state 106
    expression                     shift and go to state 3

state 98

    (52) range -> expression . : expression
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    :               shift and go to state 107
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 99

    (27) expression -> ID [ expression_list ] . = expression
    (28) expression -> ID [ expression_list ] . ADDASSIGN expression
    (29) expression -> ID [ expression_list ] . SUBASSIGN expression
    (30) expression -> ID [ expression_list ] . MULASSIGN expression
    (31) expression -> ID [ expression_list ] . DIVASSIGN expression
    (32) expression -> ID [ expression_list ] .

    =               shift and go to state 108
    ADDASSIGN       shift and go to state 109
    SUBASSIGN       shift and go to state 110
    MULASSIGN       shift and go to state 111
    DIVASSIGN       shift and go to state 112
    ;               reduce using rule 32 (expression -> ID [ expression_list ] .)
    TRANSPOSITION   reduce using rule 32 (expression -> ID [ expression_list ] .)
    +               reduce using rule 32 (expression -> ID [ expression_list ] .)
    -               reduce using rule 32 (expression -> ID [ expression_list ] .)
    *               reduce using rule 32 (expression -> ID [ expression_list ] .)
    /               reduce using rule 32 (expression -> ID [ expression_list ] .)
    DOTADD          reduce using rule 32 (expression -> ID [ expression_list ] .)
    DOTSUB          reduce using rule 32 (expression -> ID [ expression_list ] .)
    DOTMUL          reduce using rule 32 (expression -> ID [ expression_list ] .)
    DOTDIV          reduce using rule 32 (expression -> ID [ expression_list ] .)
    EQ              reduce using rule 32 (expression -> ID [ expression_list ] .)
    NEQ             reduce using rule 32 (expression -> ID [ expression_list ] .)
    LT              reduce using rule 32 (expression -> ID [ expression_list ] .)
    NLT             reduce using rule 32 (expression -> ID [ expression_list ] .)
    GT              reduce using rule 32 (expression -> ID [ expression_list ] .)
    NGT             reduce using rule 32 (expression -> ID [ expression_list ] .)
    )               reduce using rule 32 (expression -> ID [ expression_list ] .)
    ,               reduce using rule 32 (expression -> ID [ expression_list ] .)
    ]               reduce using rule 32 (expression -> ID [ expression_list ] .)
    :               reduce using rule 32 (expression -> ID [ expression_list ] .)
    BREAK           reduce using rule 32 (expression -> ID [ expression_list ] .)
    CONTINUE        reduce using rule 32 (expression -> ID [ expression_list ] .)
    RETURN          reduce using rule 32 (expression -> ID [ expression_list ] .)
    {               reduce using rule 32 (expression -> ID [ expression_list ] .)
    IF              reduce using rule 32 (expression -> ID [ expression_list ] .)
    WHILE           reduce using rule 32 (expression -> ID [ expression_list ] .)
    FOR             reduce using rule 32 (expression -> ID [ expression_list ] .)
    PRINT           reduce using rule 32 (expression -> ID [ expression_list ] .)
    (               reduce using rule 32 (expression -> ID [ expression_list ] .)
    [               reduce using rule 32 (expression -> ID [ expression_list ] .)
    INTNUM          reduce using rule 32 (expression -> ID [ expression_list ] .)
    FLOAT           reduce using rule 32 (expression -> ID [ expression_list ] .)
    ID              reduce using rule 32 (expression -> ID [ expression_list ] .)
    STRING          reduce using rule 32 (expression -> ID [ expression_list ] .)
    ZEROS           reduce using rule 32 (expression -> ID [ expression_list ] .)
    ONES            reduce using rule 32 (expression -> ID [ expression_list ] .)
    EYE             reduce using rule 32 (expression -> ID [ expression_list ] .)


state 100

    (48) expression_list -> expression_list , expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 48 (expression_list -> expression_list , expression .)
    ,               reduce using rule 48 (expression_list -> expression_list , expression .)
    ]               reduce using rule 48 (expression_list -> expression_list , expression .)
    )               reduce using rule 48 (expression_list -> expression_list , expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38


state 101

    (19) expression -> ZEROS ( expression_list ) .

    ;               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    TRANSPOSITION   reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    +               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    -               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    *               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    /               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    DOTADD          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    DOTSUB          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    DOTMUL          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    DOTDIV          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    EQ              reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    NEQ             reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    LT              reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    NLT             reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    GT              reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    NGT             reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    )               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    ,               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    ]               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    :               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    BREAK           reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    CONTINUE        reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    RETURN          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    {               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    IF              reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    WHILE           reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    FOR             reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    PRINT           reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    (               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    [               reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    INTNUM          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    FLOAT           reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    ID              reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    STRING          reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    ZEROS           reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    ONES            reduce using rule 19 (expression -> ZEROS ( expression_list ) .)
    EYE             reduce using rule 19 (expression -> ZEROS ( expression_list ) .)


state 102

    (20) expression -> ONES ( expression_list ) .

    ;               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    TRANSPOSITION   reduce using rule 20 (expression -> ONES ( expression_list ) .)
    +               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    -               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    *               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    /               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    DOTADD          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    DOTSUB          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    DOTMUL          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    DOTDIV          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    EQ              reduce using rule 20 (expression -> ONES ( expression_list ) .)
    NEQ             reduce using rule 20 (expression -> ONES ( expression_list ) .)
    LT              reduce using rule 20 (expression -> ONES ( expression_list ) .)
    NLT             reduce using rule 20 (expression -> ONES ( expression_list ) .)
    GT              reduce using rule 20 (expression -> ONES ( expression_list ) .)
    NGT             reduce using rule 20 (expression -> ONES ( expression_list ) .)
    )               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    ,               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    ]               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    :               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    BREAK           reduce using rule 20 (expression -> ONES ( expression_list ) .)
    CONTINUE        reduce using rule 20 (expression -> ONES ( expression_list ) .)
    RETURN          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    {               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    IF              reduce using rule 20 (expression -> ONES ( expression_list ) .)
    WHILE           reduce using rule 20 (expression -> ONES ( expression_list ) .)
    FOR             reduce using rule 20 (expression -> ONES ( expression_list ) .)
    PRINT           reduce using rule 20 (expression -> ONES ( expression_list ) .)
    (               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    [               reduce using rule 20 (expression -> ONES ( expression_list ) .)
    INTNUM          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    FLOAT           reduce using rule 20 (expression -> ONES ( expression_list ) .)
    ID              reduce using rule 20 (expression -> ONES ( expression_list ) .)
    STRING          reduce using rule 20 (expression -> ONES ( expression_list ) .)
    ZEROS           reduce using rule 20 (expression -> ONES ( expression_list ) .)
    ONES            reduce using rule 20 (expression -> ONES ( expression_list ) .)
    EYE             reduce using rule 20 (expression -> ONES ( expression_list ) .)


state 103

    (21) expression -> EYE ( expression_list ) .

    ;               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    TRANSPOSITION   reduce using rule 21 (expression -> EYE ( expression_list ) .)
    +               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    -               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    *               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    /               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    DOTADD          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    DOTSUB          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    DOTMUL          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    DOTDIV          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    EQ              reduce using rule 21 (expression -> EYE ( expression_list ) .)
    NEQ             reduce using rule 21 (expression -> EYE ( expression_list ) .)
    LT              reduce using rule 21 (expression -> EYE ( expression_list ) .)
    NLT             reduce using rule 21 (expression -> EYE ( expression_list ) .)
    GT              reduce using rule 21 (expression -> EYE ( expression_list ) .)
    NGT             reduce using rule 21 (expression -> EYE ( expression_list ) .)
    )               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    ,               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    ]               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    :               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    BREAK           reduce using rule 21 (expression -> EYE ( expression_list ) .)
    CONTINUE        reduce using rule 21 (expression -> EYE ( expression_list ) .)
    RETURN          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    {               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    IF              reduce using rule 21 (expression -> EYE ( expression_list ) .)
    WHILE           reduce using rule 21 (expression -> EYE ( expression_list ) .)
    FOR             reduce using rule 21 (expression -> EYE ( expression_list ) .)
    PRINT           reduce using rule 21 (expression -> EYE ( expression_list ) .)
    (               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    [               reduce using rule 21 (expression -> EYE ( expression_list ) .)
    INTNUM          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    FLOAT           reduce using rule 21 (expression -> EYE ( expression_list ) .)
    ID              reduce using rule 21 (expression -> EYE ( expression_list ) .)
    STRING          reduce using rule 21 (expression -> EYE ( expression_list ) .)
    ZEROS           reduce using rule 21 (expression -> EYE ( expression_list ) .)
    ONES            reduce using rule 21 (expression -> EYE ( expression_list ) .)
    EYE             reduce using rule 21 (expression -> EYE ( expression_list ) .)


state 104

    (49) instruction -> IF ( expression ) instruction . ELSE instruction
    (50) instruction -> IF ( expression ) instruction .

    ELSE            shift and go to state 113
    BREAK           reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    RETURN          reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    {               reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    IF              reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    WHILE           reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    FOR             reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    PRINT           reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    (               reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    [               reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    INTNUM          reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    FLOAT           reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    ID              reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    STRING          reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    -               reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    ZEROS           reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    ONES            reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    EYE             reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    $end            reduce using rule 50 (instruction -> IF ( expression ) instruction .)
    }               reduce using rule 50 (instruction -> IF ( expression ) instruction .)

  ! ELSE            [ reduce using rule 50 (instruction -> IF ( expression ) instruction .) ]


state 105

    (51) instruction -> WHILE ( expression ) instruction .

    BREAK           reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    {               reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    IF              reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    (               reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    [               reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    FLOAT           reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    ID              reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    STRING          reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    -               reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    ZEROS           reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    $end            reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    }               reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 51 (instruction -> WHILE ( expression ) instruction .)


state 106

    (53) instruction -> FOR ID = range instruction .

    BREAK           reduce using rule 53 (instruction -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 53 (instruction -> FOR ID = range instruction .)
    RETURN          reduce using rule 53 (instruction -> FOR ID = range instruction .)
    {               reduce using rule 53 (instruction -> FOR ID = range instruction .)
    IF              reduce using rule 53 (instruction -> FOR ID = range instruction .)
    WHILE           reduce using rule 53 (instruction -> FOR ID = range instruction .)
    FOR             reduce using rule 53 (instruction -> FOR ID = range instruction .)
    PRINT           reduce using rule 53 (instruction -> FOR ID = range instruction .)
    (               reduce using rule 53 (instruction -> FOR ID = range instruction .)
    [               reduce using rule 53 (instruction -> FOR ID = range instruction .)
    INTNUM          reduce using rule 53 (instruction -> FOR ID = range instruction .)
    FLOAT           reduce using rule 53 (instruction -> FOR ID = range instruction .)
    ID              reduce using rule 53 (instruction -> FOR ID = range instruction .)
    STRING          reduce using rule 53 (instruction -> FOR ID = range instruction .)
    -               reduce using rule 53 (instruction -> FOR ID = range instruction .)
    ZEROS           reduce using rule 53 (instruction -> FOR ID = range instruction .)
    ONES            reduce using rule 53 (instruction -> FOR ID = range instruction .)
    EYE             reduce using rule 53 (instruction -> FOR ID = range instruction .)
    $end            reduce using rule 53 (instruction -> FOR ID = range instruction .)
    }               reduce using rule 53 (instruction -> FOR ID = range instruction .)
    ELSE            reduce using rule 53 (instruction -> FOR ID = range instruction .)


state 107

    (52) range -> expression : . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 114

state 108

    (27) expression -> ID [ expression_list ] = . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 115

state 109

    (28) expression -> ID [ expression_list ] ADDASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 116

state 110

    (29) expression -> ID [ expression_list ] SUBASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 117

state 111

    (30) expression -> ID [ expression_list ] MULASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 118

state 112

    (31) expression -> ID [ expression_list ] DIVASSIGN . expression
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 119

state 113

    (49) instruction -> IF ( expression ) instruction ELSE . instruction
    (3) instruction -> . expression ;
    (4) instruction -> . BREAK ;
    (5) instruction -> . CONTINUE ;
    (6) instruction -> . RETURN expression ;
    (9) instruction -> . { instructions_list }
    (49) instruction -> . IF ( expression ) instruction ELSE instruction
    (50) instruction -> . IF ( expression ) instruction
    (51) instruction -> . WHILE ( expression ) instruction
    (53) instruction -> . FOR ID = range instruction
    (54) instruction -> . PRINT expression_list ;
    (10) expression -> . ( expression )
    (11) expression -> . [ ]
    (12) expression -> . [ expression_list ]
    (13) expression -> . INTNUM
    (14) expression -> . FLOAT
    (15) expression -> . ID
    (16) expression -> . STRING
    (17) expression -> . expression TRANSPOSITION
    (18) expression -> . - expression
    (19) expression -> . ZEROS ( expression_list )
    (20) expression -> . ONES ( expression_list )
    (21) expression -> . EYE ( expression_list )
    (22) expression -> . ID = expression
    (23) expression -> . ID ADDASSIGN expression
    (24) expression -> . ID SUBASSIGN expression
    (25) expression -> . ID MULASSIGN expression
    (26) expression -> . ID DIVASSIGN expression
    (27) expression -> . ID [ expression_list ] = expression
    (28) expression -> . ID [ expression_list ] ADDASSIGN expression
    (29) expression -> . ID [ expression_list ] SUBASSIGN expression
    (30) expression -> . ID [ expression_list ] MULASSIGN expression
    (31) expression -> . ID [ expression_list ] DIVASSIGN expression
    (32) expression -> . ID [ expression_list ]
    (33) expression -> . expression + expression
    (34) expression -> . expression - expression
    (35) expression -> . expression * expression
    (36) expression -> . expression / expression
    (37) expression -> . expression DOTADD expression
    (38) expression -> . expression DOTSUB expression
    (39) expression -> . expression DOTMUL expression
    (40) expression -> . expression DOTDIV expression
    (41) expression -> . expression EQ expression
    (42) expression -> . expression NEQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression NLT expression
    (45) expression -> . expression GT expression
    (46) expression -> . expression NGT expression

    BREAK           shift and go to state 4
    CONTINUE        shift and go to state 5
    RETURN          shift and go to state 6
    {               shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    PRINT           shift and go to state 13
    (               shift and go to state 9
    [               shift and go to state 14
    INTNUM          shift and go to state 15
    FLOAT           shift and go to state 16
    ID              shift and go to state 12
    STRING          shift and go to state 17
    -               shift and go to state 18
    ZEROS           shift and go to state 19
    ONES            shift and go to state 20
    EYE             shift and go to state 21

    expression                     shift and go to state 3
    instruction                    shift and go to state 120

state 114

    (52) range -> expression : expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    BREAK           reduce using rule 52 (range -> expression : expression .)
    CONTINUE        reduce using rule 52 (range -> expression : expression .)
    RETURN          reduce using rule 52 (range -> expression : expression .)
    {               reduce using rule 52 (range -> expression : expression .)
    IF              reduce using rule 52 (range -> expression : expression .)
    WHILE           reduce using rule 52 (range -> expression : expression .)
    FOR             reduce using rule 52 (range -> expression : expression .)
    PRINT           reduce using rule 52 (range -> expression : expression .)
    (               reduce using rule 52 (range -> expression : expression .)
    [               reduce using rule 52 (range -> expression : expression .)
    INTNUM          reduce using rule 52 (range -> expression : expression .)
    FLOAT           reduce using rule 52 (range -> expression : expression .)
    ID              reduce using rule 52 (range -> expression : expression .)
    STRING          reduce using rule 52 (range -> expression : expression .)
    -               reduce using rule 52 (range -> expression : expression .)
    ZEROS           reduce using rule 52 (range -> expression : expression .)
    ONES            reduce using rule 52 (range -> expression : expression .)
    EYE             reduce using rule 52 (range -> expression : expression .)
    TRANSPOSITION   shift and go to state 24
    +               shift and go to state 25
    *               shift and go to state 27
    /               shift and go to state 28
    DOTADD          shift and go to state 29
    DOTSUB          shift and go to state 30
    DOTMUL          shift and go to state 31
    DOTDIV          shift and go to state 32
    EQ              shift and go to state 33
    NEQ             shift and go to state 34
    LT              shift and go to state 35
    NLT             shift and go to state 36
    GT              shift and go to state 37
    NGT             shift and go to state 38

  ! -               [ shift and go to state 26 ]


state 115

    (27) expression -> ID [ expression_list ] = expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    +               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    -               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    *               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    /               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    DOTADD          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    DOTSUB          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    DOTMUL          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    DOTDIV          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    EQ              reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    NEQ             reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    LT              reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    NLT             reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    GT              reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    NGT             reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    )               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    ,               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    ]               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    :               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    BREAK           reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    CONTINUE        reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    RETURN          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    {               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    IF              reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    WHILE           reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    FOR             reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    PRINT           reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    (               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    [               reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    INTNUM          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    FLOAT           reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    ID              reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    STRING          reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    ZEROS           reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    ONES            reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    EYE             reduce using rule 27 (expression -> ID [ expression_list ] = expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 27 (expression -> ID [ expression_list ] = expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 116

    (28) expression -> ID [ expression_list ] ADDASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    +               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    -               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    *               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    /               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    DOTADD          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    DOTSUB          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    DOTMUL          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    DOTDIV          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    EQ              reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    NEQ             reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    LT              reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    NLT             reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    GT              reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    NGT             reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    )               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ,               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ]               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    :               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    BREAK           reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    CONTINUE        reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    RETURN          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    {               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    IF              reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    WHILE           reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    FOR             reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    PRINT           reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    (               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    [               reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    INTNUM          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    FLOAT           reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ID              reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    STRING          reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ZEROS           reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ONES            reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    EYE             reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 28 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 117

    (29) expression -> ID [ expression_list ] SUBASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    +               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    -               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    *               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    /               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    DOTADD          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    DOTSUB          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    DOTMUL          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    DOTDIV          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    EQ              reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    NEQ             reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    LT              reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    NLT             reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    GT              reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    NGT             reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    )               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ,               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ]               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    :               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    BREAK           reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    CONTINUE        reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    RETURN          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    {               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    IF              reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    WHILE           reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    FOR             reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    PRINT           reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    (               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    [               reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    INTNUM          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    FLOAT           reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ID              reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    STRING          reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ZEROS           reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ONES            reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    EYE             reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 29 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 118

    (30) expression -> ID [ expression_list ] MULASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    +               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    -               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    *               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    /               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    DOTADD          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    DOTSUB          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    DOTMUL          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    DOTDIV          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    EQ              reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    NEQ             reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    LT              reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    NLT             reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    GT              reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    NGT             reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    )               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ,               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ]               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    :               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    BREAK           reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    CONTINUE        reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    RETURN          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    {               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    IF              reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    WHILE           reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    FOR             reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    PRINT           reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    (               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    [               reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    INTNUM          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    FLOAT           reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ID              reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    STRING          reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ZEROS           reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ONES            reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    EYE             reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 30 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 119

    (31) expression -> ID [ expression_list ] DIVASSIGN expression .
    (17) expression -> expression . TRANSPOSITION
    (33) expression -> expression . + expression
    (34) expression -> expression . - expression
    (35) expression -> expression . * expression
    (36) expression -> expression . / expression
    (37) expression -> expression . DOTADD expression
    (38) expression -> expression . DOTSUB expression
    (39) expression -> expression . DOTMUL expression
    (40) expression -> expression . DOTDIV expression
    (41) expression -> expression . EQ expression
    (42) expression -> expression . NEQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . NLT expression
    (45) expression -> expression . GT expression
    (46) expression -> expression . NGT expression

    ;               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    +               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    -               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    *               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    /               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    DOTADD          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    DOTSUB          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    DOTMUL          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    DOTDIV          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    EQ              reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    NEQ             reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    LT              reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    NLT             reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    GT              reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    NGT             reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    )               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ,               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ]               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    :               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    BREAK           reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    CONTINUE        reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    RETURN          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    {               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    IF              reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    WHILE           reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    FOR             reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    PRINT           reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    (               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    [               reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    INTNUM          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    FLOAT           reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ID              reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    STRING          reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ZEROS           reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ONES            reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    EYE             reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    TRANSPOSITION   shift and go to state 24

  ! TRANSPOSITION   [ reduce using rule 31 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! DOTADD          [ shift and go to state 29 ]
  ! DOTSUB          [ shift and go to state 30 ]
  ! DOTMUL          [ shift and go to state 31 ]
  ! DOTDIV          [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 33 ]
  ! NEQ             [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! NLT             [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! NGT             [ shift and go to state 38 ]


state 120

    (49) instruction -> IF ( expression ) instruction ELSE instruction .

    BREAK           reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    {               reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    (               reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    [               reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    INTNUM          reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    FLOAT           reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    STRING          reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    -               reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    ZEROS           reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    ONES            reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    EYE             reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 49 (instruction -> IF ( expression ) instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for [ in state 12 resolved as shift
