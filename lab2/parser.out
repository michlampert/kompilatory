Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction
Rule 2     program -> program instruction
Rule 3     instruction -> for_instruction
Rule 4     instruction -> while_instruction
Rule 5     instruction -> if_instruction
Rule 6     instruction -> print_instruction
Rule 7     instruction -> LCURL instructions_list RCURL
Rule 8     instruction -> BREAK SEMICOLON
Rule 9     instruction -> CONTINUE SEMICOLON
Rule 10    instruction -> RETURN expression SEMICOLON
Rule 11    instruction -> expression SEMICOLON
Rule 12    instructions_list -> instructions_list COMMA instruction
Rule 13    instructions_list -> instruction
Rule 14    boolean_expr -> arithmetic_expr LT arithmetic_expr
Rule 15    boolean_expr -> arithmetic_expr GT arithmetic_expr
Rule 16    boolean_expr -> arithmetic_expr NGT arithmetic_expr
Rule 17    boolean_expr -> arithmetic_expr NLT arithmetic_expr
Rule 18    boolean_expr -> arithmetic_expr EQ arithmetic_expr
Rule 19    boolean_expr -> arithmetic_expr NEQ arithmetic_expr
Rule 20    boolean_expr -> STRING EQ STRING
Rule 21    boolean_expr -> STRING NEQ STRING
Rule 22    arithmetic_expr -> ID
Rule 23    arithmetic_expr -> INTNUM
Rule 24    arithmetic_expr -> FLOAT
Rule 25    arithmetic_expr -> LSQUARE RSQUARE
Rule 26    arithmetic_expr -> LSQUARE arithmetic_list RSQUARE
Rule 27    arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr
Rule 28    arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr
Rule 29    arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr
Rule 30    arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr
Rule 31    arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr
Rule 32    arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr
Rule 33    arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr
Rule 34    arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr
Rule 35    arithmetic_expr -> arithmetic_expr TRANSPOSITION
Rule 36    arithmetic_expr -> MINUS arithmetic_expr
Rule 37    arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN
Rule 38    arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN
Rule 39    arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN
Rule 40    arithmetic_list -> arithmetic_list COMMA arithmetic_expr
Rule 41    arithmetic_list -> arithmetic_expr
Rule 42    assign_expr -> ID ASSIGN arithmetic_expr
Rule 43    assign_expr -> ID ADDASSIGN arithmetic_expr
Rule 44    assign_expr -> ID SUBASSIGN arithmetic_expr
Rule 45    assign_expr -> ID MULASSIGN arithmetic_expr
Rule 46    assign_expr -> ID DIVASSIGN arithmetic_expr
Rule 47    assign_expr -> ID ASSIGN boolean_expr
Rule 48    assign_expr -> ID ASSIGN STRING
Rule 49    expression -> assign_expr
Rule 50    expression -> arithmetic_expr
Rule 51    expression -> boolean_expr
Rule 52    if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction
Rule 53    if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
Rule 54    while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction
Rule 55    range -> arithmetic_expr RANGE arithmetic_expr
Rule 56    for_instruction -> FOR ID ASSIGN range instruction
Rule 57    print_instruction -> PRINT arithmetic_expr
Rule 58    print_instruction -> PRINT boolean_expr

Terminals, with rules where they appear

ADDASSIGN            : 43
ASSIGN               : 42 47 48 56
BREAK                : 8
COMMA                : 12 40
CONTINUE             : 9
DIVASSIGN            : 46
DIVIDE               : 30
DOTADD               : 31
DOTDIV               : 34
DOTMUL               : 32
DOTSUB               : 33
ELSE                 : 53
EQ                   : 18 20
EYE                  : 37
FLOAT                : 24
FOR                  : 56
GT                   : 15
ID                   : 22 42 43 44 45 46 47 48 56
IF                   : 52 53
INTNUM               : 23
LCURL                : 7
LPAREN               : 37 38 39 52 53 54
LSQUARE              : 25 26
LT                   : 14
MINUS                : 28 36
MULASSIGN            : 45
NEQ                  : 19 21
NGT                  : 16
NLT                  : 17
ONES                 : 38
PLUS                 : 27
PRINT                : 57 58
RANGE                : 55
RCURL                : 7
RETURN               : 10
RPAREN               : 37 38 39 52 53 54
RSQUARE              : 25 26
SEMICOLON            : 8 9 10 11
STRING               : 20 20 21 21 48
SUBASSIGN            : 44
THEN                 : 52 53
TIMES                : 29
TRANSPOSITION        : 35
WHILE                : 54
ZEROS                : 39
error                : 

Nonterminals, with rules where they appear

arithmetic_expr      : 14 14 15 15 16 16 17 17 18 18 19 19 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 36 37 38 39 40 41 42 43 44 45 46 50 55 55 57
arithmetic_list      : 26 40
assign_expr          : 49
boolean_expr         : 47 51 52 53 54 58
expression           : 10 11
for_instruction      : 3
if_instruction       : 5
instruction          : 1 2 12 13 52 53 53 54 56
instructions_list    : 7 12
print_instruction    : 6
program              : 2 0
range                : 56
while_instruction    : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction
    (2) program -> . program instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    program                        shift and go to state 1
    instruction                    shift and go to state 2
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    boolean_expr                   shift and go to state 15
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 1

    (0) S' -> program .
    (2) program -> program . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    instruction                    shift and go to state 28
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    boolean_expr                   shift and go to state 15
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 2

    (1) program -> instruction .

    LCURL           reduce using rule 1 (program -> instruction .)
    BREAK           reduce using rule 1 (program -> instruction .)
    CONTINUE        reduce using rule 1 (program -> instruction .)
    RETURN          reduce using rule 1 (program -> instruction .)
    FOR             reduce using rule 1 (program -> instruction .)
    WHILE           reduce using rule 1 (program -> instruction .)
    IF              reduce using rule 1 (program -> instruction .)
    PRINT           reduce using rule 1 (program -> instruction .)
    ID              reduce using rule 1 (program -> instruction .)
    INTNUM          reduce using rule 1 (program -> instruction .)
    FLOAT           reduce using rule 1 (program -> instruction .)
    LSQUARE         reduce using rule 1 (program -> instruction .)
    MINUS           reduce using rule 1 (program -> instruction .)
    EYE             reduce using rule 1 (program -> instruction .)
    ONES            reduce using rule 1 (program -> instruction .)
    ZEROS           reduce using rule 1 (program -> instruction .)
    STRING          reduce using rule 1 (program -> instruction .)
    $end            reduce using rule 1 (program -> instruction .)


state 3

    (3) instruction -> for_instruction .

    LCURL           reduce using rule 3 (instruction -> for_instruction .)
    BREAK           reduce using rule 3 (instruction -> for_instruction .)
    CONTINUE        reduce using rule 3 (instruction -> for_instruction .)
    RETURN          reduce using rule 3 (instruction -> for_instruction .)
    FOR             reduce using rule 3 (instruction -> for_instruction .)
    WHILE           reduce using rule 3 (instruction -> for_instruction .)
    IF              reduce using rule 3 (instruction -> for_instruction .)
    PRINT           reduce using rule 3 (instruction -> for_instruction .)
    ID              reduce using rule 3 (instruction -> for_instruction .)
    INTNUM          reduce using rule 3 (instruction -> for_instruction .)
    FLOAT           reduce using rule 3 (instruction -> for_instruction .)
    LSQUARE         reduce using rule 3 (instruction -> for_instruction .)
    MINUS           reduce using rule 3 (instruction -> for_instruction .)
    EYE             reduce using rule 3 (instruction -> for_instruction .)
    ONES            reduce using rule 3 (instruction -> for_instruction .)
    ZEROS           reduce using rule 3 (instruction -> for_instruction .)
    STRING          reduce using rule 3 (instruction -> for_instruction .)
    $end            reduce using rule 3 (instruction -> for_instruction .)
    RCURL           reduce using rule 3 (instruction -> for_instruction .)
    COMMA           reduce using rule 3 (instruction -> for_instruction .)
    ELSE            reduce using rule 3 (instruction -> for_instruction .)


state 4

    (4) instruction -> while_instruction .

    LCURL           reduce using rule 4 (instruction -> while_instruction .)
    BREAK           reduce using rule 4 (instruction -> while_instruction .)
    CONTINUE        reduce using rule 4 (instruction -> while_instruction .)
    RETURN          reduce using rule 4 (instruction -> while_instruction .)
    FOR             reduce using rule 4 (instruction -> while_instruction .)
    WHILE           reduce using rule 4 (instruction -> while_instruction .)
    IF              reduce using rule 4 (instruction -> while_instruction .)
    PRINT           reduce using rule 4 (instruction -> while_instruction .)
    ID              reduce using rule 4 (instruction -> while_instruction .)
    INTNUM          reduce using rule 4 (instruction -> while_instruction .)
    FLOAT           reduce using rule 4 (instruction -> while_instruction .)
    LSQUARE         reduce using rule 4 (instruction -> while_instruction .)
    MINUS           reduce using rule 4 (instruction -> while_instruction .)
    EYE             reduce using rule 4 (instruction -> while_instruction .)
    ONES            reduce using rule 4 (instruction -> while_instruction .)
    ZEROS           reduce using rule 4 (instruction -> while_instruction .)
    STRING          reduce using rule 4 (instruction -> while_instruction .)
    $end            reduce using rule 4 (instruction -> while_instruction .)
    RCURL           reduce using rule 4 (instruction -> while_instruction .)
    COMMA           reduce using rule 4 (instruction -> while_instruction .)
    ELSE            reduce using rule 4 (instruction -> while_instruction .)


state 5

    (5) instruction -> if_instruction .

    LCURL           reduce using rule 5 (instruction -> if_instruction .)
    BREAK           reduce using rule 5 (instruction -> if_instruction .)
    CONTINUE        reduce using rule 5 (instruction -> if_instruction .)
    RETURN          reduce using rule 5 (instruction -> if_instruction .)
    FOR             reduce using rule 5 (instruction -> if_instruction .)
    WHILE           reduce using rule 5 (instruction -> if_instruction .)
    IF              reduce using rule 5 (instruction -> if_instruction .)
    PRINT           reduce using rule 5 (instruction -> if_instruction .)
    ID              reduce using rule 5 (instruction -> if_instruction .)
    INTNUM          reduce using rule 5 (instruction -> if_instruction .)
    FLOAT           reduce using rule 5 (instruction -> if_instruction .)
    LSQUARE         reduce using rule 5 (instruction -> if_instruction .)
    MINUS           reduce using rule 5 (instruction -> if_instruction .)
    EYE             reduce using rule 5 (instruction -> if_instruction .)
    ONES            reduce using rule 5 (instruction -> if_instruction .)
    ZEROS           reduce using rule 5 (instruction -> if_instruction .)
    STRING          reduce using rule 5 (instruction -> if_instruction .)
    $end            reduce using rule 5 (instruction -> if_instruction .)
    RCURL           reduce using rule 5 (instruction -> if_instruction .)
    COMMA           reduce using rule 5 (instruction -> if_instruction .)
    ELSE            reduce using rule 5 (instruction -> if_instruction .)


state 6

    (6) instruction -> print_instruction .

    LCURL           reduce using rule 6 (instruction -> print_instruction .)
    BREAK           reduce using rule 6 (instruction -> print_instruction .)
    CONTINUE        reduce using rule 6 (instruction -> print_instruction .)
    RETURN          reduce using rule 6 (instruction -> print_instruction .)
    FOR             reduce using rule 6 (instruction -> print_instruction .)
    WHILE           reduce using rule 6 (instruction -> print_instruction .)
    IF              reduce using rule 6 (instruction -> print_instruction .)
    PRINT           reduce using rule 6 (instruction -> print_instruction .)
    ID              reduce using rule 6 (instruction -> print_instruction .)
    INTNUM          reduce using rule 6 (instruction -> print_instruction .)
    FLOAT           reduce using rule 6 (instruction -> print_instruction .)
    LSQUARE         reduce using rule 6 (instruction -> print_instruction .)
    MINUS           reduce using rule 6 (instruction -> print_instruction .)
    EYE             reduce using rule 6 (instruction -> print_instruction .)
    ONES            reduce using rule 6 (instruction -> print_instruction .)
    ZEROS           reduce using rule 6 (instruction -> print_instruction .)
    STRING          reduce using rule 6 (instruction -> print_instruction .)
    $end            reduce using rule 6 (instruction -> print_instruction .)
    RCURL           reduce using rule 6 (instruction -> print_instruction .)
    COMMA           reduce using rule 6 (instruction -> print_instruction .)
    ELSE            reduce using rule 6 (instruction -> print_instruction .)


state 7

    (7) instruction -> LCURL . instructions_list RCURL
    (12) instructions_list -> . instructions_list COMMA instruction
    (13) instructions_list -> . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    instructions_list              shift and go to state 29
    instruction                    shift and go to state 30
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    boolean_expr                   shift and go to state 15
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 8

    (8) instruction -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 31


state 9

    (9) instruction -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 32


state 10

    (10) instruction -> RETURN . expression SEMICOLON
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    expression                     shift and go to state 33
    assign_expr                    shift and go to state 19
    arithmetic_expr                shift and go to state 18
    boolean_expr                   shift and go to state 15

state 11

    (11) instruction -> expression . SEMICOLON

    SEMICOLON       shift and go to state 34


state 12

    (56) for_instruction -> FOR . ID ASSIGN range instruction

    ID              shift and go to state 35


state 13

    (42) assign_expr -> ID . ASSIGN arithmetic_expr
    (43) assign_expr -> ID . ADDASSIGN arithmetic_expr
    (44) assign_expr -> ID . SUBASSIGN arithmetic_expr
    (45) assign_expr -> ID . MULASSIGN arithmetic_expr
    (46) assign_expr -> ID . DIVASSIGN arithmetic_expr
    (47) assign_expr -> ID . ASSIGN boolean_expr
    (48) assign_expr -> ID . ASSIGN STRING
    (22) arithmetic_expr -> ID .

    ASSIGN          shift and go to state 36
    ADDASSIGN       shift and go to state 37
    SUBASSIGN       shift and go to state 38
    MULASSIGN       shift and go to state 39
    DIVASSIGN       shift and go to state 40
    PLUS            reduce using rule 22 (arithmetic_expr -> ID .)
    MINUS           reduce using rule 22 (arithmetic_expr -> ID .)
    TIMES           reduce using rule 22 (arithmetic_expr -> ID .)
    DIVIDE          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTADD          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTMUL          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTSUB          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTDIV          reduce using rule 22 (arithmetic_expr -> ID .)
    TRANSPOSITION   reduce using rule 22 (arithmetic_expr -> ID .)
    LT              reduce using rule 22 (arithmetic_expr -> ID .)
    GT              reduce using rule 22 (arithmetic_expr -> ID .)
    NGT             reduce using rule 22 (arithmetic_expr -> ID .)
    NLT             reduce using rule 22 (arithmetic_expr -> ID .)
    EQ              reduce using rule 22 (arithmetic_expr -> ID .)
    NEQ             reduce using rule 22 (arithmetic_expr -> ID .)
    SEMICOLON       reduce using rule 22 (arithmetic_expr -> ID .)


state 14

    (54) while_instruction -> WHILE . LPAREN boolean_expr RPAREN instruction

    LPAREN          shift and go to state 41


state 15

    (51) expression -> boolean_expr .

    SEMICOLON       reduce using rule 51 (expression -> boolean_expr .)


state 16

    (52) if_instruction -> IF . LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> IF . LPAREN boolean_expr RPAREN THEN instruction ELSE instruction

    LPAREN          shift and go to state 42


state 17

    (57) print_instruction -> PRINT . arithmetic_expr
    (58) print_instruction -> PRINT . boolean_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    arithmetic_expr                shift and go to state 43
    boolean_expr                   shift and go to state 44

state 18

    (50) expression -> arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION
    (14) boolean_expr -> arithmetic_expr . LT arithmetic_expr
    (15) boolean_expr -> arithmetic_expr . GT arithmetic_expr
    (16) boolean_expr -> arithmetic_expr . NGT arithmetic_expr
    (17) boolean_expr -> arithmetic_expr . NLT arithmetic_expr
    (18) boolean_expr -> arithmetic_expr . EQ arithmetic_expr
    (19) boolean_expr -> arithmetic_expr . NEQ arithmetic_expr

    SEMICOLON       reduce using rule 50 (expression -> arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54
    LT              shift and go to state 55
    GT              shift and go to state 56
    NGT             shift and go to state 57
    NLT             shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60


state 19

    (49) expression -> assign_expr .

    SEMICOLON       reduce using rule 49 (expression -> assign_expr .)


state 20

    (20) boolean_expr -> STRING . EQ STRING
    (21) boolean_expr -> STRING . NEQ STRING

    EQ              shift and go to state 61
    NEQ             shift and go to state 62


state 21

    (23) arithmetic_expr -> INTNUM .

    PLUS            reduce using rule 23 (arithmetic_expr -> INTNUM .)
    MINUS           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    TIMES           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    DIVIDE          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    DOTADD          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    DOTMUL          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    DOTSUB          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    DOTDIV          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    TRANSPOSITION   reduce using rule 23 (arithmetic_expr -> INTNUM .)
    LT              reduce using rule 23 (arithmetic_expr -> INTNUM .)
    GT              reduce using rule 23 (arithmetic_expr -> INTNUM .)
    NGT             reduce using rule 23 (arithmetic_expr -> INTNUM .)
    NLT             reduce using rule 23 (arithmetic_expr -> INTNUM .)
    EQ              reduce using rule 23 (arithmetic_expr -> INTNUM .)
    NEQ             reduce using rule 23 (arithmetic_expr -> INTNUM .)
    SEMICOLON       reduce using rule 23 (arithmetic_expr -> INTNUM .)
    LCURL           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    BREAK           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    CONTINUE        reduce using rule 23 (arithmetic_expr -> INTNUM .)
    RETURN          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    FOR             reduce using rule 23 (arithmetic_expr -> INTNUM .)
    WHILE           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    IF              reduce using rule 23 (arithmetic_expr -> INTNUM .)
    PRINT           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    ID              reduce using rule 23 (arithmetic_expr -> INTNUM .)
    INTNUM          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    FLOAT           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    LSQUARE         reduce using rule 23 (arithmetic_expr -> INTNUM .)
    EYE             reduce using rule 23 (arithmetic_expr -> INTNUM .)
    ONES            reduce using rule 23 (arithmetic_expr -> INTNUM .)
    ZEROS           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    STRING          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    $end            reduce using rule 23 (arithmetic_expr -> INTNUM .)
    RCURL           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    COMMA           reduce using rule 23 (arithmetic_expr -> INTNUM .)
    ELSE            reduce using rule 23 (arithmetic_expr -> INTNUM .)
    RSQUARE         reduce using rule 23 (arithmetic_expr -> INTNUM .)
    RPAREN          reduce using rule 23 (arithmetic_expr -> INTNUM .)
    RANGE           reduce using rule 23 (arithmetic_expr -> INTNUM .)


state 22

    (24) arithmetic_expr -> FLOAT .

    PLUS            reduce using rule 24 (arithmetic_expr -> FLOAT .)
    MINUS           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    TIMES           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    DIVIDE          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    DOTADD          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    DOTMUL          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    DOTSUB          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    DOTDIV          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    TRANSPOSITION   reduce using rule 24 (arithmetic_expr -> FLOAT .)
    LT              reduce using rule 24 (arithmetic_expr -> FLOAT .)
    GT              reduce using rule 24 (arithmetic_expr -> FLOAT .)
    NGT             reduce using rule 24 (arithmetic_expr -> FLOAT .)
    NLT             reduce using rule 24 (arithmetic_expr -> FLOAT .)
    EQ              reduce using rule 24 (arithmetic_expr -> FLOAT .)
    NEQ             reduce using rule 24 (arithmetic_expr -> FLOAT .)
    SEMICOLON       reduce using rule 24 (arithmetic_expr -> FLOAT .)
    LCURL           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    BREAK           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    CONTINUE        reduce using rule 24 (arithmetic_expr -> FLOAT .)
    RETURN          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    FOR             reduce using rule 24 (arithmetic_expr -> FLOAT .)
    WHILE           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    IF              reduce using rule 24 (arithmetic_expr -> FLOAT .)
    PRINT           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    ID              reduce using rule 24 (arithmetic_expr -> FLOAT .)
    INTNUM          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    FLOAT           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    LSQUARE         reduce using rule 24 (arithmetic_expr -> FLOAT .)
    EYE             reduce using rule 24 (arithmetic_expr -> FLOAT .)
    ONES            reduce using rule 24 (arithmetic_expr -> FLOAT .)
    ZEROS           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    STRING          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    $end            reduce using rule 24 (arithmetic_expr -> FLOAT .)
    RCURL           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    COMMA           reduce using rule 24 (arithmetic_expr -> FLOAT .)
    ELSE            reduce using rule 24 (arithmetic_expr -> FLOAT .)
    RSQUARE         reduce using rule 24 (arithmetic_expr -> FLOAT .)
    RPAREN          reduce using rule 24 (arithmetic_expr -> FLOAT .)
    RANGE           reduce using rule 24 (arithmetic_expr -> FLOAT .)


state 23

    (25) arithmetic_expr -> LSQUARE . RSQUARE
    (26) arithmetic_expr -> LSQUARE . arithmetic_list RSQUARE
    (40) arithmetic_list -> . arithmetic_list COMMA arithmetic_expr
    (41) arithmetic_list -> . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    RSQUARE         shift and go to state 63
    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_list                shift and go to state 64
    arithmetic_expr                shift and go to state 65

state 24

    (36) arithmetic_expr -> MINUS . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 66

state 25

    (37) arithmetic_expr -> EYE . LPAREN arithmetic_expr RPAREN

    LPAREN          shift and go to state 67


state 26

    (38) arithmetic_expr -> ONES . LPAREN arithmetic_expr RPAREN

    LPAREN          shift and go to state 68


state 27

    (39) arithmetic_expr -> ZEROS . LPAREN arithmetic_expr RPAREN

    LPAREN          shift and go to state 69


state 28

    (2) program -> program instruction .

    LCURL           reduce using rule 2 (program -> program instruction .)
    BREAK           reduce using rule 2 (program -> program instruction .)
    CONTINUE        reduce using rule 2 (program -> program instruction .)
    RETURN          reduce using rule 2 (program -> program instruction .)
    FOR             reduce using rule 2 (program -> program instruction .)
    WHILE           reduce using rule 2 (program -> program instruction .)
    IF              reduce using rule 2 (program -> program instruction .)
    PRINT           reduce using rule 2 (program -> program instruction .)
    ID              reduce using rule 2 (program -> program instruction .)
    INTNUM          reduce using rule 2 (program -> program instruction .)
    FLOAT           reduce using rule 2 (program -> program instruction .)
    LSQUARE         reduce using rule 2 (program -> program instruction .)
    MINUS           reduce using rule 2 (program -> program instruction .)
    EYE             reduce using rule 2 (program -> program instruction .)
    ONES            reduce using rule 2 (program -> program instruction .)
    ZEROS           reduce using rule 2 (program -> program instruction .)
    STRING          reduce using rule 2 (program -> program instruction .)
    $end            reduce using rule 2 (program -> program instruction .)


state 29

    (7) instruction -> LCURL instructions_list . RCURL
    (12) instructions_list -> instructions_list . COMMA instruction

    RCURL           shift and go to state 70
    COMMA           shift and go to state 71


state 30

    (13) instructions_list -> instruction .

    RCURL           reduce using rule 13 (instructions_list -> instruction .)
    COMMA           reduce using rule 13 (instructions_list -> instruction .)


state 31

    (8) instruction -> BREAK SEMICOLON .

    LCURL           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    BREAK           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    RETURN          reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    FOR             reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    WHILE           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    IF              reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    PRINT           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    ID              reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    INTNUM          reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    FLOAT           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    LSQUARE         reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    MINUS           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    EYE             reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    ONES            reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    ZEROS           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    STRING          reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    $end            reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    RCURL           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    COMMA           reduce using rule 8 (instruction -> BREAK SEMICOLON .)
    ELSE            reduce using rule 8 (instruction -> BREAK SEMICOLON .)


state 32

    (9) instruction -> CONTINUE SEMICOLON .

    LCURL           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    IF              reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    ID              reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    INTNUM          reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    FLOAT           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    LSQUARE         reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    MINUS           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    EYE             reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    ONES            reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    ZEROS           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    STRING          reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    $end            reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    RCURL           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    COMMA           reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 9 (instruction -> CONTINUE SEMICOLON .)


state 33

    (10) instruction -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 72


state 34

    (11) instruction -> expression SEMICOLON .

    LCURL           reduce using rule 11 (instruction -> expression SEMICOLON .)
    BREAK           reduce using rule 11 (instruction -> expression SEMICOLON .)
    CONTINUE        reduce using rule 11 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 11 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 11 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 11 (instruction -> expression SEMICOLON .)
    IF              reduce using rule 11 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 11 (instruction -> expression SEMICOLON .)
    ID              reduce using rule 11 (instruction -> expression SEMICOLON .)
    INTNUM          reduce using rule 11 (instruction -> expression SEMICOLON .)
    FLOAT           reduce using rule 11 (instruction -> expression SEMICOLON .)
    LSQUARE         reduce using rule 11 (instruction -> expression SEMICOLON .)
    MINUS           reduce using rule 11 (instruction -> expression SEMICOLON .)
    EYE             reduce using rule 11 (instruction -> expression SEMICOLON .)
    ONES            reduce using rule 11 (instruction -> expression SEMICOLON .)
    ZEROS           reduce using rule 11 (instruction -> expression SEMICOLON .)
    STRING          reduce using rule 11 (instruction -> expression SEMICOLON .)
    $end            reduce using rule 11 (instruction -> expression SEMICOLON .)
    RCURL           reduce using rule 11 (instruction -> expression SEMICOLON .)
    COMMA           reduce using rule 11 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 11 (instruction -> expression SEMICOLON .)


state 35

    (56) for_instruction -> FOR ID . ASSIGN range instruction

    ASSIGN          shift and go to state 73


state 36

    (42) assign_expr -> ID ASSIGN . arithmetic_expr
    (47) assign_expr -> ID ASSIGN . boolean_expr
    (48) assign_expr -> ID ASSIGN . STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    STRING          shift and go to state 76
    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 74
    boolean_expr                   shift and go to state 75

state 37

    (43) assign_expr -> ID ADDASSIGN . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 77

state 38

    (44) assign_expr -> ID SUBASSIGN . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 78

state 39

    (45) assign_expr -> ID MULASSIGN . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 79

state 40

    (46) assign_expr -> ID DIVASSIGN . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 80

state 41

    (54) while_instruction -> WHILE LPAREN . boolean_expr RPAREN instruction
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    STRING          shift and go to state 20
    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    boolean_expr                   shift and go to state 81
    arithmetic_expr                shift and go to state 82

state 42

    (52) if_instruction -> IF LPAREN . boolean_expr RPAREN THEN instruction
    (53) if_instruction -> IF LPAREN . boolean_expr RPAREN THEN instruction ELSE instruction
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    STRING          shift and go to state 20
    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    boolean_expr                   shift and go to state 83
    arithmetic_expr                shift and go to state 82

state 43

    (57) print_instruction -> PRINT arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION
    (14) boolean_expr -> arithmetic_expr . LT arithmetic_expr
    (15) boolean_expr -> arithmetic_expr . GT arithmetic_expr
    (16) boolean_expr -> arithmetic_expr . NGT arithmetic_expr
    (17) boolean_expr -> arithmetic_expr . NLT arithmetic_expr
    (18) boolean_expr -> arithmetic_expr . EQ arithmetic_expr
    (19) boolean_expr -> arithmetic_expr . NEQ arithmetic_expr

  ! shift/reduce conflict for MINUS resolved as shift
    LCURL           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    BREAK           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    CONTINUE        reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    RETURN          reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    FOR             reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    WHILE           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    IF              reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    PRINT           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    ID              reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    INTNUM          reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    FLOAT           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    LSQUARE         reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    EYE             reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    ONES            reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    ZEROS           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    STRING          reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    $end            reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    RCURL           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    COMMA           reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    ELSE            reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54
    LT              shift and go to state 55
    GT              shift and go to state 56
    NGT             shift and go to state 57
    NLT             shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60

  ! MINUS           [ reduce using rule 57 (print_instruction -> PRINT arithmetic_expr .) ]


state 44

    (58) print_instruction -> PRINT boolean_expr .

    LCURL           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    BREAK           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    CONTINUE        reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    RETURN          reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    FOR             reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    WHILE           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    IF              reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    PRINT           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    ID              reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    INTNUM          reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    FLOAT           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    LSQUARE         reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    MINUS           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    EYE             reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    ONES            reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    ZEROS           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    STRING          reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    $end            reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    RCURL           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    COMMA           reduce using rule 58 (print_instruction -> PRINT boolean_expr .)
    ELSE            reduce using rule 58 (print_instruction -> PRINT boolean_expr .)


state 45

    (22) arithmetic_expr -> ID .

    PLUS            reduce using rule 22 (arithmetic_expr -> ID .)
    MINUS           reduce using rule 22 (arithmetic_expr -> ID .)
    TIMES           reduce using rule 22 (arithmetic_expr -> ID .)
    DIVIDE          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTADD          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTMUL          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTSUB          reduce using rule 22 (arithmetic_expr -> ID .)
    DOTDIV          reduce using rule 22 (arithmetic_expr -> ID .)
    TRANSPOSITION   reduce using rule 22 (arithmetic_expr -> ID .)
    LT              reduce using rule 22 (arithmetic_expr -> ID .)
    GT              reduce using rule 22 (arithmetic_expr -> ID .)
    NGT             reduce using rule 22 (arithmetic_expr -> ID .)
    NLT             reduce using rule 22 (arithmetic_expr -> ID .)
    EQ              reduce using rule 22 (arithmetic_expr -> ID .)
    NEQ             reduce using rule 22 (arithmetic_expr -> ID .)
    LCURL           reduce using rule 22 (arithmetic_expr -> ID .)
    BREAK           reduce using rule 22 (arithmetic_expr -> ID .)
    CONTINUE        reduce using rule 22 (arithmetic_expr -> ID .)
    RETURN          reduce using rule 22 (arithmetic_expr -> ID .)
    FOR             reduce using rule 22 (arithmetic_expr -> ID .)
    WHILE           reduce using rule 22 (arithmetic_expr -> ID .)
    IF              reduce using rule 22 (arithmetic_expr -> ID .)
    PRINT           reduce using rule 22 (arithmetic_expr -> ID .)
    ID              reduce using rule 22 (arithmetic_expr -> ID .)
    INTNUM          reduce using rule 22 (arithmetic_expr -> ID .)
    FLOAT           reduce using rule 22 (arithmetic_expr -> ID .)
    LSQUARE         reduce using rule 22 (arithmetic_expr -> ID .)
    EYE             reduce using rule 22 (arithmetic_expr -> ID .)
    ONES            reduce using rule 22 (arithmetic_expr -> ID .)
    ZEROS           reduce using rule 22 (arithmetic_expr -> ID .)
    STRING          reduce using rule 22 (arithmetic_expr -> ID .)
    $end            reduce using rule 22 (arithmetic_expr -> ID .)
    RCURL           reduce using rule 22 (arithmetic_expr -> ID .)
    COMMA           reduce using rule 22 (arithmetic_expr -> ID .)
    ELSE            reduce using rule 22 (arithmetic_expr -> ID .)
    RSQUARE         reduce using rule 22 (arithmetic_expr -> ID .)
    SEMICOLON       reduce using rule 22 (arithmetic_expr -> ID .)
    RPAREN          reduce using rule 22 (arithmetic_expr -> ID .)
    RANGE           reduce using rule 22 (arithmetic_expr -> ID .)


state 46

    (27) arithmetic_expr -> arithmetic_expr PLUS . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 84

state 47

    (28) arithmetic_expr -> arithmetic_expr MINUS . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 85

state 48

    (29) arithmetic_expr -> arithmetic_expr TIMES . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 86

state 49

    (30) arithmetic_expr -> arithmetic_expr DIVIDE . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 87

state 50

    (31) arithmetic_expr -> arithmetic_expr DOTADD . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 88

state 51

    (32) arithmetic_expr -> arithmetic_expr DOTMUL . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 89

state 52

    (33) arithmetic_expr -> arithmetic_expr DOTSUB . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 90

state 53

    (34) arithmetic_expr -> arithmetic_expr DOTDIV . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 91

state 54

    (35) arithmetic_expr -> arithmetic_expr TRANSPOSITION .

    PLUS            reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    MINUS           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    TIMES           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    DIVIDE          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    DOTADD          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    DOTMUL          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    DOTSUB          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    DOTDIV          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    TRANSPOSITION   reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    LT              reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    GT              reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    NGT             reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    NLT             reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    EQ              reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    NEQ             reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    SEMICOLON       reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    LCURL           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    BREAK           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    CONTINUE        reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    RETURN          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    FOR             reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    WHILE           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    IF              reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    PRINT           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    ID              reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    INTNUM          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    FLOAT           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    LSQUARE         reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    EYE             reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    ONES            reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    ZEROS           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    STRING          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    $end            reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    RCURL           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    COMMA           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    ELSE            reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    RSQUARE         reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    RPAREN          reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)
    RANGE           reduce using rule 35 (arithmetic_expr -> arithmetic_expr TRANSPOSITION .)


state 55

    (14) boolean_expr -> arithmetic_expr LT . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 92

state 56

    (15) boolean_expr -> arithmetic_expr GT . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 93

state 57

    (16) boolean_expr -> arithmetic_expr NGT . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 94

state 58

    (17) boolean_expr -> arithmetic_expr NLT . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 95

state 59

    (18) boolean_expr -> arithmetic_expr EQ . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 96

state 60

    (19) boolean_expr -> arithmetic_expr NEQ . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 97

state 61

    (20) boolean_expr -> STRING EQ . STRING

    STRING          shift and go to state 98


state 62

    (21) boolean_expr -> STRING NEQ . STRING

    STRING          shift and go to state 99


state 63

    (25) arithmetic_expr -> LSQUARE RSQUARE .

    PLUS            reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    MINUS           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    TIMES           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    DIVIDE          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    DOTADD          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    DOTMUL          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    DOTSUB          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    DOTDIV          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    TRANSPOSITION   reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    LT              reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    GT              reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    NGT             reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    NLT             reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    EQ              reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    NEQ             reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    SEMICOLON       reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    LCURL           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    BREAK           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    CONTINUE        reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    RETURN          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    FOR             reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    WHILE           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    IF              reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    PRINT           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    ID              reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    INTNUM          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    FLOAT           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    LSQUARE         reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    EYE             reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    ONES            reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    ZEROS           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    STRING          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    $end            reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    RCURL           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    COMMA           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    ELSE            reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    RSQUARE         reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    RPAREN          reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)
    RANGE           reduce using rule 25 (arithmetic_expr -> LSQUARE RSQUARE .)


state 64

    (26) arithmetic_expr -> LSQUARE arithmetic_list . RSQUARE
    (40) arithmetic_list -> arithmetic_list . COMMA arithmetic_expr

    RSQUARE         shift and go to state 100
    COMMA           shift and go to state 101


state 65

    (41) arithmetic_list -> arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    RSQUARE         reduce using rule 41 (arithmetic_list -> arithmetic_expr .)
    COMMA           reduce using rule 41 (arithmetic_list -> arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 66

    (36) arithmetic_expr -> MINUS arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    MINUS           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    TIMES           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    DIVIDE          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    DOTADD          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    DOTMUL          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    DOTSUB          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    DOTDIV          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    TRANSPOSITION   reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    LT              reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    GT              reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    NGT             reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    NLT             reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    EQ              reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    NEQ             reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    SEMICOLON       reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    LCURL           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    BREAK           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    CONTINUE        reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    RETURN          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    FOR             reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    WHILE           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    IF              reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    PRINT           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    ID              reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    INTNUM          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    FLOAT           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    LSQUARE         reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    EYE             reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    ONES            reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    ZEROS           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    STRING          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    $end            reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    RCURL           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    COMMA           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    ELSE            reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    RSQUARE         reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    RPAREN          reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)
    RANGE           reduce using rule 36 (arithmetic_expr -> MINUS arithmetic_expr .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTMUL          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]
  ! TRANSPOSITION   [ shift and go to state 54 ]


state 67

    (37) arithmetic_expr -> EYE LPAREN . arithmetic_expr RPAREN
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 102

state 68

    (38) arithmetic_expr -> ONES LPAREN . arithmetic_expr RPAREN
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 103

state 69

    (39) arithmetic_expr -> ZEROS LPAREN . arithmetic_expr RPAREN
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 104

state 70

    (7) instruction -> LCURL instructions_list RCURL .

    LCURL           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    BREAK           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    CONTINUE        reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    RETURN          reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    FOR             reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    WHILE           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    IF              reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    PRINT           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    ID              reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    INTNUM          reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    FLOAT           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    LSQUARE         reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    MINUS           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    EYE             reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    ONES            reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    ZEROS           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    STRING          reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    $end            reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    RCURL           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    COMMA           reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)
    ELSE            reduce using rule 7 (instruction -> LCURL instructions_list RCURL .)


state 71

    (12) instructions_list -> instructions_list COMMA . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    instruction                    shift and go to state 105
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    boolean_expr                   shift and go to state 15
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 72

    (10) instruction -> RETURN expression SEMICOLON .

    LCURL           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    CONTINUE        reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    IF              reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    ID              reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    INTNUM          reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    LSQUARE         reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    EYE             reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    ONES            reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    ZEROS           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    $end            reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    RCURL           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    COMMA           reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 10 (instruction -> RETURN expression SEMICOLON .)


state 73

    (56) for_instruction -> FOR ID ASSIGN . range instruction
    (55) range -> . arithmetic_expr RANGE arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    range                          shift and go to state 106
    arithmetic_expr                shift and go to state 107

state 74

    (42) assign_expr -> ID ASSIGN arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION
    (14) boolean_expr -> arithmetic_expr . LT arithmetic_expr
    (15) boolean_expr -> arithmetic_expr . GT arithmetic_expr
    (16) boolean_expr -> arithmetic_expr . NGT arithmetic_expr
    (17) boolean_expr -> arithmetic_expr . NLT arithmetic_expr
    (18) boolean_expr -> arithmetic_expr . EQ arithmetic_expr
    (19) boolean_expr -> arithmetic_expr . NEQ arithmetic_expr

    SEMICOLON       reduce using rule 42 (assign_expr -> ID ASSIGN arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54
    LT              shift and go to state 55
    GT              shift and go to state 56
    NGT             shift and go to state 57
    NLT             shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60


state 75

    (47) assign_expr -> ID ASSIGN boolean_expr .

    SEMICOLON       reduce using rule 47 (assign_expr -> ID ASSIGN boolean_expr .)


state 76

    (48) assign_expr -> ID ASSIGN STRING .
    (20) boolean_expr -> STRING . EQ STRING
    (21) boolean_expr -> STRING . NEQ STRING

    SEMICOLON       reduce using rule 48 (assign_expr -> ID ASSIGN STRING .)
    EQ              shift and go to state 61
    NEQ             shift and go to state 62


state 77

    (43) assign_expr -> ID ADDASSIGN arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 43 (assign_expr -> ID ADDASSIGN arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 78

    (44) assign_expr -> ID SUBASSIGN arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 44 (assign_expr -> ID SUBASSIGN arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 79

    (45) assign_expr -> ID MULASSIGN arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 45 (assign_expr -> ID MULASSIGN arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 80

    (46) assign_expr -> ID DIVASSIGN arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 46 (assign_expr -> ID DIVASSIGN arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 81

    (54) while_instruction -> WHILE LPAREN boolean_expr . RPAREN instruction

    RPAREN          shift and go to state 108


state 82

    (14) boolean_expr -> arithmetic_expr . LT arithmetic_expr
    (15) boolean_expr -> arithmetic_expr . GT arithmetic_expr
    (16) boolean_expr -> arithmetic_expr . NGT arithmetic_expr
    (17) boolean_expr -> arithmetic_expr . NLT arithmetic_expr
    (18) boolean_expr -> arithmetic_expr . EQ arithmetic_expr
    (19) boolean_expr -> arithmetic_expr . NEQ arithmetic_expr
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    LT              shift and go to state 55
    GT              shift and go to state 56
    NGT             shift and go to state 57
    NLT             shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 83

    (52) if_instruction -> IF LPAREN boolean_expr . RPAREN THEN instruction
    (53) if_instruction -> IF LPAREN boolean_expr . RPAREN THEN instruction ELSE instruction

    RPAREN          shift and go to state 109


state 84

    (27) arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    MINUS           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    DOTADD          reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    DOTSUB          reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    LT              reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    GT              reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    NGT             reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    NLT             reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    EQ              reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    NEQ             reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    SEMICOLON       reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    LCURL           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    BREAK           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    CONTINUE        reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    RETURN          reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    FOR             reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    WHILE           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    IF              reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    PRINT           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    ID              reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    INTNUM          reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    FLOAT           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    LSQUARE         reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    EYE             reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    ONES            reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    ZEROS           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    STRING          reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    $end            reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    RCURL           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    COMMA           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    ELSE            reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    RSQUARE         reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    RPAREN          reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    RANGE           reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTMUL          shift and go to state 51
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! TIMES           [ reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .) ]
  ! DIVIDE          [ reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .) ]
  ! DOTMUL          [ reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .) ]
  ! DOTDIV          [ reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .) ]
  ! TRANSPOSITION   [ reduce using rule 27 (arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 85

    (28) arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    MINUS           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    DOTADD          reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    DOTSUB          reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    LT              reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    GT              reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    NGT             reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    NLT             reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    EQ              reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    NEQ             reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    SEMICOLON       reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    LCURL           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    BREAK           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    CONTINUE        reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    RETURN          reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    FOR             reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    WHILE           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    IF              reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    PRINT           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    ID              reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    INTNUM          reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    FLOAT           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    LSQUARE         reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    EYE             reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    ONES            reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    ZEROS           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    STRING          reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    $end            reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    RCURL           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    COMMA           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    ELSE            reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    RSQUARE         reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    RPAREN          reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    RANGE           reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTMUL          shift and go to state 51
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! TIMES           [ reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .) ]
  ! DIVIDE          [ reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .) ]
  ! DOTMUL          [ reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .) ]
  ! DOTDIV          [ reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .) ]
  ! TRANSPOSITION   [ reduce using rule 28 (arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 86

    (29) arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    MINUS           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    TIMES           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    DIVIDE          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    DOTADD          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    DOTMUL          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    DOTSUB          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    DOTDIV          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    LT              reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    GT              reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    NGT             reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    NLT             reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    EQ              reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    NEQ             reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    SEMICOLON       reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    LCURL           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    BREAK           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    CONTINUE        reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    RETURN          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    FOR             reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    WHILE           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    IF              reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    PRINT           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    ID              reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    INTNUM          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    FLOAT           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    LSQUARE         reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    EYE             reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    ONES            reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    ZEROS           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    STRING          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    $end            reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    RCURL           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    COMMA           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    ELSE            reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    RSQUARE         reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    RPAREN          reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    RANGE           reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .)
    TRANSPOSITION   shift and go to state 54

  ! TRANSPOSITION   [ reduce using rule 29 (arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTMUL          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 87

    (30) arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    MINUS           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    TIMES           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    DIVIDE          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    DOTADD          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    DOTMUL          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    DOTSUB          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    DOTDIV          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    LT              reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    GT              reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    NGT             reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    NLT             reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    EQ              reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    NEQ             reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    SEMICOLON       reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    LCURL           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    BREAK           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    CONTINUE        reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    RETURN          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    FOR             reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    WHILE           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    IF              reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    PRINT           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    ID              reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    INTNUM          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    FLOAT           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    LSQUARE         reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    EYE             reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    ONES            reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    ZEROS           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    STRING          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    $end            reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    RCURL           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    COMMA           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    ELSE            reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    RSQUARE         reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    RPAREN          reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    RANGE           reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .)
    TRANSPOSITION   shift and go to state 54

  ! TRANSPOSITION   [ reduce using rule 30 (arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTMUL          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 88

    (31) arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    MINUS           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    DOTADD          reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    DOTSUB          reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    LT              reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    GT              reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    NGT             reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    NLT             reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    EQ              reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    NEQ             reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    SEMICOLON       reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    LCURL           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    BREAK           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    CONTINUE        reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    RETURN          reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    FOR             reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    WHILE           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    IF              reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    PRINT           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    ID              reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    INTNUM          reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    FLOAT           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    LSQUARE         reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    EYE             reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    ONES            reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    ZEROS           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    STRING          reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    $end            reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    RCURL           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    COMMA           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    ELSE            reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    RSQUARE         reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    RPAREN          reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    RANGE           reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTMUL          shift and go to state 51
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! TIMES           [ reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .) ]
  ! DIVIDE          [ reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .) ]
  ! DOTMUL          [ reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .) ]
  ! DOTDIV          [ reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .) ]
  ! TRANSPOSITION   [ reduce using rule 31 (arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 89

    (32) arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    MINUS           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    TIMES           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    DIVIDE          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    DOTADD          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    DOTMUL          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    DOTSUB          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    DOTDIV          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    LT              reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    GT              reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    NGT             reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    NLT             reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    EQ              reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    NEQ             reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    SEMICOLON       reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    LCURL           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    BREAK           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    CONTINUE        reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    RETURN          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    FOR             reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    WHILE           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    IF              reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    PRINT           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    ID              reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    INTNUM          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    FLOAT           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    LSQUARE         reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    EYE             reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    ONES            reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    ZEROS           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    STRING          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    $end            reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    RCURL           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    COMMA           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    ELSE            reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    RSQUARE         reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    RPAREN          reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    RANGE           reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .)
    TRANSPOSITION   shift and go to state 54

  ! TRANSPOSITION   [ reduce using rule 32 (arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTMUL          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 90

    (33) arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    MINUS           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    DOTADD          reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    DOTSUB          reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    LT              reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    GT              reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    NGT             reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    NLT             reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    EQ              reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    NEQ             reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    SEMICOLON       reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    LCURL           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    BREAK           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    CONTINUE        reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    RETURN          reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    FOR             reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    WHILE           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    IF              reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    PRINT           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    ID              reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    INTNUM          reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    FLOAT           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    LSQUARE         reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    EYE             reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    ONES            reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    ZEROS           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    STRING          reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    $end            reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    RCURL           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    COMMA           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    ELSE            reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    RSQUARE         reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    RPAREN          reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    RANGE           reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTMUL          shift and go to state 51
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! TIMES           [ reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .) ]
  ! DIVIDE          [ reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .) ]
  ! DOTMUL          [ reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .) ]
  ! DOTDIV          [ reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .) ]
  ! TRANSPOSITION   [ reduce using rule 33 (arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 91

    (34) arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    PLUS            reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    MINUS           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    TIMES           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    DIVIDE          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    DOTADD          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    DOTMUL          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    DOTSUB          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    DOTDIV          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    LT              reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    GT              reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    NGT             reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    NLT             reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    EQ              reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    NEQ             reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    SEMICOLON       reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    LCURL           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    BREAK           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    CONTINUE        reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    RETURN          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    FOR             reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    WHILE           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    IF              reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    PRINT           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    ID              reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    INTNUM          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    FLOAT           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    LSQUARE         reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    EYE             reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    ONES            reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    ZEROS           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    STRING          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    $end            reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    RCURL           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    COMMA           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    ELSE            reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    RSQUARE         reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    RPAREN          reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    RANGE           reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .)
    TRANSPOSITION   shift and go to state 54

  ! TRANSPOSITION   [ reduce using rule 34 (arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTMUL          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 92

    (14) boolean_expr -> arithmetic_expr LT arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    LCURL           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    BREAK           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    CONTINUE        reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    RETURN          reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    FOR             reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    WHILE           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    IF              reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    PRINT           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    ID              reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    INTNUM          reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    FLOAT           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    LSQUARE         reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    MINUS           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    EYE             reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    ONES            reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    ZEROS           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    STRING          reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    $end            reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    RCURL           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    COMMA           reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    ELSE            reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    RPAREN          reduce using rule 14 (boolean_expr -> arithmetic_expr LT arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 93

    (15) boolean_expr -> arithmetic_expr GT arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    LCURL           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    BREAK           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    CONTINUE        reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    RETURN          reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    FOR             reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    WHILE           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    IF              reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    PRINT           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    ID              reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    INTNUM          reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    FLOAT           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    LSQUARE         reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    MINUS           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    EYE             reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    ONES            reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    ZEROS           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    STRING          reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    $end            reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    RCURL           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    COMMA           reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    ELSE            reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    RPAREN          reduce using rule 15 (boolean_expr -> arithmetic_expr GT arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 94

    (16) boolean_expr -> arithmetic_expr NGT arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    LCURL           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    BREAK           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    CONTINUE        reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    RETURN          reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    FOR             reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    WHILE           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    IF              reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    PRINT           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    ID              reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    INTNUM          reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    FLOAT           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    LSQUARE         reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    MINUS           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    EYE             reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    ONES            reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    ZEROS           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    STRING          reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    $end            reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    RCURL           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    COMMA           reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    ELSE            reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    RPAREN          reduce using rule 16 (boolean_expr -> arithmetic_expr NGT arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 95

    (17) boolean_expr -> arithmetic_expr NLT arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    LCURL           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    BREAK           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    CONTINUE        reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    RETURN          reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    FOR             reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    WHILE           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    IF              reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    PRINT           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    ID              reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    INTNUM          reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    FLOAT           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    LSQUARE         reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    MINUS           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    EYE             reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    ONES            reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    ZEROS           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    STRING          reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    $end            reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    RCURL           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    COMMA           reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    ELSE            reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    RPAREN          reduce using rule 17 (boolean_expr -> arithmetic_expr NLT arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 96

    (18) boolean_expr -> arithmetic_expr EQ arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    LCURL           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    BREAK           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    CONTINUE        reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    RETURN          reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    FOR             reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    WHILE           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    IF              reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    PRINT           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    ID              reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    INTNUM          reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    FLOAT           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    LSQUARE         reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    MINUS           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    EYE             reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    ONES            reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    ZEROS           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    STRING          reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    $end            reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    RCURL           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    COMMA           reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    ELSE            reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    RPAREN          reduce using rule 18 (boolean_expr -> arithmetic_expr EQ arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 97

    (19) boolean_expr -> arithmetic_expr NEQ arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    SEMICOLON       reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    LCURL           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    BREAK           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    CONTINUE        reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    RETURN          reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    FOR             reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    WHILE           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    IF              reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    PRINT           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    ID              reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    INTNUM          reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    FLOAT           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    LSQUARE         reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    MINUS           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    EYE             reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    ONES            reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    ZEROS           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    STRING          reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    $end            reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    RCURL           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    COMMA           reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    ELSE            reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    RPAREN          reduce using rule 19 (boolean_expr -> arithmetic_expr NEQ arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 98

    (20) boolean_expr -> STRING EQ STRING .

    SEMICOLON       reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    LCURL           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    BREAK           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    CONTINUE        reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    RETURN          reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    FOR             reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    WHILE           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    IF              reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    PRINT           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    ID              reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    INTNUM          reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    FLOAT           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    LSQUARE         reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    MINUS           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    EYE             reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    ONES            reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    ZEROS           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    STRING          reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    $end            reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    RCURL           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    COMMA           reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    ELSE            reduce using rule 20 (boolean_expr -> STRING EQ STRING .)
    RPAREN          reduce using rule 20 (boolean_expr -> STRING EQ STRING .)


state 99

    (21) boolean_expr -> STRING NEQ STRING .

    SEMICOLON       reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    LCURL           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    BREAK           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    CONTINUE        reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    RETURN          reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    FOR             reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    WHILE           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    IF              reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    PRINT           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    ID              reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    INTNUM          reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    FLOAT           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    LSQUARE         reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    MINUS           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    EYE             reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    ONES            reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    ZEROS           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    STRING          reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    $end            reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    RCURL           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    COMMA           reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    ELSE            reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)
    RPAREN          reduce using rule 21 (boolean_expr -> STRING NEQ STRING .)


state 100

    (26) arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .

    PLUS            reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    MINUS           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    TIMES           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    DIVIDE          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    DOTADD          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    DOTMUL          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    DOTSUB          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    DOTDIV          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    TRANSPOSITION   reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    LT              reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    GT              reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    NGT             reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    NLT             reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    EQ              reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    NEQ             reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    SEMICOLON       reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    LCURL           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    BREAK           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    CONTINUE        reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    RETURN          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    FOR             reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    WHILE           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    IF              reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    PRINT           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    ID              reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    INTNUM          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    FLOAT           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    LSQUARE         reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    EYE             reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    ONES            reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    ZEROS           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    STRING          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    $end            reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    RCURL           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    COMMA           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    ELSE            reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    RSQUARE         reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    RPAREN          reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)
    RANGE           reduce using rule 26 (arithmetic_expr -> LSQUARE arithmetic_list RSQUARE .)


state 101

    (40) arithmetic_list -> arithmetic_list COMMA . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 110

state 102

    (37) arithmetic_expr -> EYE LPAREN arithmetic_expr . RPAREN
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 103

    (38) arithmetic_expr -> ONES LPAREN arithmetic_expr . RPAREN
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 104

    (39) arithmetic_expr -> ZEROS LPAREN arithmetic_expr . RPAREN
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 105

    (12) instructions_list -> instructions_list COMMA instruction .

    RCURL           reduce using rule 12 (instructions_list -> instructions_list COMMA instruction .)
    COMMA           reduce using rule 12 (instructions_list -> instructions_list COMMA instruction .)


state 106

    (56) for_instruction -> FOR ID ASSIGN range . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    instruction                    shift and go to state 114
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    boolean_expr                   shift and go to state 15
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 107

    (55) range -> arithmetic_expr . RANGE arithmetic_expr
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    RANGE           shift and go to state 115
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 108

    (54) while_instruction -> WHILE LPAREN boolean_expr RPAREN . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    boolean_expr                   shift and go to state 15
    instruction                    shift and go to state 116
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 109

    (52) if_instruction -> IF LPAREN boolean_expr RPAREN . THEN instruction
    (53) if_instruction -> IF LPAREN boolean_expr RPAREN . THEN instruction ELSE instruction

    THEN            shift and go to state 117


state 110

    (40) arithmetic_list -> arithmetic_list COMMA arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    RSQUARE         reduce using rule 40 (arithmetic_list -> arithmetic_list COMMA arithmetic_expr .)
    COMMA           reduce using rule 40 (arithmetic_list -> arithmetic_list COMMA arithmetic_expr .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54


state 111

    (37) arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .

    PLUS            reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    MINUS           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    TIMES           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    DIVIDE          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    DOTADD          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    DOTMUL          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    DOTSUB          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    DOTDIV          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    TRANSPOSITION   reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    LT              reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    GT              reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    NGT             reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    NLT             reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    EQ              reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    NEQ             reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    SEMICOLON       reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    LCURL           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    BREAK           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    CONTINUE        reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    RETURN          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    FOR             reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    WHILE           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    IF              reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    PRINT           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    ID              reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    INTNUM          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    FLOAT           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    LSQUARE         reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    EYE             reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    ONES            reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    ZEROS           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    STRING          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    $end            reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    RCURL           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    COMMA           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    ELSE            reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    RSQUARE         reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    RPAREN          reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)
    RANGE           reduce using rule 37 (arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN .)


state 112

    (38) arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .

    PLUS            reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    MINUS           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    TIMES           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    DIVIDE          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    DOTADD          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    DOTMUL          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    DOTSUB          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    DOTDIV          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    TRANSPOSITION   reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    LT              reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    GT              reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    NGT             reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    NLT             reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    EQ              reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    NEQ             reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    SEMICOLON       reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    LCURL           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    BREAK           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    CONTINUE        reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    RETURN          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    FOR             reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    WHILE           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    IF              reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    PRINT           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    ID              reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    INTNUM          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    FLOAT           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    LSQUARE         reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    EYE             reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    ONES            reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    ZEROS           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    STRING          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    $end            reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    RCURL           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    COMMA           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    ELSE            reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    RSQUARE         reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    RPAREN          reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)
    RANGE           reduce using rule 38 (arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN .)


state 113

    (39) arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .

    PLUS            reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    MINUS           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    TIMES           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    DIVIDE          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    DOTADD          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    DOTMUL          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    DOTSUB          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    DOTDIV          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    TRANSPOSITION   reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    LT              reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    GT              reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    NGT             reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    NLT             reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    EQ              reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    NEQ             reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    SEMICOLON       reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    LCURL           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    BREAK           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    CONTINUE        reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    RETURN          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    FOR             reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    WHILE           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    IF              reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    PRINT           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    ID              reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    INTNUM          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    FLOAT           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    LSQUARE         reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    EYE             reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    ONES            reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    ZEROS           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    STRING          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    $end            reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    RCURL           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    COMMA           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    ELSE            reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    RSQUARE         reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    RPAREN          reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)
    RANGE           reduce using rule 39 (arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN .)


state 114

    (56) for_instruction -> FOR ID ASSIGN range instruction .

    LCURL           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    BREAK           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    CONTINUE        reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    RETURN          reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    FOR             reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    WHILE           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    IF              reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    PRINT           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    ID              reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    INTNUM          reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    FLOAT           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    LSQUARE         reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    MINUS           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    EYE             reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    ONES            reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    ZEROS           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    STRING          reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    $end            reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    RCURL           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    COMMA           reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)
    ELSE            reduce using rule 56 (for_instruction -> FOR ID ASSIGN range instruction .)


state 115

    (55) range -> arithmetic_expr RANGE . arithmetic_expr
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN

    ID              shift and go to state 45
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27

    arithmetic_expr                shift and go to state 118

state 116

    (54) while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .

    LCURL           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    BREAK           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    CONTINUE        reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    RETURN          reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    FOR             reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    WHILE           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    IF              reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    PRINT           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    ID              reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    INTNUM          reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    FLOAT           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    LSQUARE         reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    MINUS           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    EYE             reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    ONES            reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    ZEROS           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    STRING          reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    $end            reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    RCURL           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    COMMA           reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)
    ELSE            reduce using rule 54 (while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction .)


state 117

    (52) if_instruction -> IF LPAREN boolean_expr RPAREN THEN . instruction
    (53) if_instruction -> IF LPAREN boolean_expr RPAREN THEN . instruction ELSE instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    boolean_expr                   shift and go to state 15
    instruction                    shift and go to state 119
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 118

    (55) range -> arithmetic_expr RANGE arithmetic_expr .
    (27) arithmetic_expr -> arithmetic_expr . PLUS arithmetic_expr
    (28) arithmetic_expr -> arithmetic_expr . MINUS arithmetic_expr
    (29) arithmetic_expr -> arithmetic_expr . TIMES arithmetic_expr
    (30) arithmetic_expr -> arithmetic_expr . DIVIDE arithmetic_expr
    (31) arithmetic_expr -> arithmetic_expr . DOTADD arithmetic_expr
    (32) arithmetic_expr -> arithmetic_expr . DOTMUL arithmetic_expr
    (33) arithmetic_expr -> arithmetic_expr . DOTSUB arithmetic_expr
    (34) arithmetic_expr -> arithmetic_expr . DOTDIV arithmetic_expr
    (35) arithmetic_expr -> arithmetic_expr . TRANSPOSITION

    LCURL           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    BREAK           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    CONTINUE        reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    RETURN          reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    FOR             reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    WHILE           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    IF              reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    PRINT           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    ID              reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    INTNUM          reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    FLOAT           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    LSQUARE         reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    MINUS           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    EYE             reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    ONES            reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    ZEROS           reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    STRING          reduce using rule 55 (range -> arithmetic_expr RANGE arithmetic_expr .)
    PLUS            shift and go to state 46
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    DOTADD          shift and go to state 50
    DOTMUL          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTDIV          shift and go to state 53
    TRANSPOSITION   shift and go to state 54

  ! MINUS           [ shift and go to state 47 ]


state 119

    (52) if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .
    (53) if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction . ELSE instruction

    LCURL           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    BREAK           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    CONTINUE        reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    RETURN          reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    FOR             reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    WHILE           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    IF              reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    PRINT           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    ID              reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    INTNUM          reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    FLOAT           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    LSQUARE         reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    MINUS           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    EYE             reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    ONES            reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    ZEROS           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    STRING          reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    $end            reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    RCURL           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    COMMA           reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .)
    ELSE            shift and go to state 120

  ! ELSE            [ reduce using rule 52 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction .) ]


state 120

    (53) if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . LCURL instructions_list RCURL
    (8) instruction -> . BREAK SEMICOLON
    (9) instruction -> . CONTINUE SEMICOLON
    (10) instruction -> . RETURN expression SEMICOLON
    (11) instruction -> . expression SEMICOLON
    (56) for_instruction -> . FOR ID ASSIGN range instruction
    (54) while_instruction -> . WHILE LPAREN boolean_expr RPAREN instruction
    (52) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction
    (53) if_instruction -> . IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction
    (57) print_instruction -> . PRINT arithmetic_expr
    (58) print_instruction -> . PRINT boolean_expr
    (49) expression -> . assign_expr
    (50) expression -> . arithmetic_expr
    (51) expression -> . boolean_expr
    (42) assign_expr -> . ID ASSIGN arithmetic_expr
    (43) assign_expr -> . ID ADDASSIGN arithmetic_expr
    (44) assign_expr -> . ID SUBASSIGN arithmetic_expr
    (45) assign_expr -> . ID MULASSIGN arithmetic_expr
    (46) assign_expr -> . ID DIVASSIGN arithmetic_expr
    (47) assign_expr -> . ID ASSIGN boolean_expr
    (48) assign_expr -> . ID ASSIGN STRING
    (22) arithmetic_expr -> . ID
    (23) arithmetic_expr -> . INTNUM
    (24) arithmetic_expr -> . FLOAT
    (25) arithmetic_expr -> . LSQUARE RSQUARE
    (26) arithmetic_expr -> . LSQUARE arithmetic_list RSQUARE
    (27) arithmetic_expr -> . arithmetic_expr PLUS arithmetic_expr
    (28) arithmetic_expr -> . arithmetic_expr MINUS arithmetic_expr
    (29) arithmetic_expr -> . arithmetic_expr TIMES arithmetic_expr
    (30) arithmetic_expr -> . arithmetic_expr DIVIDE arithmetic_expr
    (31) arithmetic_expr -> . arithmetic_expr DOTADD arithmetic_expr
    (32) arithmetic_expr -> . arithmetic_expr DOTMUL arithmetic_expr
    (33) arithmetic_expr -> . arithmetic_expr DOTSUB arithmetic_expr
    (34) arithmetic_expr -> . arithmetic_expr DOTDIV arithmetic_expr
    (35) arithmetic_expr -> . arithmetic_expr TRANSPOSITION
    (36) arithmetic_expr -> . MINUS arithmetic_expr
    (37) arithmetic_expr -> . EYE LPAREN arithmetic_expr RPAREN
    (38) arithmetic_expr -> . ONES LPAREN arithmetic_expr RPAREN
    (39) arithmetic_expr -> . ZEROS LPAREN arithmetic_expr RPAREN
    (14) boolean_expr -> . arithmetic_expr LT arithmetic_expr
    (15) boolean_expr -> . arithmetic_expr GT arithmetic_expr
    (16) boolean_expr -> . arithmetic_expr NGT arithmetic_expr
    (17) boolean_expr -> . arithmetic_expr NLT arithmetic_expr
    (18) boolean_expr -> . arithmetic_expr EQ arithmetic_expr
    (19) boolean_expr -> . arithmetic_expr NEQ arithmetic_expr
    (20) boolean_expr -> . STRING EQ STRING
    (21) boolean_expr -> . STRING NEQ STRING

    LCURL           shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 21
    FLOAT           shift and go to state 22
    LSQUARE         shift and go to state 23
    MINUS           shift and go to state 24
    EYE             shift and go to state 25
    ONES            shift and go to state 26
    ZEROS           shift and go to state 27
    STRING          shift and go to state 20

    boolean_expr                   shift and go to state 15
    instruction                    shift and go to state 121
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11
    arithmetic_expr                shift and go to state 18
    assign_expr                    shift and go to state 19

state 121

    (53) if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .

    LCURL           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    BREAK           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    CONTINUE        reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    RETURN          reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    FOR             reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    WHILE           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    IF              reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    PRINT           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    ID              reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    INTNUM          reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    FLOAT           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    LSQUARE         reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    MINUS           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    EYE             reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    ONES            reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    ZEROS           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    STRING          reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    $end            reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    RCURL           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    COMMA           reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)
    ELSE            reduce using rule 53 (if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
