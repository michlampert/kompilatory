Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction
Rule 2     program -> program instruction
Rule 3     instruction -> for_instruction
Rule 4     instruction -> while_instruction
Rule 5     instruction -> if_instruction
Rule 6     instruction -> print_instruction
Rule 7     instruction -> { instructions_list }
Rule 8     instruction -> BREAK ;
Rule 9     instruction -> CONTINUE ;
Rule 10    instruction -> RETURN expression ;
Rule 11    instruction -> expression ;
Rule 12    instructions_list -> instruction
Rule 13    instructions_list -> instructions_list instruction
Rule 14    expression -> ID
Rule 15    expression -> INTNUM
Rule 16    expression -> FLOAT
Rule 17    expression -> STRING
Rule 18    expression -> ( expression )
Rule 19    expression -> [ ]
Rule 20    expression -> [ expression_list ]
Rule 21    expression -> ID = expression
Rule 22    expression -> ID ADDASSIGN expression
Rule 23    expression -> ID SUBASSIGN expression
Rule 24    expression -> ID MULASSIGN expression
Rule 25    expression -> ID DIVASSIGN expression
Rule 26    expression -> ID [ expression_list ] = expression
Rule 27    expression -> ID [ expression_list ] ADDASSIGN expression
Rule 28    expression -> ID [ expression_list ] SUBASSIGN expression
Rule 29    expression -> ID [ expression_list ] MULASSIGN expression
Rule 30    expression -> ID [ expression_list ] DIVASSIGN expression
Rule 31    expression -> ZEROS ( expression_list )
Rule 32    expression -> ONES ( expression_list )
Rule 33    expression -> EYE ( expression_list )
Rule 34    expression -> expression + expression
Rule 35    expression -> expression - expression
Rule 36    expression -> expression * expression
Rule 37    expression -> expression / expression
Rule 38    expression -> expression DOTADD expression
Rule 39    expression -> expression DOTSUB expression
Rule 40    expression -> expression DOTMUL expression
Rule 41    expression -> expression DOTDIV expression
Rule 42    expression -> - expression
Rule 43    expression -> expression TRANSPOSITION
Rule 44    expression -> expression EQ expression
Rule 45    expression -> expression NEQ expression
Rule 46    expression -> expression LT expression
Rule 47    expression -> expression NLT expression
Rule 48    expression -> expression GT expression
Rule 49    expression -> expression NGT expression
Rule 50    expression_list -> expression
Rule 51    expression_list -> expression_list , expression
Rule 52    if_instruction -> IF ( expression ) instruction
Rule 53    if_instruction -> IF ( expression ) instruction ELSE instruction
Rule 54    while_instruction -> WHILE ( expression ) instruction
Rule 55    range -> expression : expression
Rule 56    for_instruction -> FOR ID = range instruction
Rule 57    print_instruction -> PRINT expression_list ;

Terminals, with rules where they appear

(                    : 18 31 32 33 52 53 54
)                    : 18 31 32 33 52 53 54
*                    : 36
+                    : 34
,                    : 51
-                    : 35 42
/                    : 37
:                    : 55
;                    : 8 9 10 11 57
=                    : 21 26 56
ADDASSIGN            : 22 27
BREAK                : 8
CONTINUE             : 9
DIVASSIGN            : 25 30
DOTADD               : 38
DOTDIV               : 41
DOTMUL               : 40
DOTSUB               : 39
ELSE                 : 53
EQ                   : 44
EYE                  : 33
FLOAT                : 16
FOR                  : 56
GT                   : 48
ID                   : 14 21 22 23 24 25 26 27 28 29 30 56
IF                   : 52 53
INTNUM               : 15
LT                   : 46
MULASSIGN            : 24 29
NEQ                  : 45
NGT                  : 49
NLT                  : 47
ONES                 : 32
PRINT                : 57
RETURN               : 10
STRING               : 17
SUBASSIGN            : 23 28
TRANSPOSITION        : 43
WHILE                : 54
ZEROS                : 31
[                    : 19 20 26 27 28 29 30
]                    : 19 20 26 27 28 29 30
error                : 
{                    : 7
}                    : 7

Nonterminals, with rules where they appear

expression           : 10 11 18 21 22 23 24 25 26 27 28 29 30 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52 53 54 55 55
expression_list      : 20 26 27 28 29 30 31 32 33 51 57
for_instruction      : 3
if_instruction       : 5
instruction          : 1 2 12 13 52 53 53 54 56
instructions_list    : 7 13
print_instruction    : 6
program              : 2 0
range                : 56
while_instruction    : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction
    (2) program -> . program instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    program                        shift and go to state 1
    instruction                    shift and go to state 2
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11

state 1

    (0) S' -> program .
    (2) program -> program . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    instruction                    shift and go to state 26
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11

state 2

    (1) program -> instruction .

    {               reduce using rule 1 (program -> instruction .)
    BREAK           reduce using rule 1 (program -> instruction .)
    CONTINUE        reduce using rule 1 (program -> instruction .)
    RETURN          reduce using rule 1 (program -> instruction .)
    FOR             reduce using rule 1 (program -> instruction .)
    WHILE           reduce using rule 1 (program -> instruction .)
    IF              reduce using rule 1 (program -> instruction .)
    PRINT           reduce using rule 1 (program -> instruction .)
    ID              reduce using rule 1 (program -> instruction .)
    INTNUM          reduce using rule 1 (program -> instruction .)
    FLOAT           reduce using rule 1 (program -> instruction .)
    STRING          reduce using rule 1 (program -> instruction .)
    (               reduce using rule 1 (program -> instruction .)
    [               reduce using rule 1 (program -> instruction .)
    ZEROS           reduce using rule 1 (program -> instruction .)
    ONES            reduce using rule 1 (program -> instruction .)
    EYE             reduce using rule 1 (program -> instruction .)
    -               reduce using rule 1 (program -> instruction .)
    $end            reduce using rule 1 (program -> instruction .)


state 3

    (3) instruction -> for_instruction .

    {               reduce using rule 3 (instruction -> for_instruction .)
    BREAK           reduce using rule 3 (instruction -> for_instruction .)
    CONTINUE        reduce using rule 3 (instruction -> for_instruction .)
    RETURN          reduce using rule 3 (instruction -> for_instruction .)
    FOR             reduce using rule 3 (instruction -> for_instruction .)
    WHILE           reduce using rule 3 (instruction -> for_instruction .)
    IF              reduce using rule 3 (instruction -> for_instruction .)
    PRINT           reduce using rule 3 (instruction -> for_instruction .)
    ID              reduce using rule 3 (instruction -> for_instruction .)
    INTNUM          reduce using rule 3 (instruction -> for_instruction .)
    FLOAT           reduce using rule 3 (instruction -> for_instruction .)
    STRING          reduce using rule 3 (instruction -> for_instruction .)
    (               reduce using rule 3 (instruction -> for_instruction .)
    [               reduce using rule 3 (instruction -> for_instruction .)
    ZEROS           reduce using rule 3 (instruction -> for_instruction .)
    ONES            reduce using rule 3 (instruction -> for_instruction .)
    EYE             reduce using rule 3 (instruction -> for_instruction .)
    -               reduce using rule 3 (instruction -> for_instruction .)
    $end            reduce using rule 3 (instruction -> for_instruction .)
    }               reduce using rule 3 (instruction -> for_instruction .)
    ELSE            reduce using rule 3 (instruction -> for_instruction .)


state 4

    (4) instruction -> while_instruction .

    {               reduce using rule 4 (instruction -> while_instruction .)
    BREAK           reduce using rule 4 (instruction -> while_instruction .)
    CONTINUE        reduce using rule 4 (instruction -> while_instruction .)
    RETURN          reduce using rule 4 (instruction -> while_instruction .)
    FOR             reduce using rule 4 (instruction -> while_instruction .)
    WHILE           reduce using rule 4 (instruction -> while_instruction .)
    IF              reduce using rule 4 (instruction -> while_instruction .)
    PRINT           reduce using rule 4 (instruction -> while_instruction .)
    ID              reduce using rule 4 (instruction -> while_instruction .)
    INTNUM          reduce using rule 4 (instruction -> while_instruction .)
    FLOAT           reduce using rule 4 (instruction -> while_instruction .)
    STRING          reduce using rule 4 (instruction -> while_instruction .)
    (               reduce using rule 4 (instruction -> while_instruction .)
    [               reduce using rule 4 (instruction -> while_instruction .)
    ZEROS           reduce using rule 4 (instruction -> while_instruction .)
    ONES            reduce using rule 4 (instruction -> while_instruction .)
    EYE             reduce using rule 4 (instruction -> while_instruction .)
    -               reduce using rule 4 (instruction -> while_instruction .)
    $end            reduce using rule 4 (instruction -> while_instruction .)
    }               reduce using rule 4 (instruction -> while_instruction .)
    ELSE            reduce using rule 4 (instruction -> while_instruction .)


state 5

    (5) instruction -> if_instruction .

    {               reduce using rule 5 (instruction -> if_instruction .)
    BREAK           reduce using rule 5 (instruction -> if_instruction .)
    CONTINUE        reduce using rule 5 (instruction -> if_instruction .)
    RETURN          reduce using rule 5 (instruction -> if_instruction .)
    FOR             reduce using rule 5 (instruction -> if_instruction .)
    WHILE           reduce using rule 5 (instruction -> if_instruction .)
    IF              reduce using rule 5 (instruction -> if_instruction .)
    PRINT           reduce using rule 5 (instruction -> if_instruction .)
    ID              reduce using rule 5 (instruction -> if_instruction .)
    INTNUM          reduce using rule 5 (instruction -> if_instruction .)
    FLOAT           reduce using rule 5 (instruction -> if_instruction .)
    STRING          reduce using rule 5 (instruction -> if_instruction .)
    (               reduce using rule 5 (instruction -> if_instruction .)
    [               reduce using rule 5 (instruction -> if_instruction .)
    ZEROS           reduce using rule 5 (instruction -> if_instruction .)
    ONES            reduce using rule 5 (instruction -> if_instruction .)
    EYE             reduce using rule 5 (instruction -> if_instruction .)
    -               reduce using rule 5 (instruction -> if_instruction .)
    $end            reduce using rule 5 (instruction -> if_instruction .)
    }               reduce using rule 5 (instruction -> if_instruction .)
    ELSE            reduce using rule 5 (instruction -> if_instruction .)


state 6

    (6) instruction -> print_instruction .

    {               reduce using rule 6 (instruction -> print_instruction .)
    BREAK           reduce using rule 6 (instruction -> print_instruction .)
    CONTINUE        reduce using rule 6 (instruction -> print_instruction .)
    RETURN          reduce using rule 6 (instruction -> print_instruction .)
    FOR             reduce using rule 6 (instruction -> print_instruction .)
    WHILE           reduce using rule 6 (instruction -> print_instruction .)
    IF              reduce using rule 6 (instruction -> print_instruction .)
    PRINT           reduce using rule 6 (instruction -> print_instruction .)
    ID              reduce using rule 6 (instruction -> print_instruction .)
    INTNUM          reduce using rule 6 (instruction -> print_instruction .)
    FLOAT           reduce using rule 6 (instruction -> print_instruction .)
    STRING          reduce using rule 6 (instruction -> print_instruction .)
    (               reduce using rule 6 (instruction -> print_instruction .)
    [               reduce using rule 6 (instruction -> print_instruction .)
    ZEROS           reduce using rule 6 (instruction -> print_instruction .)
    ONES            reduce using rule 6 (instruction -> print_instruction .)
    EYE             reduce using rule 6 (instruction -> print_instruction .)
    -               reduce using rule 6 (instruction -> print_instruction .)
    $end            reduce using rule 6 (instruction -> print_instruction .)
    }               reduce using rule 6 (instruction -> print_instruction .)
    ELSE            reduce using rule 6 (instruction -> print_instruction .)


state 7

    (7) instruction -> { . instructions_list }
    (12) instructions_list -> . instruction
    (13) instructions_list -> . instructions_list instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    instructions_list              shift and go to state 27
    instruction                    shift and go to state 28
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11

state 8

    (8) instruction -> BREAK . ;

    ;               shift and go to state 29


state 9

    (9) instruction -> CONTINUE . ;

    ;               shift and go to state 30


state 10

    (10) instruction -> RETURN . expression ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 31

state 11

    (11) instruction -> expression . ;
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               shift and go to state 32
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 12

    (56) for_instruction -> FOR . ID = range instruction

    ID              shift and go to state 48


state 13

    (14) expression -> ID .
    (21) expression -> ID . = expression
    (22) expression -> ID . ADDASSIGN expression
    (23) expression -> ID . SUBASSIGN expression
    (24) expression -> ID . MULASSIGN expression
    (25) expression -> ID . DIVASSIGN expression
    (26) expression -> ID . [ expression_list ] = expression
    (27) expression -> ID . [ expression_list ] ADDASSIGN expression
    (28) expression -> ID . [ expression_list ] SUBASSIGN expression
    (29) expression -> ID . [ expression_list ] MULASSIGN expression
    (30) expression -> ID . [ expression_list ] DIVASSIGN expression

  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 14 (expression -> ID .)
    +               reduce using rule 14 (expression -> ID .)
    -               reduce using rule 14 (expression -> ID .)
    *               reduce using rule 14 (expression -> ID .)
    /               reduce using rule 14 (expression -> ID .)
    DOTADD          reduce using rule 14 (expression -> ID .)
    DOTSUB          reduce using rule 14 (expression -> ID .)
    DOTMUL          reduce using rule 14 (expression -> ID .)
    DOTDIV          reduce using rule 14 (expression -> ID .)
    TRANSPOSITION   reduce using rule 14 (expression -> ID .)
    EQ              reduce using rule 14 (expression -> ID .)
    NEQ             reduce using rule 14 (expression -> ID .)
    LT              reduce using rule 14 (expression -> ID .)
    NLT             reduce using rule 14 (expression -> ID .)
    GT              reduce using rule 14 (expression -> ID .)
    NGT             reduce using rule 14 (expression -> ID .)
    )               reduce using rule 14 (expression -> ID .)
    ,               reduce using rule 14 (expression -> ID .)
    ]               reduce using rule 14 (expression -> ID .)
    :               reduce using rule 14 (expression -> ID .)
    {               reduce using rule 14 (expression -> ID .)
    BREAK           reduce using rule 14 (expression -> ID .)
    CONTINUE        reduce using rule 14 (expression -> ID .)
    RETURN          reduce using rule 14 (expression -> ID .)
    FOR             reduce using rule 14 (expression -> ID .)
    WHILE           reduce using rule 14 (expression -> ID .)
    IF              reduce using rule 14 (expression -> ID .)
    PRINT           reduce using rule 14 (expression -> ID .)
    ID              reduce using rule 14 (expression -> ID .)
    INTNUM          reduce using rule 14 (expression -> ID .)
    FLOAT           reduce using rule 14 (expression -> ID .)
    STRING          reduce using rule 14 (expression -> ID .)
    (               reduce using rule 14 (expression -> ID .)
    ZEROS           reduce using rule 14 (expression -> ID .)
    ONES            reduce using rule 14 (expression -> ID .)
    EYE             reduce using rule 14 (expression -> ID .)
    =               shift and go to state 49
    ADDASSIGN       shift and go to state 50
    SUBASSIGN       shift and go to state 51
    MULASSIGN       shift and go to state 52
    DIVASSIGN       shift and go to state 53
    [               shift and go to state 54

  ! [               [ reduce using rule 14 (expression -> ID .) ]


state 14

    (54) while_instruction -> WHILE . ( expression ) instruction

    (               shift and go to state 55


state 15

    (18) expression -> ( . expression )
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 56

state 16

    (52) if_instruction -> IF . ( expression ) instruction
    (53) if_instruction -> IF . ( expression ) instruction ELSE instruction

    (               shift and go to state 57


state 17

    (57) print_instruction -> PRINT . expression_list ;
    (50) expression_list -> . expression
    (51) expression_list -> . expression_list , expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression_list                shift and go to state 58
    expression                     shift and go to state 59

state 18

    (15) expression -> INTNUM .

    ;               reduce using rule 15 (expression -> INTNUM .)
    +               reduce using rule 15 (expression -> INTNUM .)
    -               reduce using rule 15 (expression -> INTNUM .)
    *               reduce using rule 15 (expression -> INTNUM .)
    /               reduce using rule 15 (expression -> INTNUM .)
    DOTADD          reduce using rule 15 (expression -> INTNUM .)
    DOTSUB          reduce using rule 15 (expression -> INTNUM .)
    DOTMUL          reduce using rule 15 (expression -> INTNUM .)
    DOTDIV          reduce using rule 15 (expression -> INTNUM .)
    TRANSPOSITION   reduce using rule 15 (expression -> INTNUM .)
    EQ              reduce using rule 15 (expression -> INTNUM .)
    NEQ             reduce using rule 15 (expression -> INTNUM .)
    LT              reduce using rule 15 (expression -> INTNUM .)
    NLT             reduce using rule 15 (expression -> INTNUM .)
    GT              reduce using rule 15 (expression -> INTNUM .)
    NGT             reduce using rule 15 (expression -> INTNUM .)
    )               reduce using rule 15 (expression -> INTNUM .)
    ,               reduce using rule 15 (expression -> INTNUM .)
    ]               reduce using rule 15 (expression -> INTNUM .)
    :               reduce using rule 15 (expression -> INTNUM .)
    {               reduce using rule 15 (expression -> INTNUM .)
    BREAK           reduce using rule 15 (expression -> INTNUM .)
    CONTINUE        reduce using rule 15 (expression -> INTNUM .)
    RETURN          reduce using rule 15 (expression -> INTNUM .)
    FOR             reduce using rule 15 (expression -> INTNUM .)
    WHILE           reduce using rule 15 (expression -> INTNUM .)
    IF              reduce using rule 15 (expression -> INTNUM .)
    PRINT           reduce using rule 15 (expression -> INTNUM .)
    ID              reduce using rule 15 (expression -> INTNUM .)
    INTNUM          reduce using rule 15 (expression -> INTNUM .)
    FLOAT           reduce using rule 15 (expression -> INTNUM .)
    STRING          reduce using rule 15 (expression -> INTNUM .)
    (               reduce using rule 15 (expression -> INTNUM .)
    [               reduce using rule 15 (expression -> INTNUM .)
    ZEROS           reduce using rule 15 (expression -> INTNUM .)
    ONES            reduce using rule 15 (expression -> INTNUM .)
    EYE             reduce using rule 15 (expression -> INTNUM .)


state 19

    (16) expression -> FLOAT .

    ;               reduce using rule 16 (expression -> FLOAT .)
    +               reduce using rule 16 (expression -> FLOAT .)
    -               reduce using rule 16 (expression -> FLOAT .)
    *               reduce using rule 16 (expression -> FLOAT .)
    /               reduce using rule 16 (expression -> FLOAT .)
    DOTADD          reduce using rule 16 (expression -> FLOAT .)
    DOTSUB          reduce using rule 16 (expression -> FLOAT .)
    DOTMUL          reduce using rule 16 (expression -> FLOAT .)
    DOTDIV          reduce using rule 16 (expression -> FLOAT .)
    TRANSPOSITION   reduce using rule 16 (expression -> FLOAT .)
    EQ              reduce using rule 16 (expression -> FLOAT .)
    NEQ             reduce using rule 16 (expression -> FLOAT .)
    LT              reduce using rule 16 (expression -> FLOAT .)
    NLT             reduce using rule 16 (expression -> FLOAT .)
    GT              reduce using rule 16 (expression -> FLOAT .)
    NGT             reduce using rule 16 (expression -> FLOAT .)
    )               reduce using rule 16 (expression -> FLOAT .)
    ,               reduce using rule 16 (expression -> FLOAT .)
    ]               reduce using rule 16 (expression -> FLOAT .)
    :               reduce using rule 16 (expression -> FLOAT .)
    {               reduce using rule 16 (expression -> FLOAT .)
    BREAK           reduce using rule 16 (expression -> FLOAT .)
    CONTINUE        reduce using rule 16 (expression -> FLOAT .)
    RETURN          reduce using rule 16 (expression -> FLOAT .)
    FOR             reduce using rule 16 (expression -> FLOAT .)
    WHILE           reduce using rule 16 (expression -> FLOAT .)
    IF              reduce using rule 16 (expression -> FLOAT .)
    PRINT           reduce using rule 16 (expression -> FLOAT .)
    ID              reduce using rule 16 (expression -> FLOAT .)
    INTNUM          reduce using rule 16 (expression -> FLOAT .)
    FLOAT           reduce using rule 16 (expression -> FLOAT .)
    STRING          reduce using rule 16 (expression -> FLOAT .)
    (               reduce using rule 16 (expression -> FLOAT .)
    [               reduce using rule 16 (expression -> FLOAT .)
    ZEROS           reduce using rule 16 (expression -> FLOAT .)
    ONES            reduce using rule 16 (expression -> FLOAT .)
    EYE             reduce using rule 16 (expression -> FLOAT .)


state 20

    (17) expression -> STRING .

    ;               reduce using rule 17 (expression -> STRING .)
    +               reduce using rule 17 (expression -> STRING .)
    -               reduce using rule 17 (expression -> STRING .)
    *               reduce using rule 17 (expression -> STRING .)
    /               reduce using rule 17 (expression -> STRING .)
    DOTADD          reduce using rule 17 (expression -> STRING .)
    DOTSUB          reduce using rule 17 (expression -> STRING .)
    DOTMUL          reduce using rule 17 (expression -> STRING .)
    DOTDIV          reduce using rule 17 (expression -> STRING .)
    TRANSPOSITION   reduce using rule 17 (expression -> STRING .)
    EQ              reduce using rule 17 (expression -> STRING .)
    NEQ             reduce using rule 17 (expression -> STRING .)
    LT              reduce using rule 17 (expression -> STRING .)
    NLT             reduce using rule 17 (expression -> STRING .)
    GT              reduce using rule 17 (expression -> STRING .)
    NGT             reduce using rule 17 (expression -> STRING .)
    )               reduce using rule 17 (expression -> STRING .)
    ,               reduce using rule 17 (expression -> STRING .)
    ]               reduce using rule 17 (expression -> STRING .)
    :               reduce using rule 17 (expression -> STRING .)
    {               reduce using rule 17 (expression -> STRING .)
    BREAK           reduce using rule 17 (expression -> STRING .)
    CONTINUE        reduce using rule 17 (expression -> STRING .)
    RETURN          reduce using rule 17 (expression -> STRING .)
    FOR             reduce using rule 17 (expression -> STRING .)
    WHILE           reduce using rule 17 (expression -> STRING .)
    IF              reduce using rule 17 (expression -> STRING .)
    PRINT           reduce using rule 17 (expression -> STRING .)
    ID              reduce using rule 17 (expression -> STRING .)
    INTNUM          reduce using rule 17 (expression -> STRING .)
    FLOAT           reduce using rule 17 (expression -> STRING .)
    STRING          reduce using rule 17 (expression -> STRING .)
    (               reduce using rule 17 (expression -> STRING .)
    [               reduce using rule 17 (expression -> STRING .)
    ZEROS           reduce using rule 17 (expression -> STRING .)
    ONES            reduce using rule 17 (expression -> STRING .)
    EYE             reduce using rule 17 (expression -> STRING .)


state 21

    (19) expression -> [ . ]
    (20) expression -> [ . expression_list ]
    (50) expression_list -> . expression
    (51) expression_list -> . expression_list , expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ]               shift and go to state 60
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression_list                shift and go to state 61
    expression                     shift and go to state 59

state 22

    (31) expression -> ZEROS . ( expression_list )

    (               shift and go to state 62


state 23

    (32) expression -> ONES . ( expression_list )

    (               shift and go to state 63


state 24

    (33) expression -> EYE . ( expression_list )

    (               shift and go to state 64


state 25

    (42) expression -> - . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 65

state 26

    (2) program -> program instruction .

    {               reduce using rule 2 (program -> program instruction .)
    BREAK           reduce using rule 2 (program -> program instruction .)
    CONTINUE        reduce using rule 2 (program -> program instruction .)
    RETURN          reduce using rule 2 (program -> program instruction .)
    FOR             reduce using rule 2 (program -> program instruction .)
    WHILE           reduce using rule 2 (program -> program instruction .)
    IF              reduce using rule 2 (program -> program instruction .)
    PRINT           reduce using rule 2 (program -> program instruction .)
    ID              reduce using rule 2 (program -> program instruction .)
    INTNUM          reduce using rule 2 (program -> program instruction .)
    FLOAT           reduce using rule 2 (program -> program instruction .)
    STRING          reduce using rule 2 (program -> program instruction .)
    (               reduce using rule 2 (program -> program instruction .)
    [               reduce using rule 2 (program -> program instruction .)
    ZEROS           reduce using rule 2 (program -> program instruction .)
    ONES            reduce using rule 2 (program -> program instruction .)
    EYE             reduce using rule 2 (program -> program instruction .)
    -               reduce using rule 2 (program -> program instruction .)
    $end            reduce using rule 2 (program -> program instruction .)


state 27

    (7) instruction -> { instructions_list . }
    (13) instructions_list -> instructions_list . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    }               shift and go to state 66
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    instruction                    shift and go to state 67
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11

state 28

    (12) instructions_list -> instruction .

    }               reduce using rule 12 (instructions_list -> instruction .)
    {               reduce using rule 12 (instructions_list -> instruction .)
    BREAK           reduce using rule 12 (instructions_list -> instruction .)
    CONTINUE        reduce using rule 12 (instructions_list -> instruction .)
    RETURN          reduce using rule 12 (instructions_list -> instruction .)
    FOR             reduce using rule 12 (instructions_list -> instruction .)
    WHILE           reduce using rule 12 (instructions_list -> instruction .)
    IF              reduce using rule 12 (instructions_list -> instruction .)
    PRINT           reduce using rule 12 (instructions_list -> instruction .)
    ID              reduce using rule 12 (instructions_list -> instruction .)
    INTNUM          reduce using rule 12 (instructions_list -> instruction .)
    FLOAT           reduce using rule 12 (instructions_list -> instruction .)
    STRING          reduce using rule 12 (instructions_list -> instruction .)
    (               reduce using rule 12 (instructions_list -> instruction .)
    [               reduce using rule 12 (instructions_list -> instruction .)
    ZEROS           reduce using rule 12 (instructions_list -> instruction .)
    ONES            reduce using rule 12 (instructions_list -> instruction .)
    EYE             reduce using rule 12 (instructions_list -> instruction .)
    -               reduce using rule 12 (instructions_list -> instruction .)


state 29

    (8) instruction -> BREAK ; .

    {               reduce using rule 8 (instruction -> BREAK ; .)
    BREAK           reduce using rule 8 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 8 (instruction -> BREAK ; .)
    RETURN          reduce using rule 8 (instruction -> BREAK ; .)
    FOR             reduce using rule 8 (instruction -> BREAK ; .)
    WHILE           reduce using rule 8 (instruction -> BREAK ; .)
    IF              reduce using rule 8 (instruction -> BREAK ; .)
    PRINT           reduce using rule 8 (instruction -> BREAK ; .)
    ID              reduce using rule 8 (instruction -> BREAK ; .)
    INTNUM          reduce using rule 8 (instruction -> BREAK ; .)
    FLOAT           reduce using rule 8 (instruction -> BREAK ; .)
    STRING          reduce using rule 8 (instruction -> BREAK ; .)
    (               reduce using rule 8 (instruction -> BREAK ; .)
    [               reduce using rule 8 (instruction -> BREAK ; .)
    ZEROS           reduce using rule 8 (instruction -> BREAK ; .)
    ONES            reduce using rule 8 (instruction -> BREAK ; .)
    EYE             reduce using rule 8 (instruction -> BREAK ; .)
    -               reduce using rule 8 (instruction -> BREAK ; .)
    $end            reduce using rule 8 (instruction -> BREAK ; .)
    }               reduce using rule 8 (instruction -> BREAK ; .)
    ELSE            reduce using rule 8 (instruction -> BREAK ; .)


state 30

    (9) instruction -> CONTINUE ; .

    {               reduce using rule 9 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 9 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 9 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 9 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 9 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 9 (instruction -> CONTINUE ; .)
    IF              reduce using rule 9 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 9 (instruction -> CONTINUE ; .)
    ID              reduce using rule 9 (instruction -> CONTINUE ; .)
    INTNUM          reduce using rule 9 (instruction -> CONTINUE ; .)
    FLOAT           reduce using rule 9 (instruction -> CONTINUE ; .)
    STRING          reduce using rule 9 (instruction -> CONTINUE ; .)
    (               reduce using rule 9 (instruction -> CONTINUE ; .)
    [               reduce using rule 9 (instruction -> CONTINUE ; .)
    ZEROS           reduce using rule 9 (instruction -> CONTINUE ; .)
    ONES            reduce using rule 9 (instruction -> CONTINUE ; .)
    EYE             reduce using rule 9 (instruction -> CONTINUE ; .)
    -               reduce using rule 9 (instruction -> CONTINUE ; .)
    $end            reduce using rule 9 (instruction -> CONTINUE ; .)
    }               reduce using rule 9 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 9 (instruction -> CONTINUE ; .)


state 31

    (10) instruction -> RETURN expression . ;
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               shift and go to state 68
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 32

    (11) instruction -> expression ; .

    {               reduce using rule 11 (instruction -> expression ; .)
    BREAK           reduce using rule 11 (instruction -> expression ; .)
    CONTINUE        reduce using rule 11 (instruction -> expression ; .)
    RETURN          reduce using rule 11 (instruction -> expression ; .)
    FOR             reduce using rule 11 (instruction -> expression ; .)
    WHILE           reduce using rule 11 (instruction -> expression ; .)
    IF              reduce using rule 11 (instruction -> expression ; .)
    PRINT           reduce using rule 11 (instruction -> expression ; .)
    ID              reduce using rule 11 (instruction -> expression ; .)
    INTNUM          reduce using rule 11 (instruction -> expression ; .)
    FLOAT           reduce using rule 11 (instruction -> expression ; .)
    STRING          reduce using rule 11 (instruction -> expression ; .)
    (               reduce using rule 11 (instruction -> expression ; .)
    [               reduce using rule 11 (instruction -> expression ; .)
    ZEROS           reduce using rule 11 (instruction -> expression ; .)
    ONES            reduce using rule 11 (instruction -> expression ; .)
    EYE             reduce using rule 11 (instruction -> expression ; .)
    -               reduce using rule 11 (instruction -> expression ; .)
    $end            reduce using rule 11 (instruction -> expression ; .)
    }               reduce using rule 11 (instruction -> expression ; .)
    ELSE            reduce using rule 11 (instruction -> expression ; .)


state 33

    (34) expression -> expression + . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 69

state 34

    (35) expression -> expression - . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 70

state 35

    (36) expression -> expression * . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 71

state 36

    (37) expression -> expression / . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 72

state 37

    (38) expression -> expression DOTADD . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 73

state 38

    (39) expression -> expression DOTSUB . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 74

state 39

    (40) expression -> expression DOTMUL . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 75

state 40

    (41) expression -> expression DOTDIV . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 76

state 41

    (43) expression -> expression TRANSPOSITION .

    ;               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    +               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    -               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    *               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    /               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    DOTADD          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    DOTSUB          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    DOTMUL          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    DOTDIV          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    TRANSPOSITION   reduce using rule 43 (expression -> expression TRANSPOSITION .)
    EQ              reduce using rule 43 (expression -> expression TRANSPOSITION .)
    NEQ             reduce using rule 43 (expression -> expression TRANSPOSITION .)
    LT              reduce using rule 43 (expression -> expression TRANSPOSITION .)
    NLT             reduce using rule 43 (expression -> expression TRANSPOSITION .)
    GT              reduce using rule 43 (expression -> expression TRANSPOSITION .)
    NGT             reduce using rule 43 (expression -> expression TRANSPOSITION .)
    )               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    ,               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    ]               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    :               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    {               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    BREAK           reduce using rule 43 (expression -> expression TRANSPOSITION .)
    CONTINUE        reduce using rule 43 (expression -> expression TRANSPOSITION .)
    RETURN          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    FOR             reduce using rule 43 (expression -> expression TRANSPOSITION .)
    WHILE           reduce using rule 43 (expression -> expression TRANSPOSITION .)
    IF              reduce using rule 43 (expression -> expression TRANSPOSITION .)
    PRINT           reduce using rule 43 (expression -> expression TRANSPOSITION .)
    ID              reduce using rule 43 (expression -> expression TRANSPOSITION .)
    INTNUM          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    FLOAT           reduce using rule 43 (expression -> expression TRANSPOSITION .)
    STRING          reduce using rule 43 (expression -> expression TRANSPOSITION .)
    (               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    [               reduce using rule 43 (expression -> expression TRANSPOSITION .)
    ZEROS           reduce using rule 43 (expression -> expression TRANSPOSITION .)
    ONES            reduce using rule 43 (expression -> expression TRANSPOSITION .)
    EYE             reduce using rule 43 (expression -> expression TRANSPOSITION .)


state 42

    (44) expression -> expression EQ . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 77

state 43

    (45) expression -> expression NEQ . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 78

state 44

    (46) expression -> expression LT . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 79

state 45

    (47) expression -> expression NLT . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 80

state 46

    (48) expression -> expression GT . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 81

state 47

    (49) expression -> expression NGT . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 82

state 48

    (56) for_instruction -> FOR ID . = range instruction

    =               shift and go to state 83


state 49

    (21) expression -> ID = . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 84

state 50

    (22) expression -> ID ADDASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 85

state 51

    (23) expression -> ID SUBASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 86

state 52

    (24) expression -> ID MULASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 87

state 53

    (25) expression -> ID DIVASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 88

state 54

    (26) expression -> ID [ . expression_list ] = expression
    (27) expression -> ID [ . expression_list ] ADDASSIGN expression
    (28) expression -> ID [ . expression_list ] SUBASSIGN expression
    (29) expression -> ID [ . expression_list ] MULASSIGN expression
    (30) expression -> ID [ . expression_list ] DIVASSIGN expression
    (50) expression_list -> . expression
    (51) expression_list -> . expression_list , expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression_list                shift and go to state 89
    expression                     shift and go to state 59

state 55

    (54) while_instruction -> WHILE ( . expression ) instruction
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 90

state 56

    (18) expression -> ( expression . )
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    )               shift and go to state 91
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 57

    (52) if_instruction -> IF ( . expression ) instruction
    (53) if_instruction -> IF ( . expression ) instruction ELSE instruction
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 92

state 58

    (57) print_instruction -> PRINT expression_list . ;
    (51) expression_list -> expression_list . , expression

    ;               shift and go to state 93
    ,               shift and go to state 94


state 59

    (50) expression_list -> expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 50 (expression_list -> expression .)
    ,               reduce using rule 50 (expression_list -> expression .)
    ]               reduce using rule 50 (expression_list -> expression .)
    )               reduce using rule 50 (expression_list -> expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 60

    (19) expression -> [ ] .

    ;               reduce using rule 19 (expression -> [ ] .)
    +               reduce using rule 19 (expression -> [ ] .)
    -               reduce using rule 19 (expression -> [ ] .)
    *               reduce using rule 19 (expression -> [ ] .)
    /               reduce using rule 19 (expression -> [ ] .)
    DOTADD          reduce using rule 19 (expression -> [ ] .)
    DOTSUB          reduce using rule 19 (expression -> [ ] .)
    DOTMUL          reduce using rule 19 (expression -> [ ] .)
    DOTDIV          reduce using rule 19 (expression -> [ ] .)
    TRANSPOSITION   reduce using rule 19 (expression -> [ ] .)
    EQ              reduce using rule 19 (expression -> [ ] .)
    NEQ             reduce using rule 19 (expression -> [ ] .)
    LT              reduce using rule 19 (expression -> [ ] .)
    NLT             reduce using rule 19 (expression -> [ ] .)
    GT              reduce using rule 19 (expression -> [ ] .)
    NGT             reduce using rule 19 (expression -> [ ] .)
    )               reduce using rule 19 (expression -> [ ] .)
    ,               reduce using rule 19 (expression -> [ ] .)
    ]               reduce using rule 19 (expression -> [ ] .)
    :               reduce using rule 19 (expression -> [ ] .)
    {               reduce using rule 19 (expression -> [ ] .)
    BREAK           reduce using rule 19 (expression -> [ ] .)
    CONTINUE        reduce using rule 19 (expression -> [ ] .)
    RETURN          reduce using rule 19 (expression -> [ ] .)
    FOR             reduce using rule 19 (expression -> [ ] .)
    WHILE           reduce using rule 19 (expression -> [ ] .)
    IF              reduce using rule 19 (expression -> [ ] .)
    PRINT           reduce using rule 19 (expression -> [ ] .)
    ID              reduce using rule 19 (expression -> [ ] .)
    INTNUM          reduce using rule 19 (expression -> [ ] .)
    FLOAT           reduce using rule 19 (expression -> [ ] .)
    STRING          reduce using rule 19 (expression -> [ ] .)
    (               reduce using rule 19 (expression -> [ ] .)
    [               reduce using rule 19 (expression -> [ ] .)
    ZEROS           reduce using rule 19 (expression -> [ ] .)
    ONES            reduce using rule 19 (expression -> [ ] .)
    EYE             reduce using rule 19 (expression -> [ ] .)


state 61

    (20) expression -> [ expression_list . ]
    (51) expression_list -> expression_list . , expression

    ]               shift and go to state 95
    ,               shift and go to state 94


state 62

    (31) expression -> ZEROS ( . expression_list )
    (50) expression_list -> . expression
    (51) expression_list -> . expression_list , expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression_list                shift and go to state 96
    expression                     shift and go to state 59

state 63

    (32) expression -> ONES ( . expression_list )
    (50) expression_list -> . expression
    (51) expression_list -> . expression_list , expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression_list                shift and go to state 97
    expression                     shift and go to state 59

state 64

    (33) expression -> EYE ( . expression_list )
    (50) expression_list -> . expression
    (51) expression_list -> . expression_list , expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression_list                shift and go to state 98
    expression                     shift and go to state 59

state 65

    (42) expression -> - expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 42 (expression -> - expression .)
    +               reduce using rule 42 (expression -> - expression .)
    -               reduce using rule 42 (expression -> - expression .)
    *               reduce using rule 42 (expression -> - expression .)
    /               reduce using rule 42 (expression -> - expression .)
    DOTADD          reduce using rule 42 (expression -> - expression .)
    DOTSUB          reduce using rule 42 (expression -> - expression .)
    DOTMUL          reduce using rule 42 (expression -> - expression .)
    DOTDIV          reduce using rule 42 (expression -> - expression .)
    EQ              reduce using rule 42 (expression -> - expression .)
    NEQ             reduce using rule 42 (expression -> - expression .)
    LT              reduce using rule 42 (expression -> - expression .)
    NLT             reduce using rule 42 (expression -> - expression .)
    GT              reduce using rule 42 (expression -> - expression .)
    NGT             reduce using rule 42 (expression -> - expression .)
    )               reduce using rule 42 (expression -> - expression .)
    ,               reduce using rule 42 (expression -> - expression .)
    ]               reduce using rule 42 (expression -> - expression .)
    :               reduce using rule 42 (expression -> - expression .)
    {               reduce using rule 42 (expression -> - expression .)
    BREAK           reduce using rule 42 (expression -> - expression .)
    CONTINUE        reduce using rule 42 (expression -> - expression .)
    RETURN          reduce using rule 42 (expression -> - expression .)
    FOR             reduce using rule 42 (expression -> - expression .)
    WHILE           reduce using rule 42 (expression -> - expression .)
    IF              reduce using rule 42 (expression -> - expression .)
    PRINT           reduce using rule 42 (expression -> - expression .)
    ID              reduce using rule 42 (expression -> - expression .)
    INTNUM          reduce using rule 42 (expression -> - expression .)
    FLOAT           reduce using rule 42 (expression -> - expression .)
    STRING          reduce using rule 42 (expression -> - expression .)
    (               reduce using rule 42 (expression -> - expression .)
    [               reduce using rule 42 (expression -> - expression .)
    ZEROS           reduce using rule 42 (expression -> - expression .)
    ONES            reduce using rule 42 (expression -> - expression .)
    EYE             reduce using rule 42 (expression -> - expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 42 (expression -> - expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 66

    (7) instruction -> { instructions_list } .

    {               reduce using rule 7 (instruction -> { instructions_list } .)
    BREAK           reduce using rule 7 (instruction -> { instructions_list } .)
    CONTINUE        reduce using rule 7 (instruction -> { instructions_list } .)
    RETURN          reduce using rule 7 (instruction -> { instructions_list } .)
    FOR             reduce using rule 7 (instruction -> { instructions_list } .)
    WHILE           reduce using rule 7 (instruction -> { instructions_list } .)
    IF              reduce using rule 7 (instruction -> { instructions_list } .)
    PRINT           reduce using rule 7 (instruction -> { instructions_list } .)
    ID              reduce using rule 7 (instruction -> { instructions_list } .)
    INTNUM          reduce using rule 7 (instruction -> { instructions_list } .)
    FLOAT           reduce using rule 7 (instruction -> { instructions_list } .)
    STRING          reduce using rule 7 (instruction -> { instructions_list } .)
    (               reduce using rule 7 (instruction -> { instructions_list } .)
    [               reduce using rule 7 (instruction -> { instructions_list } .)
    ZEROS           reduce using rule 7 (instruction -> { instructions_list } .)
    ONES            reduce using rule 7 (instruction -> { instructions_list } .)
    EYE             reduce using rule 7 (instruction -> { instructions_list } .)
    -               reduce using rule 7 (instruction -> { instructions_list } .)
    $end            reduce using rule 7 (instruction -> { instructions_list } .)
    }               reduce using rule 7 (instruction -> { instructions_list } .)
    ELSE            reduce using rule 7 (instruction -> { instructions_list } .)


state 67

    (13) instructions_list -> instructions_list instruction .

    }               reduce using rule 13 (instructions_list -> instructions_list instruction .)
    {               reduce using rule 13 (instructions_list -> instructions_list instruction .)
    BREAK           reduce using rule 13 (instructions_list -> instructions_list instruction .)
    CONTINUE        reduce using rule 13 (instructions_list -> instructions_list instruction .)
    RETURN          reduce using rule 13 (instructions_list -> instructions_list instruction .)
    FOR             reduce using rule 13 (instructions_list -> instructions_list instruction .)
    WHILE           reduce using rule 13 (instructions_list -> instructions_list instruction .)
    IF              reduce using rule 13 (instructions_list -> instructions_list instruction .)
    PRINT           reduce using rule 13 (instructions_list -> instructions_list instruction .)
    ID              reduce using rule 13 (instructions_list -> instructions_list instruction .)
    INTNUM          reduce using rule 13 (instructions_list -> instructions_list instruction .)
    FLOAT           reduce using rule 13 (instructions_list -> instructions_list instruction .)
    STRING          reduce using rule 13 (instructions_list -> instructions_list instruction .)
    (               reduce using rule 13 (instructions_list -> instructions_list instruction .)
    [               reduce using rule 13 (instructions_list -> instructions_list instruction .)
    ZEROS           reduce using rule 13 (instructions_list -> instructions_list instruction .)
    ONES            reduce using rule 13 (instructions_list -> instructions_list instruction .)
    EYE             reduce using rule 13 (instructions_list -> instructions_list instruction .)
    -               reduce using rule 13 (instructions_list -> instructions_list instruction .)


state 68

    (10) instruction -> RETURN expression ; .

    {               reduce using rule 10 (instruction -> RETURN expression ; .)
    BREAK           reduce using rule 10 (instruction -> RETURN expression ; .)
    CONTINUE        reduce using rule 10 (instruction -> RETURN expression ; .)
    RETURN          reduce using rule 10 (instruction -> RETURN expression ; .)
    FOR             reduce using rule 10 (instruction -> RETURN expression ; .)
    WHILE           reduce using rule 10 (instruction -> RETURN expression ; .)
    IF              reduce using rule 10 (instruction -> RETURN expression ; .)
    PRINT           reduce using rule 10 (instruction -> RETURN expression ; .)
    ID              reduce using rule 10 (instruction -> RETURN expression ; .)
    INTNUM          reduce using rule 10 (instruction -> RETURN expression ; .)
    FLOAT           reduce using rule 10 (instruction -> RETURN expression ; .)
    STRING          reduce using rule 10 (instruction -> RETURN expression ; .)
    (               reduce using rule 10 (instruction -> RETURN expression ; .)
    [               reduce using rule 10 (instruction -> RETURN expression ; .)
    ZEROS           reduce using rule 10 (instruction -> RETURN expression ; .)
    ONES            reduce using rule 10 (instruction -> RETURN expression ; .)
    EYE             reduce using rule 10 (instruction -> RETURN expression ; .)
    -               reduce using rule 10 (instruction -> RETURN expression ; .)
    $end            reduce using rule 10 (instruction -> RETURN expression ; .)
    }               reduce using rule 10 (instruction -> RETURN expression ; .)
    ELSE            reduce using rule 10 (instruction -> RETURN expression ; .)


state 69

    (34) expression -> expression + expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 34 (expression -> expression + expression .)
    +               reduce using rule 34 (expression -> expression + expression .)
    -               reduce using rule 34 (expression -> expression + expression .)
    DOTADD          reduce using rule 34 (expression -> expression + expression .)
    DOTSUB          reduce using rule 34 (expression -> expression + expression .)
    )               reduce using rule 34 (expression -> expression + expression .)
    ,               reduce using rule 34 (expression -> expression + expression .)
    ]               reduce using rule 34 (expression -> expression + expression .)
    :               reduce using rule 34 (expression -> expression + expression .)
    {               reduce using rule 34 (expression -> expression + expression .)
    BREAK           reduce using rule 34 (expression -> expression + expression .)
    CONTINUE        reduce using rule 34 (expression -> expression + expression .)
    RETURN          reduce using rule 34 (expression -> expression + expression .)
    FOR             reduce using rule 34 (expression -> expression + expression .)
    WHILE           reduce using rule 34 (expression -> expression + expression .)
    IF              reduce using rule 34 (expression -> expression + expression .)
    PRINT           reduce using rule 34 (expression -> expression + expression .)
    ID              reduce using rule 34 (expression -> expression + expression .)
    INTNUM          reduce using rule 34 (expression -> expression + expression .)
    FLOAT           reduce using rule 34 (expression -> expression + expression .)
    STRING          reduce using rule 34 (expression -> expression + expression .)
    (               reduce using rule 34 (expression -> expression + expression .)
    [               reduce using rule 34 (expression -> expression + expression .)
    ZEROS           reduce using rule 34 (expression -> expression + expression .)
    ONES            reduce using rule 34 (expression -> expression + expression .)
    EYE             reduce using rule 34 (expression -> expression + expression .)
    *               shift and go to state 35
    /               shift and go to state 36
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! *               [ reduce using rule 34 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 34 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> expression + expression .) ]
  ! TRANSPOSITION   [ reduce using rule 34 (expression -> expression + expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression + expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression + expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression + expression .) ]
  ! NLT             [ reduce using rule 34 (expression -> expression + expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression + expression .) ]
  ! NGT             [ reduce using rule 34 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]


state 70

    (35) expression -> expression - expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 35 (expression -> expression - expression .)
    +               reduce using rule 35 (expression -> expression - expression .)
    -               reduce using rule 35 (expression -> expression - expression .)
    DOTADD          reduce using rule 35 (expression -> expression - expression .)
    DOTSUB          reduce using rule 35 (expression -> expression - expression .)
    )               reduce using rule 35 (expression -> expression - expression .)
    ,               reduce using rule 35 (expression -> expression - expression .)
    ]               reduce using rule 35 (expression -> expression - expression .)
    :               reduce using rule 35 (expression -> expression - expression .)
    {               reduce using rule 35 (expression -> expression - expression .)
    BREAK           reduce using rule 35 (expression -> expression - expression .)
    CONTINUE        reduce using rule 35 (expression -> expression - expression .)
    RETURN          reduce using rule 35 (expression -> expression - expression .)
    FOR             reduce using rule 35 (expression -> expression - expression .)
    WHILE           reduce using rule 35 (expression -> expression - expression .)
    IF              reduce using rule 35 (expression -> expression - expression .)
    PRINT           reduce using rule 35 (expression -> expression - expression .)
    ID              reduce using rule 35 (expression -> expression - expression .)
    INTNUM          reduce using rule 35 (expression -> expression - expression .)
    FLOAT           reduce using rule 35 (expression -> expression - expression .)
    STRING          reduce using rule 35 (expression -> expression - expression .)
    (               reduce using rule 35 (expression -> expression - expression .)
    [               reduce using rule 35 (expression -> expression - expression .)
    ZEROS           reduce using rule 35 (expression -> expression - expression .)
    ONES            reduce using rule 35 (expression -> expression - expression .)
    EYE             reduce using rule 35 (expression -> expression - expression .)
    *               shift and go to state 35
    /               shift and go to state 36
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! *               [ reduce using rule 35 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 35 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 35 (expression -> expression - expression .) ]
  ! TRANSPOSITION   [ reduce using rule 35 (expression -> expression - expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> expression - expression .) ]
  ! NEQ             [ reduce using rule 35 (expression -> expression - expression .) ]
  ! LT              [ reduce using rule 35 (expression -> expression - expression .) ]
  ! NLT             [ reduce using rule 35 (expression -> expression - expression .) ]
  ! GT              [ reduce using rule 35 (expression -> expression - expression .) ]
  ! NGT             [ reduce using rule 35 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]


state 71

    (36) expression -> expression * expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 36 (expression -> expression * expression .)
    +               reduce using rule 36 (expression -> expression * expression .)
    -               reduce using rule 36 (expression -> expression * expression .)
    *               reduce using rule 36 (expression -> expression * expression .)
    /               reduce using rule 36 (expression -> expression * expression .)
    DOTADD          reduce using rule 36 (expression -> expression * expression .)
    DOTSUB          reduce using rule 36 (expression -> expression * expression .)
    DOTMUL          reduce using rule 36 (expression -> expression * expression .)
    DOTDIV          reduce using rule 36 (expression -> expression * expression .)
    )               reduce using rule 36 (expression -> expression * expression .)
    ,               reduce using rule 36 (expression -> expression * expression .)
    ]               reduce using rule 36 (expression -> expression * expression .)
    :               reduce using rule 36 (expression -> expression * expression .)
    {               reduce using rule 36 (expression -> expression * expression .)
    BREAK           reduce using rule 36 (expression -> expression * expression .)
    CONTINUE        reduce using rule 36 (expression -> expression * expression .)
    RETURN          reduce using rule 36 (expression -> expression * expression .)
    FOR             reduce using rule 36 (expression -> expression * expression .)
    WHILE           reduce using rule 36 (expression -> expression * expression .)
    IF              reduce using rule 36 (expression -> expression * expression .)
    PRINT           reduce using rule 36 (expression -> expression * expression .)
    ID              reduce using rule 36 (expression -> expression * expression .)
    INTNUM          reduce using rule 36 (expression -> expression * expression .)
    FLOAT           reduce using rule 36 (expression -> expression * expression .)
    STRING          reduce using rule 36 (expression -> expression * expression .)
    (               reduce using rule 36 (expression -> expression * expression .)
    [               reduce using rule 36 (expression -> expression * expression .)
    ZEROS           reduce using rule 36 (expression -> expression * expression .)
    ONES            reduce using rule 36 (expression -> expression * expression .)
    EYE             reduce using rule 36 (expression -> expression * expression .)
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! TRANSPOSITION   [ reduce using rule 36 (expression -> expression * expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> expression * expression .) ]
  ! NEQ             [ reduce using rule 36 (expression -> expression * expression .) ]
  ! LT              [ reduce using rule 36 (expression -> expression * expression .) ]
  ! NLT             [ reduce using rule 36 (expression -> expression * expression .) ]
  ! GT              [ reduce using rule 36 (expression -> expression * expression .) ]
  ! NGT             [ reduce using rule 36 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]


state 72

    (37) expression -> expression / expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 37 (expression -> expression / expression .)
    +               reduce using rule 37 (expression -> expression / expression .)
    -               reduce using rule 37 (expression -> expression / expression .)
    *               reduce using rule 37 (expression -> expression / expression .)
    /               reduce using rule 37 (expression -> expression / expression .)
    DOTADD          reduce using rule 37 (expression -> expression / expression .)
    DOTSUB          reduce using rule 37 (expression -> expression / expression .)
    DOTMUL          reduce using rule 37 (expression -> expression / expression .)
    DOTDIV          reduce using rule 37 (expression -> expression / expression .)
    )               reduce using rule 37 (expression -> expression / expression .)
    ,               reduce using rule 37 (expression -> expression / expression .)
    ]               reduce using rule 37 (expression -> expression / expression .)
    :               reduce using rule 37 (expression -> expression / expression .)
    {               reduce using rule 37 (expression -> expression / expression .)
    BREAK           reduce using rule 37 (expression -> expression / expression .)
    CONTINUE        reduce using rule 37 (expression -> expression / expression .)
    RETURN          reduce using rule 37 (expression -> expression / expression .)
    FOR             reduce using rule 37 (expression -> expression / expression .)
    WHILE           reduce using rule 37 (expression -> expression / expression .)
    IF              reduce using rule 37 (expression -> expression / expression .)
    PRINT           reduce using rule 37 (expression -> expression / expression .)
    ID              reduce using rule 37 (expression -> expression / expression .)
    INTNUM          reduce using rule 37 (expression -> expression / expression .)
    FLOAT           reduce using rule 37 (expression -> expression / expression .)
    STRING          reduce using rule 37 (expression -> expression / expression .)
    (               reduce using rule 37 (expression -> expression / expression .)
    [               reduce using rule 37 (expression -> expression / expression .)
    ZEROS           reduce using rule 37 (expression -> expression / expression .)
    ONES            reduce using rule 37 (expression -> expression / expression .)
    EYE             reduce using rule 37 (expression -> expression / expression .)
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! TRANSPOSITION   [ reduce using rule 37 (expression -> expression / expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> expression / expression .) ]
  ! NEQ             [ reduce using rule 37 (expression -> expression / expression .) ]
  ! LT              [ reduce using rule 37 (expression -> expression / expression .) ]
  ! NLT             [ reduce using rule 37 (expression -> expression / expression .) ]
  ! GT              [ reduce using rule 37 (expression -> expression / expression .) ]
  ! NGT             [ reduce using rule 37 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]


state 73

    (38) expression -> expression DOTADD expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 38 (expression -> expression DOTADD expression .)
    +               reduce using rule 38 (expression -> expression DOTADD expression .)
    -               reduce using rule 38 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 38 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 38 (expression -> expression DOTADD expression .)
    )               reduce using rule 38 (expression -> expression DOTADD expression .)
    ,               reduce using rule 38 (expression -> expression DOTADD expression .)
    ]               reduce using rule 38 (expression -> expression DOTADD expression .)
    :               reduce using rule 38 (expression -> expression DOTADD expression .)
    {               reduce using rule 38 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 38 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 38 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 38 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 38 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 38 (expression -> expression DOTADD expression .)
    IF              reduce using rule 38 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 38 (expression -> expression DOTADD expression .)
    ID              reduce using rule 38 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 38 (expression -> expression DOTADD expression .)
    FLOAT           reduce using rule 38 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 38 (expression -> expression DOTADD expression .)
    (               reduce using rule 38 (expression -> expression DOTADD expression .)
    [               reduce using rule 38 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 38 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 38 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 38 (expression -> expression DOTADD expression .)
    *               shift and go to state 35
    /               shift and go to state 36
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! *               [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! TRANSPOSITION   [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! NEQ             [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! LT              [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! NLT             [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! GT              [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! NGT             [ reduce using rule 38 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]


state 74

    (39) expression -> expression DOTSUB expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 39 (expression -> expression DOTSUB expression .)
    +               reduce using rule 39 (expression -> expression DOTSUB expression .)
    -               reduce using rule 39 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 39 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 39 (expression -> expression DOTSUB expression .)
    )               reduce using rule 39 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 39 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 39 (expression -> expression DOTSUB expression .)
    :               reduce using rule 39 (expression -> expression DOTSUB expression .)
    {               reduce using rule 39 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 39 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 39 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 39 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 39 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 39 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 39 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 39 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 39 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 39 (expression -> expression DOTSUB expression .)
    FLOAT           reduce using rule 39 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 39 (expression -> expression DOTSUB expression .)
    (               reduce using rule 39 (expression -> expression DOTSUB expression .)
    [               reduce using rule 39 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 39 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 39 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 39 (expression -> expression DOTSUB expression .)
    *               shift and go to state 35
    /               shift and go to state 36
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! *               [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! TRANSPOSITION   [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! LT              [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! NLT             [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! GT              [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! NGT             [ reduce using rule 39 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]


state 75

    (40) expression -> expression DOTMUL expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 40 (expression -> expression DOTMUL expression .)
    +               reduce using rule 40 (expression -> expression DOTMUL expression .)
    -               reduce using rule 40 (expression -> expression DOTMUL expression .)
    *               reduce using rule 40 (expression -> expression DOTMUL expression .)
    /               reduce using rule 40 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 40 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 40 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 40 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 40 (expression -> expression DOTMUL expression .)
    )               reduce using rule 40 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 40 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 40 (expression -> expression DOTMUL expression .)
    :               reduce using rule 40 (expression -> expression DOTMUL expression .)
    {               reduce using rule 40 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 40 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 40 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 40 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 40 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 40 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 40 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 40 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 40 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 40 (expression -> expression DOTMUL expression .)
    FLOAT           reduce using rule 40 (expression -> expression DOTMUL expression .)
    STRING          reduce using rule 40 (expression -> expression DOTMUL expression .)
    (               reduce using rule 40 (expression -> expression DOTMUL expression .)
    [               reduce using rule 40 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 40 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 40 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 40 (expression -> expression DOTMUL expression .)
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! TRANSPOSITION   [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! LT              [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! NLT             [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! GT              [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! NGT             [ reduce using rule 40 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]


state 76

    (41) expression -> expression DOTDIV expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 41 (expression -> expression DOTDIV expression .)
    +               reduce using rule 41 (expression -> expression DOTDIV expression .)
    -               reduce using rule 41 (expression -> expression DOTDIV expression .)
    *               reduce using rule 41 (expression -> expression DOTDIV expression .)
    /               reduce using rule 41 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 41 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 41 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 41 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 41 (expression -> expression DOTDIV expression .)
    )               reduce using rule 41 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 41 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 41 (expression -> expression DOTDIV expression .)
    :               reduce using rule 41 (expression -> expression DOTDIV expression .)
    {               reduce using rule 41 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 41 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 41 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 41 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 41 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 41 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 41 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 41 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 41 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 41 (expression -> expression DOTDIV expression .)
    FLOAT           reduce using rule 41 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 41 (expression -> expression DOTDIV expression .)
    (               reduce using rule 41 (expression -> expression DOTDIV expression .)
    [               reduce using rule 41 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 41 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 41 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 41 (expression -> expression DOTDIV expression .)
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! TRANSPOSITION   [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! LT              [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! NLT             [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! GT              [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! NGT             [ reduce using rule 41 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]


state 77

    (44) expression -> expression EQ expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 44 (expression -> expression EQ expression .)
    +               reduce using rule 44 (expression -> expression EQ expression .)
    -               reduce using rule 44 (expression -> expression EQ expression .)
    *               reduce using rule 44 (expression -> expression EQ expression .)
    /               reduce using rule 44 (expression -> expression EQ expression .)
    DOTADD          reduce using rule 44 (expression -> expression EQ expression .)
    DOTSUB          reduce using rule 44 (expression -> expression EQ expression .)
    DOTMUL          reduce using rule 44 (expression -> expression EQ expression .)
    DOTDIV          reduce using rule 44 (expression -> expression EQ expression .)
    EQ              reduce using rule 44 (expression -> expression EQ expression .)
    NEQ             reduce using rule 44 (expression -> expression EQ expression .)
    LT              reduce using rule 44 (expression -> expression EQ expression .)
    NLT             reduce using rule 44 (expression -> expression EQ expression .)
    GT              reduce using rule 44 (expression -> expression EQ expression .)
    NGT             reduce using rule 44 (expression -> expression EQ expression .)
    )               reduce using rule 44 (expression -> expression EQ expression .)
    ,               reduce using rule 44 (expression -> expression EQ expression .)
    ]               reduce using rule 44 (expression -> expression EQ expression .)
    :               reduce using rule 44 (expression -> expression EQ expression .)
    {               reduce using rule 44 (expression -> expression EQ expression .)
    BREAK           reduce using rule 44 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 44 (expression -> expression EQ expression .)
    RETURN          reduce using rule 44 (expression -> expression EQ expression .)
    FOR             reduce using rule 44 (expression -> expression EQ expression .)
    WHILE           reduce using rule 44 (expression -> expression EQ expression .)
    IF              reduce using rule 44 (expression -> expression EQ expression .)
    PRINT           reduce using rule 44 (expression -> expression EQ expression .)
    ID              reduce using rule 44 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 44 (expression -> expression EQ expression .)
    FLOAT           reduce using rule 44 (expression -> expression EQ expression .)
    STRING          reduce using rule 44 (expression -> expression EQ expression .)
    (               reduce using rule 44 (expression -> expression EQ expression .)
    [               reduce using rule 44 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 44 (expression -> expression EQ expression .)
    ONES            reduce using rule 44 (expression -> expression EQ expression .)
    EYE             reduce using rule 44 (expression -> expression EQ expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 78

    (45) expression -> expression NEQ expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 45 (expression -> expression NEQ expression .)
    +               reduce using rule 45 (expression -> expression NEQ expression .)
    -               reduce using rule 45 (expression -> expression NEQ expression .)
    *               reduce using rule 45 (expression -> expression NEQ expression .)
    /               reduce using rule 45 (expression -> expression NEQ expression .)
    DOTADD          reduce using rule 45 (expression -> expression NEQ expression .)
    DOTSUB          reduce using rule 45 (expression -> expression NEQ expression .)
    DOTMUL          reduce using rule 45 (expression -> expression NEQ expression .)
    DOTDIV          reduce using rule 45 (expression -> expression NEQ expression .)
    EQ              reduce using rule 45 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 45 (expression -> expression NEQ expression .)
    LT              reduce using rule 45 (expression -> expression NEQ expression .)
    NLT             reduce using rule 45 (expression -> expression NEQ expression .)
    GT              reduce using rule 45 (expression -> expression NEQ expression .)
    NGT             reduce using rule 45 (expression -> expression NEQ expression .)
    )               reduce using rule 45 (expression -> expression NEQ expression .)
    ,               reduce using rule 45 (expression -> expression NEQ expression .)
    ]               reduce using rule 45 (expression -> expression NEQ expression .)
    :               reduce using rule 45 (expression -> expression NEQ expression .)
    {               reduce using rule 45 (expression -> expression NEQ expression .)
    BREAK           reduce using rule 45 (expression -> expression NEQ expression .)
    CONTINUE        reduce using rule 45 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 45 (expression -> expression NEQ expression .)
    FOR             reduce using rule 45 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 45 (expression -> expression NEQ expression .)
    IF              reduce using rule 45 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 45 (expression -> expression NEQ expression .)
    ID              reduce using rule 45 (expression -> expression NEQ expression .)
    INTNUM          reduce using rule 45 (expression -> expression NEQ expression .)
    FLOAT           reduce using rule 45 (expression -> expression NEQ expression .)
    STRING          reduce using rule 45 (expression -> expression NEQ expression .)
    (               reduce using rule 45 (expression -> expression NEQ expression .)
    [               reduce using rule 45 (expression -> expression NEQ expression .)
    ZEROS           reduce using rule 45 (expression -> expression NEQ expression .)
    ONES            reduce using rule 45 (expression -> expression NEQ expression .)
    EYE             reduce using rule 45 (expression -> expression NEQ expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 45 (expression -> expression NEQ expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 79

    (46) expression -> expression LT expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 46 (expression -> expression LT expression .)
    +               reduce using rule 46 (expression -> expression LT expression .)
    -               reduce using rule 46 (expression -> expression LT expression .)
    *               reduce using rule 46 (expression -> expression LT expression .)
    /               reduce using rule 46 (expression -> expression LT expression .)
    DOTADD          reduce using rule 46 (expression -> expression LT expression .)
    DOTSUB          reduce using rule 46 (expression -> expression LT expression .)
    DOTMUL          reduce using rule 46 (expression -> expression LT expression .)
    DOTDIV          reduce using rule 46 (expression -> expression LT expression .)
    EQ              reduce using rule 46 (expression -> expression LT expression .)
    NEQ             reduce using rule 46 (expression -> expression LT expression .)
    LT              reduce using rule 46 (expression -> expression LT expression .)
    NLT             reduce using rule 46 (expression -> expression LT expression .)
    GT              reduce using rule 46 (expression -> expression LT expression .)
    NGT             reduce using rule 46 (expression -> expression LT expression .)
    )               reduce using rule 46 (expression -> expression LT expression .)
    ,               reduce using rule 46 (expression -> expression LT expression .)
    ]               reduce using rule 46 (expression -> expression LT expression .)
    :               reduce using rule 46 (expression -> expression LT expression .)
    {               reduce using rule 46 (expression -> expression LT expression .)
    BREAK           reduce using rule 46 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 46 (expression -> expression LT expression .)
    RETURN          reduce using rule 46 (expression -> expression LT expression .)
    FOR             reduce using rule 46 (expression -> expression LT expression .)
    WHILE           reduce using rule 46 (expression -> expression LT expression .)
    IF              reduce using rule 46 (expression -> expression LT expression .)
    PRINT           reduce using rule 46 (expression -> expression LT expression .)
    ID              reduce using rule 46 (expression -> expression LT expression .)
    INTNUM          reduce using rule 46 (expression -> expression LT expression .)
    FLOAT           reduce using rule 46 (expression -> expression LT expression .)
    STRING          reduce using rule 46 (expression -> expression LT expression .)
    (               reduce using rule 46 (expression -> expression LT expression .)
    [               reduce using rule 46 (expression -> expression LT expression .)
    ZEROS           reduce using rule 46 (expression -> expression LT expression .)
    ONES            reduce using rule 46 (expression -> expression LT expression .)
    EYE             reduce using rule 46 (expression -> expression LT expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 46 (expression -> expression LT expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 80

    (47) expression -> expression NLT expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 47 (expression -> expression NLT expression .)
    +               reduce using rule 47 (expression -> expression NLT expression .)
    -               reduce using rule 47 (expression -> expression NLT expression .)
    *               reduce using rule 47 (expression -> expression NLT expression .)
    /               reduce using rule 47 (expression -> expression NLT expression .)
    DOTADD          reduce using rule 47 (expression -> expression NLT expression .)
    DOTSUB          reduce using rule 47 (expression -> expression NLT expression .)
    DOTMUL          reduce using rule 47 (expression -> expression NLT expression .)
    DOTDIV          reduce using rule 47 (expression -> expression NLT expression .)
    EQ              reduce using rule 47 (expression -> expression NLT expression .)
    NEQ             reduce using rule 47 (expression -> expression NLT expression .)
    LT              reduce using rule 47 (expression -> expression NLT expression .)
    NLT             reduce using rule 47 (expression -> expression NLT expression .)
    GT              reduce using rule 47 (expression -> expression NLT expression .)
    NGT             reduce using rule 47 (expression -> expression NLT expression .)
    )               reduce using rule 47 (expression -> expression NLT expression .)
    ,               reduce using rule 47 (expression -> expression NLT expression .)
    ]               reduce using rule 47 (expression -> expression NLT expression .)
    :               reduce using rule 47 (expression -> expression NLT expression .)
    {               reduce using rule 47 (expression -> expression NLT expression .)
    BREAK           reduce using rule 47 (expression -> expression NLT expression .)
    CONTINUE        reduce using rule 47 (expression -> expression NLT expression .)
    RETURN          reduce using rule 47 (expression -> expression NLT expression .)
    FOR             reduce using rule 47 (expression -> expression NLT expression .)
    WHILE           reduce using rule 47 (expression -> expression NLT expression .)
    IF              reduce using rule 47 (expression -> expression NLT expression .)
    PRINT           reduce using rule 47 (expression -> expression NLT expression .)
    ID              reduce using rule 47 (expression -> expression NLT expression .)
    INTNUM          reduce using rule 47 (expression -> expression NLT expression .)
    FLOAT           reduce using rule 47 (expression -> expression NLT expression .)
    STRING          reduce using rule 47 (expression -> expression NLT expression .)
    (               reduce using rule 47 (expression -> expression NLT expression .)
    [               reduce using rule 47 (expression -> expression NLT expression .)
    ZEROS           reduce using rule 47 (expression -> expression NLT expression .)
    ONES            reduce using rule 47 (expression -> expression NLT expression .)
    EYE             reduce using rule 47 (expression -> expression NLT expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 47 (expression -> expression NLT expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 81

    (48) expression -> expression GT expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 48 (expression -> expression GT expression .)
    +               reduce using rule 48 (expression -> expression GT expression .)
    -               reduce using rule 48 (expression -> expression GT expression .)
    *               reduce using rule 48 (expression -> expression GT expression .)
    /               reduce using rule 48 (expression -> expression GT expression .)
    DOTADD          reduce using rule 48 (expression -> expression GT expression .)
    DOTSUB          reduce using rule 48 (expression -> expression GT expression .)
    DOTMUL          reduce using rule 48 (expression -> expression GT expression .)
    DOTDIV          reduce using rule 48 (expression -> expression GT expression .)
    EQ              reduce using rule 48 (expression -> expression GT expression .)
    NEQ             reduce using rule 48 (expression -> expression GT expression .)
    LT              reduce using rule 48 (expression -> expression GT expression .)
    NLT             reduce using rule 48 (expression -> expression GT expression .)
    GT              reduce using rule 48 (expression -> expression GT expression .)
    NGT             reduce using rule 48 (expression -> expression GT expression .)
    )               reduce using rule 48 (expression -> expression GT expression .)
    ,               reduce using rule 48 (expression -> expression GT expression .)
    ]               reduce using rule 48 (expression -> expression GT expression .)
    :               reduce using rule 48 (expression -> expression GT expression .)
    {               reduce using rule 48 (expression -> expression GT expression .)
    BREAK           reduce using rule 48 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 48 (expression -> expression GT expression .)
    RETURN          reduce using rule 48 (expression -> expression GT expression .)
    FOR             reduce using rule 48 (expression -> expression GT expression .)
    WHILE           reduce using rule 48 (expression -> expression GT expression .)
    IF              reduce using rule 48 (expression -> expression GT expression .)
    PRINT           reduce using rule 48 (expression -> expression GT expression .)
    ID              reduce using rule 48 (expression -> expression GT expression .)
    INTNUM          reduce using rule 48 (expression -> expression GT expression .)
    FLOAT           reduce using rule 48 (expression -> expression GT expression .)
    STRING          reduce using rule 48 (expression -> expression GT expression .)
    (               reduce using rule 48 (expression -> expression GT expression .)
    [               reduce using rule 48 (expression -> expression GT expression .)
    ZEROS           reduce using rule 48 (expression -> expression GT expression .)
    ONES            reduce using rule 48 (expression -> expression GT expression .)
    EYE             reduce using rule 48 (expression -> expression GT expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 82

    (49) expression -> expression NGT expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 49 (expression -> expression NGT expression .)
    +               reduce using rule 49 (expression -> expression NGT expression .)
    -               reduce using rule 49 (expression -> expression NGT expression .)
    *               reduce using rule 49 (expression -> expression NGT expression .)
    /               reduce using rule 49 (expression -> expression NGT expression .)
    DOTADD          reduce using rule 49 (expression -> expression NGT expression .)
    DOTSUB          reduce using rule 49 (expression -> expression NGT expression .)
    DOTMUL          reduce using rule 49 (expression -> expression NGT expression .)
    DOTDIV          reduce using rule 49 (expression -> expression NGT expression .)
    EQ              reduce using rule 49 (expression -> expression NGT expression .)
    NEQ             reduce using rule 49 (expression -> expression NGT expression .)
    LT              reduce using rule 49 (expression -> expression NGT expression .)
    NLT             reduce using rule 49 (expression -> expression NGT expression .)
    GT              reduce using rule 49 (expression -> expression NGT expression .)
    NGT             reduce using rule 49 (expression -> expression NGT expression .)
    )               reduce using rule 49 (expression -> expression NGT expression .)
    ,               reduce using rule 49 (expression -> expression NGT expression .)
    ]               reduce using rule 49 (expression -> expression NGT expression .)
    :               reduce using rule 49 (expression -> expression NGT expression .)
    {               reduce using rule 49 (expression -> expression NGT expression .)
    BREAK           reduce using rule 49 (expression -> expression NGT expression .)
    CONTINUE        reduce using rule 49 (expression -> expression NGT expression .)
    RETURN          reduce using rule 49 (expression -> expression NGT expression .)
    FOR             reduce using rule 49 (expression -> expression NGT expression .)
    WHILE           reduce using rule 49 (expression -> expression NGT expression .)
    IF              reduce using rule 49 (expression -> expression NGT expression .)
    PRINT           reduce using rule 49 (expression -> expression NGT expression .)
    ID              reduce using rule 49 (expression -> expression NGT expression .)
    INTNUM          reduce using rule 49 (expression -> expression NGT expression .)
    FLOAT           reduce using rule 49 (expression -> expression NGT expression .)
    STRING          reduce using rule 49 (expression -> expression NGT expression .)
    (               reduce using rule 49 (expression -> expression NGT expression .)
    [               reduce using rule 49 (expression -> expression NGT expression .)
    ZEROS           reduce using rule 49 (expression -> expression NGT expression .)
    ONES            reduce using rule 49 (expression -> expression NGT expression .)
    EYE             reduce using rule 49 (expression -> expression NGT expression .)
    TRANSPOSITION   shift and go to state 41

  ! TRANSPOSITION   [ reduce using rule 49 (expression -> expression NGT expression .) ]
  ! +               [ shift and go to state 33 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 35 ]
  ! /               [ shift and go to state 36 ]
  ! DOTADD          [ shift and go to state 37 ]
  ! DOTSUB          [ shift and go to state 38 ]
  ! DOTMUL          [ shift and go to state 39 ]
  ! DOTDIV          [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! NLT             [ shift and go to state 45 ]
  ! GT              [ shift and go to state 46 ]
  ! NGT             [ shift and go to state 47 ]


state 83

    (56) for_instruction -> FOR ID = . range instruction
    (55) range -> . expression : expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    range                          shift and go to state 99
    expression                     shift and go to state 100

state 84

    (21) expression -> ID = expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 21 (expression -> ID = expression .)
    )               reduce using rule 21 (expression -> ID = expression .)
    ,               reduce using rule 21 (expression -> ID = expression .)
    ]               reduce using rule 21 (expression -> ID = expression .)
    :               reduce using rule 21 (expression -> ID = expression .)
    {               reduce using rule 21 (expression -> ID = expression .)
    BREAK           reduce using rule 21 (expression -> ID = expression .)
    CONTINUE        reduce using rule 21 (expression -> ID = expression .)
    RETURN          reduce using rule 21 (expression -> ID = expression .)
    FOR             reduce using rule 21 (expression -> ID = expression .)
    WHILE           reduce using rule 21 (expression -> ID = expression .)
    IF              reduce using rule 21 (expression -> ID = expression .)
    PRINT           reduce using rule 21 (expression -> ID = expression .)
    ID              reduce using rule 21 (expression -> ID = expression .)
    INTNUM          reduce using rule 21 (expression -> ID = expression .)
    FLOAT           reduce using rule 21 (expression -> ID = expression .)
    STRING          reduce using rule 21 (expression -> ID = expression .)
    (               reduce using rule 21 (expression -> ID = expression .)
    [               reduce using rule 21 (expression -> ID = expression .)
    ZEROS           reduce using rule 21 (expression -> ID = expression .)
    ONES            reduce using rule 21 (expression -> ID = expression .)
    EYE             reduce using rule 21 (expression -> ID = expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 21 (expression -> ID = expression .) ]
  ! -               [ reduce using rule 21 (expression -> ID = expression .) ]
  ! *               [ reduce using rule 21 (expression -> ID = expression .) ]
  ! /               [ reduce using rule 21 (expression -> ID = expression .) ]
  ! DOTADD          [ reduce using rule 21 (expression -> ID = expression .) ]
  ! DOTSUB          [ reduce using rule 21 (expression -> ID = expression .) ]
  ! DOTMUL          [ reduce using rule 21 (expression -> ID = expression .) ]
  ! DOTDIV          [ reduce using rule 21 (expression -> ID = expression .) ]
  ! TRANSPOSITION   [ reduce using rule 21 (expression -> ID = expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> ID = expression .) ]
  ! NEQ             [ reduce using rule 21 (expression -> ID = expression .) ]
  ! LT              [ reduce using rule 21 (expression -> ID = expression .) ]
  ! NLT             [ reduce using rule 21 (expression -> ID = expression .) ]
  ! GT              [ reduce using rule 21 (expression -> ID = expression .) ]
  ! NGT             [ reduce using rule 21 (expression -> ID = expression .) ]


state 85

    (22) expression -> ID ADDASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    )               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    ,               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    ]               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    :               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    {               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    BREAK           reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    CONTINUE        reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    RETURN          reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    FOR             reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    WHILE           reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    IF              reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    PRINT           reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    ID              reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    INTNUM          reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    FLOAT           reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    STRING          reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    (               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    [               reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    ZEROS           reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    ONES            reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    EYE             reduce using rule 22 (expression -> ID ADDASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! -               [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! *               [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! /               [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! LT              [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! NLT             [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! GT              [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]
  ! NGT             [ reduce using rule 22 (expression -> ID ADDASSIGN expression .) ]


state 86

    (23) expression -> ID SUBASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    )               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    ,               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    ]               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    :               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    {               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    BREAK           reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    CONTINUE        reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    RETURN          reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    FOR             reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    WHILE           reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    IF              reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    PRINT           reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    ID              reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    INTNUM          reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    FLOAT           reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    STRING          reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    (               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    [               reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    ZEROS           reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    ONES            reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    EYE             reduce using rule 23 (expression -> ID SUBASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! -               [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! *               [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! /               [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! LT              [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! NLT             [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! GT              [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]
  ! NGT             [ reduce using rule 23 (expression -> ID SUBASSIGN expression .) ]


state 87

    (24) expression -> ID MULASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    )               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    ,               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    ]               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    :               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    {               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    BREAK           reduce using rule 24 (expression -> ID MULASSIGN expression .)
    CONTINUE        reduce using rule 24 (expression -> ID MULASSIGN expression .)
    RETURN          reduce using rule 24 (expression -> ID MULASSIGN expression .)
    FOR             reduce using rule 24 (expression -> ID MULASSIGN expression .)
    WHILE           reduce using rule 24 (expression -> ID MULASSIGN expression .)
    IF              reduce using rule 24 (expression -> ID MULASSIGN expression .)
    PRINT           reduce using rule 24 (expression -> ID MULASSIGN expression .)
    ID              reduce using rule 24 (expression -> ID MULASSIGN expression .)
    INTNUM          reduce using rule 24 (expression -> ID MULASSIGN expression .)
    FLOAT           reduce using rule 24 (expression -> ID MULASSIGN expression .)
    STRING          reduce using rule 24 (expression -> ID MULASSIGN expression .)
    (               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    [               reduce using rule 24 (expression -> ID MULASSIGN expression .)
    ZEROS           reduce using rule 24 (expression -> ID MULASSIGN expression .)
    ONES            reduce using rule 24 (expression -> ID MULASSIGN expression .)
    EYE             reduce using rule 24 (expression -> ID MULASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! -               [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! *               [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! /               [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! NEQ             [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! LT              [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! NLT             [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! GT              [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]
  ! NGT             [ reduce using rule 24 (expression -> ID MULASSIGN expression .) ]


state 88

    (25) expression -> ID DIVASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    )               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    ,               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    ]               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    :               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    {               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    BREAK           reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    CONTINUE        reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    RETURN          reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    FOR             reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    WHILE           reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    IF              reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    PRINT           reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    ID              reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    INTNUM          reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    FLOAT           reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    STRING          reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    (               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    [               reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    ZEROS           reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    ONES            reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    EYE             reduce using rule 25 (expression -> ID DIVASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! -               [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! *               [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! /               [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! NEQ             [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! LT              [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! NLT             [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! GT              [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]
  ! NGT             [ reduce using rule 25 (expression -> ID DIVASSIGN expression .) ]


state 89

    (26) expression -> ID [ expression_list . ] = expression
    (27) expression -> ID [ expression_list . ] ADDASSIGN expression
    (28) expression -> ID [ expression_list . ] SUBASSIGN expression
    (29) expression -> ID [ expression_list . ] MULASSIGN expression
    (30) expression -> ID [ expression_list . ] DIVASSIGN expression
    (51) expression_list -> expression_list . , expression

    ]               shift and go to state 101
    ,               shift and go to state 94


state 90

    (54) while_instruction -> WHILE ( expression . ) instruction
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    )               shift and go to state 102
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 91

    (18) expression -> ( expression ) .

    ;               reduce using rule 18 (expression -> ( expression ) .)
    +               reduce using rule 18 (expression -> ( expression ) .)
    -               reduce using rule 18 (expression -> ( expression ) .)
    *               reduce using rule 18 (expression -> ( expression ) .)
    /               reduce using rule 18 (expression -> ( expression ) .)
    DOTADD          reduce using rule 18 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 18 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 18 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 18 (expression -> ( expression ) .)
    TRANSPOSITION   reduce using rule 18 (expression -> ( expression ) .)
    EQ              reduce using rule 18 (expression -> ( expression ) .)
    NEQ             reduce using rule 18 (expression -> ( expression ) .)
    LT              reduce using rule 18 (expression -> ( expression ) .)
    NLT             reduce using rule 18 (expression -> ( expression ) .)
    GT              reduce using rule 18 (expression -> ( expression ) .)
    NGT             reduce using rule 18 (expression -> ( expression ) .)
    )               reduce using rule 18 (expression -> ( expression ) .)
    ,               reduce using rule 18 (expression -> ( expression ) .)
    ]               reduce using rule 18 (expression -> ( expression ) .)
    :               reduce using rule 18 (expression -> ( expression ) .)
    {               reduce using rule 18 (expression -> ( expression ) .)
    BREAK           reduce using rule 18 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 18 (expression -> ( expression ) .)
    RETURN          reduce using rule 18 (expression -> ( expression ) .)
    FOR             reduce using rule 18 (expression -> ( expression ) .)
    WHILE           reduce using rule 18 (expression -> ( expression ) .)
    IF              reduce using rule 18 (expression -> ( expression ) .)
    PRINT           reduce using rule 18 (expression -> ( expression ) .)
    ID              reduce using rule 18 (expression -> ( expression ) .)
    INTNUM          reduce using rule 18 (expression -> ( expression ) .)
    FLOAT           reduce using rule 18 (expression -> ( expression ) .)
    STRING          reduce using rule 18 (expression -> ( expression ) .)
    (               reduce using rule 18 (expression -> ( expression ) .)
    [               reduce using rule 18 (expression -> ( expression ) .)
    ZEROS           reduce using rule 18 (expression -> ( expression ) .)
    ONES            reduce using rule 18 (expression -> ( expression ) .)
    EYE             reduce using rule 18 (expression -> ( expression ) .)


state 92

    (52) if_instruction -> IF ( expression . ) instruction
    (53) if_instruction -> IF ( expression . ) instruction ELSE instruction
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    )               shift and go to state 103
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 93

    (57) print_instruction -> PRINT expression_list ; .

    {               reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    BREAK           reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    CONTINUE        reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    RETURN          reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    FOR             reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    WHILE           reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    IF              reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    PRINT           reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    ID              reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    INTNUM          reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    FLOAT           reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    STRING          reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    (               reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    [               reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    ZEROS           reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    ONES            reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    EYE             reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    -               reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    $end            reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    }               reduce using rule 57 (print_instruction -> PRINT expression_list ; .)
    ELSE            reduce using rule 57 (print_instruction -> PRINT expression_list ; .)


state 94

    (51) expression_list -> expression_list , . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 104

state 95

    (20) expression -> [ expression_list ] .

    ;               reduce using rule 20 (expression -> [ expression_list ] .)
    +               reduce using rule 20 (expression -> [ expression_list ] .)
    -               reduce using rule 20 (expression -> [ expression_list ] .)
    *               reduce using rule 20 (expression -> [ expression_list ] .)
    /               reduce using rule 20 (expression -> [ expression_list ] .)
    DOTADD          reduce using rule 20 (expression -> [ expression_list ] .)
    DOTSUB          reduce using rule 20 (expression -> [ expression_list ] .)
    DOTMUL          reduce using rule 20 (expression -> [ expression_list ] .)
    DOTDIV          reduce using rule 20 (expression -> [ expression_list ] .)
    TRANSPOSITION   reduce using rule 20 (expression -> [ expression_list ] .)
    EQ              reduce using rule 20 (expression -> [ expression_list ] .)
    NEQ             reduce using rule 20 (expression -> [ expression_list ] .)
    LT              reduce using rule 20 (expression -> [ expression_list ] .)
    NLT             reduce using rule 20 (expression -> [ expression_list ] .)
    GT              reduce using rule 20 (expression -> [ expression_list ] .)
    NGT             reduce using rule 20 (expression -> [ expression_list ] .)
    )               reduce using rule 20 (expression -> [ expression_list ] .)
    ,               reduce using rule 20 (expression -> [ expression_list ] .)
    ]               reduce using rule 20 (expression -> [ expression_list ] .)
    :               reduce using rule 20 (expression -> [ expression_list ] .)
    {               reduce using rule 20 (expression -> [ expression_list ] .)
    BREAK           reduce using rule 20 (expression -> [ expression_list ] .)
    CONTINUE        reduce using rule 20 (expression -> [ expression_list ] .)
    RETURN          reduce using rule 20 (expression -> [ expression_list ] .)
    FOR             reduce using rule 20 (expression -> [ expression_list ] .)
    WHILE           reduce using rule 20 (expression -> [ expression_list ] .)
    IF              reduce using rule 20 (expression -> [ expression_list ] .)
    PRINT           reduce using rule 20 (expression -> [ expression_list ] .)
    ID              reduce using rule 20 (expression -> [ expression_list ] .)
    INTNUM          reduce using rule 20 (expression -> [ expression_list ] .)
    FLOAT           reduce using rule 20 (expression -> [ expression_list ] .)
    STRING          reduce using rule 20 (expression -> [ expression_list ] .)
    (               reduce using rule 20 (expression -> [ expression_list ] .)
    [               reduce using rule 20 (expression -> [ expression_list ] .)
    ZEROS           reduce using rule 20 (expression -> [ expression_list ] .)
    ONES            reduce using rule 20 (expression -> [ expression_list ] .)
    EYE             reduce using rule 20 (expression -> [ expression_list ] .)


state 96

    (31) expression -> ZEROS ( expression_list . )
    (51) expression_list -> expression_list . , expression

    )               shift and go to state 105
    ,               shift and go to state 94


state 97

    (32) expression -> ONES ( expression_list . )
    (51) expression_list -> expression_list . , expression

    )               shift and go to state 106
    ,               shift and go to state 94


state 98

    (33) expression -> EYE ( expression_list . )
    (51) expression_list -> expression_list . , expression

    )               shift and go to state 107
    ,               shift and go to state 94


state 99

    (56) for_instruction -> FOR ID = range . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    instruction                    shift and go to state 108
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6
    expression                     shift and go to state 11

state 100

    (55) range -> expression . : expression
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    :               shift and go to state 109
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 101

    (26) expression -> ID [ expression_list ] . = expression
    (27) expression -> ID [ expression_list ] . ADDASSIGN expression
    (28) expression -> ID [ expression_list ] . SUBASSIGN expression
    (29) expression -> ID [ expression_list ] . MULASSIGN expression
    (30) expression -> ID [ expression_list ] . DIVASSIGN expression

    =               shift and go to state 110
    ADDASSIGN       shift and go to state 111
    SUBASSIGN       shift and go to state 112
    MULASSIGN       shift and go to state 113
    DIVASSIGN       shift and go to state 114


state 102

    (54) while_instruction -> WHILE ( expression ) . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 11
    instruction                    shift and go to state 115
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6

state 103

    (52) if_instruction -> IF ( expression ) . instruction
    (53) if_instruction -> IF ( expression ) . instruction ELSE instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 11
    instruction                    shift and go to state 116
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6

state 104

    (51) expression_list -> expression_list , expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 51 (expression_list -> expression_list , expression .)
    ,               reduce using rule 51 (expression_list -> expression_list , expression .)
    ]               reduce using rule 51 (expression_list -> expression_list , expression .)
    )               reduce using rule 51 (expression_list -> expression_list , expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47


state 105

    (31) expression -> ZEROS ( expression_list ) .

    ;               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    +               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    -               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    *               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    /               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    DOTADD          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    DOTSUB          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    DOTMUL          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    DOTDIV          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    TRANSPOSITION   reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    EQ              reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    NEQ             reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    LT              reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    NLT             reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    GT              reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    NGT             reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    )               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    ,               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    ]               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    :               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    {               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    BREAK           reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    CONTINUE        reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    RETURN          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    FOR             reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    WHILE           reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    IF              reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    PRINT           reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    ID              reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    INTNUM          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    FLOAT           reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    STRING          reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    (               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    [               reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    ZEROS           reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    ONES            reduce using rule 31 (expression -> ZEROS ( expression_list ) .)
    EYE             reduce using rule 31 (expression -> ZEROS ( expression_list ) .)


state 106

    (32) expression -> ONES ( expression_list ) .

    ;               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    +               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    -               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    *               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    /               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    DOTADD          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    DOTSUB          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    DOTMUL          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    DOTDIV          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    TRANSPOSITION   reduce using rule 32 (expression -> ONES ( expression_list ) .)
    EQ              reduce using rule 32 (expression -> ONES ( expression_list ) .)
    NEQ             reduce using rule 32 (expression -> ONES ( expression_list ) .)
    LT              reduce using rule 32 (expression -> ONES ( expression_list ) .)
    NLT             reduce using rule 32 (expression -> ONES ( expression_list ) .)
    GT              reduce using rule 32 (expression -> ONES ( expression_list ) .)
    NGT             reduce using rule 32 (expression -> ONES ( expression_list ) .)
    )               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    ,               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    ]               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    :               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    {               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    BREAK           reduce using rule 32 (expression -> ONES ( expression_list ) .)
    CONTINUE        reduce using rule 32 (expression -> ONES ( expression_list ) .)
    RETURN          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    FOR             reduce using rule 32 (expression -> ONES ( expression_list ) .)
    WHILE           reduce using rule 32 (expression -> ONES ( expression_list ) .)
    IF              reduce using rule 32 (expression -> ONES ( expression_list ) .)
    PRINT           reduce using rule 32 (expression -> ONES ( expression_list ) .)
    ID              reduce using rule 32 (expression -> ONES ( expression_list ) .)
    INTNUM          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    FLOAT           reduce using rule 32 (expression -> ONES ( expression_list ) .)
    STRING          reduce using rule 32 (expression -> ONES ( expression_list ) .)
    (               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    [               reduce using rule 32 (expression -> ONES ( expression_list ) .)
    ZEROS           reduce using rule 32 (expression -> ONES ( expression_list ) .)
    ONES            reduce using rule 32 (expression -> ONES ( expression_list ) .)
    EYE             reduce using rule 32 (expression -> ONES ( expression_list ) .)


state 107

    (33) expression -> EYE ( expression_list ) .

    ;               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    +               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    -               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    *               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    /               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    DOTADD          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    DOTSUB          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    DOTMUL          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    DOTDIV          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    TRANSPOSITION   reduce using rule 33 (expression -> EYE ( expression_list ) .)
    EQ              reduce using rule 33 (expression -> EYE ( expression_list ) .)
    NEQ             reduce using rule 33 (expression -> EYE ( expression_list ) .)
    LT              reduce using rule 33 (expression -> EYE ( expression_list ) .)
    NLT             reduce using rule 33 (expression -> EYE ( expression_list ) .)
    GT              reduce using rule 33 (expression -> EYE ( expression_list ) .)
    NGT             reduce using rule 33 (expression -> EYE ( expression_list ) .)
    )               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    ,               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    ]               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    :               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    {               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    BREAK           reduce using rule 33 (expression -> EYE ( expression_list ) .)
    CONTINUE        reduce using rule 33 (expression -> EYE ( expression_list ) .)
    RETURN          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    FOR             reduce using rule 33 (expression -> EYE ( expression_list ) .)
    WHILE           reduce using rule 33 (expression -> EYE ( expression_list ) .)
    IF              reduce using rule 33 (expression -> EYE ( expression_list ) .)
    PRINT           reduce using rule 33 (expression -> EYE ( expression_list ) .)
    ID              reduce using rule 33 (expression -> EYE ( expression_list ) .)
    INTNUM          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    FLOAT           reduce using rule 33 (expression -> EYE ( expression_list ) .)
    STRING          reduce using rule 33 (expression -> EYE ( expression_list ) .)
    (               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    [               reduce using rule 33 (expression -> EYE ( expression_list ) .)
    ZEROS           reduce using rule 33 (expression -> EYE ( expression_list ) .)
    ONES            reduce using rule 33 (expression -> EYE ( expression_list ) .)
    EYE             reduce using rule 33 (expression -> EYE ( expression_list ) .)


state 108

    (56) for_instruction -> FOR ID = range instruction .

    {               reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    BREAK           reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    RETURN          reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    FOR             reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    WHILE           reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    IF              reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    PRINT           reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    ID              reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    INTNUM          reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    FLOAT           reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    STRING          reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    (               reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    [               reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    ZEROS           reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    ONES            reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    EYE             reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    -               reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    $end            reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    }               reduce using rule 56 (for_instruction -> FOR ID = range instruction .)
    ELSE            reduce using rule 56 (for_instruction -> FOR ID = range instruction .)


state 109

    (55) range -> expression : . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 117

state 110

    (26) expression -> ID [ expression_list ] = . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 118

state 111

    (27) expression -> ID [ expression_list ] ADDASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 119

state 112

    (28) expression -> ID [ expression_list ] SUBASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 120

state 113

    (29) expression -> ID [ expression_list ] MULASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 121

state 114

    (30) expression -> ID [ expression_list ] DIVASSIGN . expression
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 122

state 115

    (54) while_instruction -> WHILE ( expression ) instruction .

    {               reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    IF              reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    ID              reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    FLOAT           reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    STRING          reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    (               reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    [               reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    ZEROS           reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    -               reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    $end            reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    }               reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 54 (while_instruction -> WHILE ( expression ) instruction .)


state 116

    (52) if_instruction -> IF ( expression ) instruction .
    (53) if_instruction -> IF ( expression ) instruction . ELSE instruction

    {               reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    BREAK           reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    RETURN          reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    FOR             reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    WHILE           reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    IF              reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    PRINT           reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    ID              reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    INTNUM          reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    FLOAT           reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    STRING          reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    (               reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    [               reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    ZEROS           reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    ONES            reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    EYE             reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    -               reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    $end            reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    }               reduce using rule 52 (if_instruction -> IF ( expression ) instruction .)
    ELSE            shift and go to state 123

  ! ELSE            [ reduce using rule 52 (if_instruction -> IF ( expression ) instruction .) ]


state 117

    (55) range -> expression : expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    {               reduce using rule 55 (range -> expression : expression .)
    BREAK           reduce using rule 55 (range -> expression : expression .)
    CONTINUE        reduce using rule 55 (range -> expression : expression .)
    RETURN          reduce using rule 55 (range -> expression : expression .)
    FOR             reduce using rule 55 (range -> expression : expression .)
    WHILE           reduce using rule 55 (range -> expression : expression .)
    IF              reduce using rule 55 (range -> expression : expression .)
    PRINT           reduce using rule 55 (range -> expression : expression .)
    ID              reduce using rule 55 (range -> expression : expression .)
    INTNUM          reduce using rule 55 (range -> expression : expression .)
    FLOAT           reduce using rule 55 (range -> expression : expression .)
    STRING          reduce using rule 55 (range -> expression : expression .)
    (               reduce using rule 55 (range -> expression : expression .)
    [               reduce using rule 55 (range -> expression : expression .)
    ZEROS           reduce using rule 55 (range -> expression : expression .)
    ONES            reduce using rule 55 (range -> expression : expression .)
    EYE             reduce using rule 55 (range -> expression : expression .)
    -               reduce using rule 55 (range -> expression : expression .)
    +               shift and go to state 33
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! -               [ shift and go to state 34 ]


state 118

    (26) expression -> ID [ expression_list ] = expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    )               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    ,               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    ]               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    :               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    {               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    BREAK           reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    CONTINUE        reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    RETURN          reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    FOR             reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    WHILE           reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    IF              reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    PRINT           reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    ID              reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    INTNUM          reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    FLOAT           reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    STRING          reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    (               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    [               reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    ZEROS           reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    ONES            reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    EYE             reduce using rule 26 (expression -> ID [ expression_list ] = expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! -               [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! *               [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! /               [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! DOTADD          [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! DOTSUB          [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! DOTMUL          [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! DOTDIV          [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! TRANSPOSITION   [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! NEQ             [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! LT              [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! NLT             [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! GT              [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]
  ! NGT             [ reduce using rule 26 (expression -> ID [ expression_list ] = expression .) ]


state 119

    (27) expression -> ID [ expression_list ] ADDASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    )               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ,               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ]               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    :               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    {               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    BREAK           reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    CONTINUE        reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    RETURN          reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    FOR             reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    WHILE           reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    IF              reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    PRINT           reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ID              reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    INTNUM          reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    FLOAT           reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    STRING          reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    (               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    [               reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ZEROS           reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    ONES            reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    EYE             reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! -               [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! *               [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! /               [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! NEQ             [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! LT              [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! NLT             [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! GT              [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]
  ! NGT             [ reduce using rule 27 (expression -> ID [ expression_list ] ADDASSIGN expression .) ]


state 120

    (28) expression -> ID [ expression_list ] SUBASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    )               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ,               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ]               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    :               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    {               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    BREAK           reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    CONTINUE        reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    RETURN          reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    FOR             reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    WHILE           reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    IF              reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    PRINT           reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ID              reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    INTNUM          reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    FLOAT           reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    STRING          reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    (               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    [               reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ZEROS           reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    ONES            reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    EYE             reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! -               [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! *               [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! /               [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! NEQ             [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! LT              [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! NLT             [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! GT              [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]
  ! NGT             [ reduce using rule 28 (expression -> ID [ expression_list ] SUBASSIGN expression .) ]


state 121

    (29) expression -> ID [ expression_list ] MULASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    )               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ,               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ]               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    :               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    {               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    BREAK           reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    CONTINUE        reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    RETURN          reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    FOR             reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    WHILE           reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    IF              reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    PRINT           reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ID              reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    INTNUM          reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    FLOAT           reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    STRING          reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    (               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    [               reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ZEROS           reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    ONES            reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    EYE             reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! -               [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! *               [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! /               [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! LT              [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! NLT             [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! GT              [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]
  ! NGT             [ reduce using rule 29 (expression -> ID [ expression_list ] MULASSIGN expression .) ]


state 122

    (30) expression -> ID [ expression_list ] DIVASSIGN expression .
    (34) expression -> expression . + expression
    (35) expression -> expression . - expression
    (36) expression -> expression . * expression
    (37) expression -> expression . / expression
    (38) expression -> expression . DOTADD expression
    (39) expression -> expression . DOTSUB expression
    (40) expression -> expression . DOTMUL expression
    (41) expression -> expression . DOTDIV expression
    (43) expression -> expression . TRANSPOSITION
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NEQ expression
    (46) expression -> expression . LT expression
    (47) expression -> expression . NLT expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . NGT expression

    ;               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    )               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ,               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ]               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    :               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    {               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    BREAK           reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    CONTINUE        reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    RETURN          reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    FOR             reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    WHILE           reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    IF              reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    PRINT           reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ID              reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    INTNUM          reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    FLOAT           reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    STRING          reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    (               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    [               reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ZEROS           reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    ONES            reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    EYE             reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .)
    +               shift and go to state 33
    -               shift and go to state 34
    *               shift and go to state 35
    /               shift and go to state 36
    DOTADD          shift and go to state 37
    DOTSUB          shift and go to state 38
    DOTMUL          shift and go to state 39
    DOTDIV          shift and go to state 40
    TRANSPOSITION   shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    LT              shift and go to state 44
    NLT             shift and go to state 45
    GT              shift and go to state 46
    NGT             shift and go to state 47

  ! +               [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! -               [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! *               [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! /               [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! TRANSPOSITION   [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! LT              [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! NLT             [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! GT              [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]
  ! NGT             [ reduce using rule 30 (expression -> ID [ expression_list ] DIVASSIGN expression .) ]


state 123

    (53) if_instruction -> IF ( expression ) instruction ELSE . instruction
    (3) instruction -> . for_instruction
    (4) instruction -> . while_instruction
    (5) instruction -> . if_instruction
    (6) instruction -> . print_instruction
    (7) instruction -> . { instructions_list }
    (8) instruction -> . BREAK ;
    (9) instruction -> . CONTINUE ;
    (10) instruction -> . RETURN expression ;
    (11) instruction -> . expression ;
    (56) for_instruction -> . FOR ID = range instruction
    (54) while_instruction -> . WHILE ( expression ) instruction
    (52) if_instruction -> . IF ( expression ) instruction
    (53) if_instruction -> . IF ( expression ) instruction ELSE instruction
    (57) print_instruction -> . PRINT expression_list ;
    (14) expression -> . ID
    (15) expression -> . INTNUM
    (16) expression -> . FLOAT
    (17) expression -> . STRING
    (18) expression -> . ( expression )
    (19) expression -> . [ ]
    (20) expression -> . [ expression_list ]
    (21) expression -> . ID = expression
    (22) expression -> . ID ADDASSIGN expression
    (23) expression -> . ID SUBASSIGN expression
    (24) expression -> . ID MULASSIGN expression
    (25) expression -> . ID DIVASSIGN expression
    (26) expression -> . ID [ expression_list ] = expression
    (27) expression -> . ID [ expression_list ] ADDASSIGN expression
    (28) expression -> . ID [ expression_list ] SUBASSIGN expression
    (29) expression -> . ID [ expression_list ] MULASSIGN expression
    (30) expression -> . ID [ expression_list ] DIVASSIGN expression
    (31) expression -> . ZEROS ( expression_list )
    (32) expression -> . ONES ( expression_list )
    (33) expression -> . EYE ( expression_list )
    (34) expression -> . expression + expression
    (35) expression -> . expression - expression
    (36) expression -> . expression * expression
    (37) expression -> . expression / expression
    (38) expression -> . expression DOTADD expression
    (39) expression -> . expression DOTSUB expression
    (40) expression -> . expression DOTMUL expression
    (41) expression -> . expression DOTDIV expression
    (42) expression -> . - expression
    (43) expression -> . expression TRANSPOSITION
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NEQ expression
    (46) expression -> . expression LT expression
    (47) expression -> . expression NLT expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression NGT expression

    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    RETURN          shift and go to state 10
    FOR             shift and go to state 12
    WHILE           shift and go to state 14
    IF              shift and go to state 16
    PRINT           shift and go to state 17
    ID              shift and go to state 13
    INTNUM          shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    (               shift and go to state 15
    [               shift and go to state 21
    ZEROS           shift and go to state 22
    ONES            shift and go to state 23
    EYE             shift and go to state 24
    -               shift and go to state 25

    expression                     shift and go to state 11
    instruction                    shift and go to state 124
    for_instruction                shift and go to state 3
    while_instruction              shift and go to state 4
    if_instruction                 shift and go to state 5
    print_instruction              shift and go to state 6

state 124

    (53) if_instruction -> IF ( expression ) instruction ELSE instruction .

    {               reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    INTNUM          reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    FLOAT           reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    STRING          reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    (               reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    [               reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    ZEROS           reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    ONES            reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    EYE             reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    -               reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 53 (if_instruction -> IF ( expression ) instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for [ in state 13 resolved as shift
