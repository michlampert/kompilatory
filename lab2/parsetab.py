
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSDOTADDDOTSUBleftTIMESDIVIDEDOTMULDOTDIVleftLTGTNGTNLTNEQEQleftASSIGNADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNrightEYEONESZEROSrightTRANSPOSITIONrightRANGErightOPPOSITEnonassocIFXnonassocELSEADDASSIGN ASSIGN BREAK COMMA CONTINUE DIVASSIGN DIVIDE DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOAT FOR GT ID IF INTNUM LCURL LPAREN LSQUARE LT MINUS MULASSIGN NEQ NGT NLT ONES PLUS PRINT RANGE RCURL RETURN RPAREN RSQUARE SEMICOLON STRING SUBASSIGN THEN TIMES TRANSPOSITION WHILE ZEROSprogram : instruction\n                | program instructioninstruction : for_instruction\n                   | while_instruction\n                   | if_instruction\n                   | print_instruction\n                   | LCURL instructions_list RCURL\n                   | BREAK SEMICOLON\n                   | CONTINUE SEMICOLON\n                   | RETURN expression SEMICOLON\n                   | expression SEMICOLON\n\n       instructions_list : instructions_list COMMA instruction\n                         | instructionboolean_expr : arithmetic_expr LT arithmetic_expr\n                    | arithmetic_expr GT arithmetic_expr\n                    | arithmetic_expr NGT arithmetic_expr\n                    | arithmetic_expr NLT arithmetic_expr\n                    | arithmetic_expr EQ arithmetic_expr\n                    | arithmetic_expr NEQ arithmetic_expr \n                    | STRING EQ STRING\n                    | STRING NEQ STRINGarithmetic_expr : ID\n                       | INTNUM\n                       | FLOAT\n                       | LSQUARE RSQUARE\n                       | LSQUARE arithmetic_list RSQUARE\n                       | arithmetic_expr PLUS arithmetic_expr\n                       | arithmetic_expr MINUS arithmetic_expr\n                       | arithmetic_expr TIMES arithmetic_expr\n                       | arithmetic_expr DIVIDE arithmetic_expr\n                       | arithmetic_expr DOTADD arithmetic_expr\n                       | arithmetic_expr DOTMUL arithmetic_expr\n                       | arithmetic_expr DOTSUB arithmetic_expr\n                       | arithmetic_expr DOTDIV arithmetic_expr \n                       | arithmetic_expr TRANSPOSITION\n                       | MINUS arithmetic_expr %prec OPPOSITE\n                       | EYE LPAREN arithmetic_expr RPAREN\n                       | ONES LPAREN arithmetic_expr RPAREN\n                       | ZEROS LPAREN arithmetic_expr RPAREN\n    \n       arithmetic_list : arithmetic_list COMMA arithmetic_expr\n                       | arithmetic_expr \n        assign_expr : ID ASSIGN arithmetic_expr\n                    | ID ADDASSIGN arithmetic_expr \n                    | ID SUBASSIGN arithmetic_expr\n                    | ID MULASSIGN arithmetic_expr\n                    | ID DIVASSIGN arithmetic_expr\n                    | ID ASSIGN boolean_expr\n                    | ID ASSIGN STRING expression : assign_expr\n                  | arithmetic_expr\n                  | boolean_expr\n    if_instruction : IF LPAREN boolean_expr RPAREN THEN instruction %prec IFX\n                      | IF LPAREN boolean_expr RPAREN THEN instruction ELSE instructionwhile_instruction : WHILE LPAREN boolean_expr RPAREN instructionrange : arithmetic_expr RANGE arithmetic_expr\n       for_instruction : FOR ID ASSIGN range instruction print_instruction : PRINT arithmetic_expr\n                          | PRINT boolean_expr '
    
_lr_action_items = {'LCURL':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[7,7,-1,-3,-4,-5,-6,7,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,7,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,7,7,-37,-38,-39,-56,-54,7,-55,-52,7,-53,]),'BREAK':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[8,8,-1,-3,-4,-5,-6,8,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,8,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,8,8,-37,-38,-39,-56,-54,8,-55,-52,8,-53,]),'CONTINUE':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[9,9,-1,-3,-4,-5,-6,9,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,9,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,9,9,-37,-38,-39,-56,-54,9,-55,-52,9,-53,]),'RETURN':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[10,10,-1,-3,-4,-5,-6,10,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,10,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,10,10,-37,-38,-39,-56,-54,10,-55,-52,10,-53,]),'FOR':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[12,12,-1,-3,-4,-5,-6,12,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,12,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,12,12,-37,-38,-39,-56,-54,12,-55,-52,12,-53,]),'WHILE':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[14,14,-1,-3,-4,-5,-6,14,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,14,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,14,14,-37,-38,-39,-56,-54,14,-55,-52,14,-53,]),'IF':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[16,16,-1,-3,-4,-5,-6,16,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,16,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,16,16,-37,-38,-39,-56,-54,16,-55,-52,16,-53,]),'PRINT':([0,1,2,3,4,5,6,7,21,22,28,31,32,34,43,44,45,54,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[17,17,-1,-3,-4,-5,-6,17,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,17,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,17,17,-37,-38,-39,-56,-54,17,-55,-52,17,-53,]),'ID':([0,1,2,3,4,5,6,7,10,12,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[13,13,-1,-3,-4,-5,-6,13,13,35,45,-23,-24,45,45,-2,-8,-9,-11,45,45,45,45,45,45,45,-57,-58,-22,45,45,45,45,45,45,45,45,-35,45,45,45,45,45,45,-25,-36,45,45,45,-7,13,-10,45,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,45,13,13,-37,-38,-39,-56,45,-54,13,-55,-52,13,-53,]),'INTNUM':([0,1,2,3,4,5,6,7,10,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[21,21,-1,-3,-4,-5,-6,21,21,21,-23,-24,21,21,-2,-8,-9,-11,21,21,21,21,21,21,21,-57,-58,-22,21,21,21,21,21,21,21,21,-35,21,21,21,21,21,21,-25,-36,21,21,21,-7,21,-10,21,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,21,21,21,-37,-38,-39,-56,21,-54,21,-55,-52,21,-53,]),'FLOAT':([0,1,2,3,4,5,6,7,10,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[22,22,-1,-3,-4,-5,-6,22,22,22,-23,-24,22,22,-2,-8,-9,-11,22,22,22,22,22,22,22,-57,-58,-22,22,22,22,22,22,22,22,22,-35,22,22,22,22,22,22,-25,-36,22,22,22,-7,22,-10,22,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,22,22,22,-37,-38,-39,-56,22,-54,22,-55,-52,22,-53,]),'LSQUARE':([0,1,2,3,4,5,6,7,10,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[23,23,-1,-3,-4,-5,-6,23,23,23,-23,-24,23,23,-2,-8,-9,-11,23,23,23,23,23,23,23,-57,-58,-22,23,23,23,23,23,23,23,23,-35,23,23,23,23,23,23,-25,-36,23,23,23,-7,23,-10,23,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,23,23,23,-37,-38,-39,-56,23,-54,23,-55,-52,23,-53,]),'MINUS':([0,1,2,3,4,5,6,7,10,13,17,18,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,65,66,67,68,69,70,71,72,73,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,],[24,24,-1,-3,-4,-5,-6,24,24,-22,24,47,-23,-24,24,24,-2,-8,-9,-11,24,24,24,24,24,24,24,47,-58,-22,24,24,24,24,24,24,24,24,-35,24,24,24,24,24,24,-25,47,-36,24,24,24,-7,24,-10,24,47,47,47,47,47,47,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,24,47,47,47,24,47,24,47,-37,-38,-39,-56,24,-54,24,-55,-52,24,-53,]),'EYE':([0,1,2,3,4,5,6,7,10,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[25,25,-1,-3,-4,-5,-6,25,25,25,-23,-24,25,25,-2,-8,-9,-11,25,25,25,25,25,25,25,-57,-58,-22,25,25,25,25,25,25,25,25,-35,25,25,25,25,25,25,-25,-36,25,25,25,-7,25,-10,25,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,25,25,25,-37,-38,-39,-56,25,-54,25,-55,-52,25,-53,]),'ONES':([0,1,2,3,4,5,6,7,10,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[26,26,-1,-3,-4,-5,-6,26,26,26,-23,-24,26,26,-2,-8,-9,-11,26,26,26,26,26,26,26,-57,-58,-22,26,26,26,26,26,26,26,26,-35,26,26,26,26,26,26,-25,-36,26,26,26,-7,26,-10,26,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,26,26,26,-37,-38,-39,-56,26,-54,26,-55,-52,26,-53,]),'ZEROS':([0,1,2,3,4,5,6,7,10,17,21,22,23,24,28,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,66,67,68,69,70,71,72,73,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,111,112,113,114,115,116,117,118,119,120,121,],[27,27,-1,-3,-4,-5,-6,27,27,27,-23,-24,27,27,-2,-8,-9,-11,27,27,27,27,27,27,27,-57,-58,-22,27,27,27,27,27,27,27,27,-35,27,27,27,27,27,27,-25,-36,27,27,27,-7,27,-10,27,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,27,27,27,-37,-38,-39,-56,27,-54,27,-55,-52,27,-53,]),'STRING':([0,1,2,3,4,5,6,7,10,17,21,22,28,31,32,34,36,41,42,43,44,45,54,61,62,63,66,70,71,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,111,112,113,114,116,117,118,119,120,121,],[20,20,-1,-3,-4,-5,-6,20,20,20,-23,-24,-2,-8,-9,-11,76,20,20,-57,-58,-22,-35,98,99,-25,-36,-7,20,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,20,20,-37,-38,-39,-56,-54,20,-55,-52,20,-53,]),'$end':([1,2,3,4,5,6,21,22,28,31,32,34,43,44,45,54,63,66,70,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,111,112,113,114,116,119,121,],[0,-1,-3,-4,-5,-6,-23,-24,-2,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,-37,-38,-39,-56,-54,-52,-53,]),'RCURL':([3,4,5,6,21,22,29,30,31,32,34,43,44,45,54,63,66,70,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,111,112,113,114,116,119,121,],[-3,-4,-5,-6,-23,-24,70,-13,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,-12,-37,-38,-39,-56,-54,-52,-53,]),'COMMA':([3,4,5,6,21,22,29,30,31,32,34,43,44,45,54,63,64,65,66,70,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,110,111,112,113,114,116,119,121,],[-3,-4,-5,-6,-23,-24,71,-13,-8,-9,-11,-57,-58,-22,-35,-25,101,-41,-36,-7,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,-12,-40,-37,-38,-39,-56,-54,-52,-53,]),'ELSE':([3,4,5,6,21,22,31,32,34,43,44,45,54,63,66,70,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,111,112,113,114,116,119,121,],[-3,-4,-5,-6,-23,-24,-8,-9,-11,-57,-58,-22,-35,-25,-36,-7,-10,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,-37,-38,-39,-56,-54,120,-53,]),'SEMICOLON':([8,9,11,13,15,18,19,21,22,33,45,54,63,66,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,111,112,113,],[31,32,34,-22,-51,-50,-49,-23,-24,72,-22,-35,-25,-36,-42,-47,-48,-43,-44,-45,-46,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,-37,-38,-39,]),'ASSIGN':([13,35,],[36,73,]),'ADDASSIGN':([13,],[37,]),'SUBASSIGN':([13,],[38,]),'MULASSIGN':([13,],[39,]),'DIVASSIGN':([13,],[40,]),'PLUS':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,46,-23,-24,46,-22,-35,-25,46,-36,46,46,46,46,46,46,-27,-28,-29,-30,-31,-32,-33,-34,46,46,46,46,46,46,-26,46,46,46,46,46,-37,-38,-39,46,]),'TIMES':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,48,-23,-24,48,-22,-35,-25,48,-36,48,48,48,48,48,48,48,48,-29,-30,48,-32,48,-34,48,48,48,48,48,48,-26,48,48,48,48,48,-37,-38,-39,48,]),'DIVIDE':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,49,-23,-24,49,-22,-35,-25,49,-36,49,49,49,49,49,49,49,49,-29,-30,49,-32,49,-34,49,49,49,49,49,49,-26,49,49,49,49,49,-37,-38,-39,49,]),'DOTADD':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,50,-23,-24,50,-22,-35,-25,50,-36,50,50,50,50,50,50,-27,-28,-29,-30,-31,-32,-33,-34,50,50,50,50,50,50,-26,50,50,50,50,50,-37,-38,-39,50,]),'DOTMUL':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,51,-23,-24,51,-22,-35,-25,51,-36,51,51,51,51,51,51,51,51,-29,-30,51,-32,51,-34,51,51,51,51,51,51,-26,51,51,51,51,51,-37,-38,-39,51,]),'DOTSUB':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,52,-23,-24,52,-22,-35,-25,52,-36,52,52,52,52,52,52,-27,-28,-29,-30,-31,-32,-33,-34,52,52,52,52,52,52,-26,52,52,52,52,52,-37,-38,-39,52,]),'DOTDIV':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,53,-23,-24,53,-22,-35,-25,53,-36,53,53,53,53,53,53,53,53,-29,-30,53,-32,53,-34,53,53,53,53,53,53,-26,53,53,53,53,53,-37,-38,-39,53,]),'TRANSPOSITION':([13,18,21,22,43,45,54,63,65,66,74,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,107,110,111,112,113,118,],[-22,54,-23,-24,54,-22,-35,-25,54,-36,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-26,54,54,54,54,54,-37,-38,-39,54,]),'LT':([13,18,21,22,43,45,54,63,66,74,82,84,85,86,87,88,89,90,91,100,111,112,113,],[-22,55,-23,-24,55,-22,-35,-25,-36,55,55,-27,-28,-29,-30,-31,-32,-33,-34,-26,-37,-38,-39,]),'GT':([13,18,21,22,43,45,54,63,66,74,82,84,85,86,87,88,89,90,91,100,111,112,113,],[-22,56,-23,-24,56,-22,-35,-25,-36,56,56,-27,-28,-29,-30,-31,-32,-33,-34,-26,-37,-38,-39,]),'NGT':([13,18,21,22,43,45,54,63,66,74,82,84,85,86,87,88,89,90,91,100,111,112,113,],[-22,57,-23,-24,57,-22,-35,-25,-36,57,57,-27,-28,-29,-30,-31,-32,-33,-34,-26,-37,-38,-39,]),'NLT':([13,18,21,22,43,45,54,63,66,74,82,84,85,86,87,88,89,90,91,100,111,112,113,],[-22,58,-23,-24,58,-22,-35,-25,-36,58,58,-27,-28,-29,-30,-31,-32,-33,-34,-26,-37,-38,-39,]),'EQ':([13,18,20,21,22,43,45,54,63,66,74,76,82,84,85,86,87,88,89,90,91,100,111,112,113,],[-22,59,61,-23,-24,59,-22,-35,-25,-36,59,61,59,-27,-28,-29,-30,-31,-32,-33,-34,-26,-37,-38,-39,]),'NEQ':([13,18,20,21,22,43,45,54,63,66,74,76,82,84,85,86,87,88,89,90,91,100,111,112,113,],[-22,60,62,-23,-24,60,-22,-35,-25,-36,60,62,60,-27,-28,-29,-30,-31,-32,-33,-34,-26,-37,-38,-39,]),'LPAREN':([14,16,25,26,27,],[41,42,67,68,69,]),'RSQUARE':([21,22,23,45,54,63,64,65,66,84,85,86,87,88,89,90,91,100,110,111,112,113,],[-23,-24,63,-22,-35,-25,100,-41,-36,-27,-28,-29,-30,-31,-32,-33,-34,-26,-40,-37,-38,-39,]),'RPAREN':([21,22,45,54,63,66,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,111,112,113,],[-23,-24,-22,-35,-25,-36,108,109,-27,-28,-29,-30,-31,-32,-33,-34,-14,-15,-16,-17,-18,-19,-20,-21,-26,111,112,113,-37,-38,-39,]),'RANGE':([21,22,45,54,63,66,84,85,86,87,88,89,90,91,100,107,111,112,113,],[-23,-24,-22,-35,-25,-36,-27,-28,-29,-30,-31,-32,-33,-34,-26,115,-37,-38,-39,]),'THEN':([109,],[117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instruction':([0,1,7,71,106,108,117,120,],[2,28,30,105,114,116,119,121,]),'for_instruction':([0,1,7,71,106,108,117,120,],[3,3,3,3,3,3,3,3,]),'while_instruction':([0,1,7,71,106,108,117,120,],[4,4,4,4,4,4,4,4,]),'if_instruction':([0,1,7,71,106,108,117,120,],[5,5,5,5,5,5,5,5,]),'print_instruction':([0,1,7,71,106,108,117,120,],[6,6,6,6,6,6,6,6,]),'expression':([0,1,7,10,71,106,108,117,120,],[11,11,11,33,11,11,11,11,11,]),'boolean_expr':([0,1,7,10,17,36,41,42,71,106,108,117,120,],[15,15,15,15,44,75,81,83,15,15,15,15,15,]),'arithmetic_expr':([0,1,7,10,17,23,24,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,55,56,57,58,59,60,67,68,69,71,73,101,106,108,115,117,120,],[18,18,18,18,43,65,66,74,77,78,79,80,82,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,18,107,110,18,18,118,18,18,]),'assign_expr':([0,1,7,10,71,106,108,117,120,],[19,19,19,19,19,19,19,19,19,]),'instructions_list':([7,],[29,]),'arithmetic_list':([23,],[64,]),'range':([73,],[106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instruction','program',1,'p_program','Mparser.py',31),
  ('program -> program instruction','program',2,'p_program','Mparser.py',32),
  ('instruction -> for_instruction','instruction',1,'p_instruction','Mparser.py',35),
  ('instruction -> while_instruction','instruction',1,'p_instruction','Mparser.py',36),
  ('instruction -> if_instruction','instruction',1,'p_instruction','Mparser.py',37),
  ('instruction -> print_instruction','instruction',1,'p_instruction','Mparser.py',38),
  ('instruction -> LCURL instructions_list RCURL','instruction',3,'p_instruction','Mparser.py',39),
  ('instruction -> BREAK SEMICOLON','instruction',2,'p_instruction','Mparser.py',40),
  ('instruction -> CONTINUE SEMICOLON','instruction',2,'p_instruction','Mparser.py',41),
  ('instruction -> RETURN expression SEMICOLON','instruction',3,'p_instruction','Mparser.py',42),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','Mparser.py',43),
  ('instructions_list -> instructions_list COMMA instruction','instructions_list',3,'p_instruction','Mparser.py',45),
  ('instructions_list -> instruction','instructions_list',1,'p_instruction','Mparser.py',46),
  ('boolean_expr -> arithmetic_expr LT arithmetic_expr','boolean_expr',3,'p_boolean_expr','Mparser.py',49),
  ('boolean_expr -> arithmetic_expr GT arithmetic_expr','boolean_expr',3,'p_boolean_expr','Mparser.py',50),
  ('boolean_expr -> arithmetic_expr NGT arithmetic_expr','boolean_expr',3,'p_boolean_expr','Mparser.py',51),
  ('boolean_expr -> arithmetic_expr NLT arithmetic_expr','boolean_expr',3,'p_boolean_expr','Mparser.py',52),
  ('boolean_expr -> arithmetic_expr EQ arithmetic_expr','boolean_expr',3,'p_boolean_expr','Mparser.py',53),
  ('boolean_expr -> arithmetic_expr NEQ arithmetic_expr','boolean_expr',3,'p_boolean_expr','Mparser.py',54),
  ('boolean_expr -> STRING EQ STRING','boolean_expr',3,'p_boolean_expr','Mparser.py',55),
  ('boolean_expr -> STRING NEQ STRING','boolean_expr',3,'p_boolean_expr','Mparser.py',56),
  ('arithmetic_expr -> ID','arithmetic_expr',1,'p_arithmetic_expr','Mparser.py',59),
  ('arithmetic_expr -> INTNUM','arithmetic_expr',1,'p_arithmetic_expr','Mparser.py',60),
  ('arithmetic_expr -> FLOAT','arithmetic_expr',1,'p_arithmetic_expr','Mparser.py',61),
  ('arithmetic_expr -> LSQUARE RSQUARE','arithmetic_expr',2,'p_arithmetic_expr','Mparser.py',62),
  ('arithmetic_expr -> LSQUARE arithmetic_list RSQUARE','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',63),
  ('arithmetic_expr -> arithmetic_expr PLUS arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',64),
  ('arithmetic_expr -> arithmetic_expr MINUS arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',65),
  ('arithmetic_expr -> arithmetic_expr TIMES arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',66),
  ('arithmetic_expr -> arithmetic_expr DIVIDE arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',67),
  ('arithmetic_expr -> arithmetic_expr DOTADD arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',68),
  ('arithmetic_expr -> arithmetic_expr DOTMUL arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',69),
  ('arithmetic_expr -> arithmetic_expr DOTSUB arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',70),
  ('arithmetic_expr -> arithmetic_expr DOTDIV arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','Mparser.py',71),
  ('arithmetic_expr -> arithmetic_expr TRANSPOSITION','arithmetic_expr',2,'p_arithmetic_expr','Mparser.py',72),
  ('arithmetic_expr -> MINUS arithmetic_expr','arithmetic_expr',2,'p_arithmetic_expr','Mparser.py',73),
  ('arithmetic_expr -> EYE LPAREN arithmetic_expr RPAREN','arithmetic_expr',4,'p_arithmetic_expr','Mparser.py',74),
  ('arithmetic_expr -> ONES LPAREN arithmetic_expr RPAREN','arithmetic_expr',4,'p_arithmetic_expr','Mparser.py',75),
  ('arithmetic_expr -> ZEROS LPAREN arithmetic_expr RPAREN','arithmetic_expr',4,'p_arithmetic_expr','Mparser.py',76),
  ('arithmetic_list -> arithmetic_list COMMA arithmetic_expr','arithmetic_list',3,'p_arithmetic_expr','Mparser.py',78),
  ('arithmetic_list -> arithmetic_expr','arithmetic_list',1,'p_arithmetic_expr','Mparser.py',79),
  ('assign_expr -> ID ASSIGN arithmetic_expr','assign_expr',3,'p_assign_expr','Mparser.py',83),
  ('assign_expr -> ID ADDASSIGN arithmetic_expr','assign_expr',3,'p_assign_expr','Mparser.py',84),
  ('assign_expr -> ID SUBASSIGN arithmetic_expr','assign_expr',3,'p_assign_expr','Mparser.py',85),
  ('assign_expr -> ID MULASSIGN arithmetic_expr','assign_expr',3,'p_assign_expr','Mparser.py',86),
  ('assign_expr -> ID DIVASSIGN arithmetic_expr','assign_expr',3,'p_assign_expr','Mparser.py',87),
  ('assign_expr -> ID ASSIGN boolean_expr','assign_expr',3,'p_assign_expr','Mparser.py',88),
  ('assign_expr -> ID ASSIGN STRING','assign_expr',3,'p_assign_expr','Mparser.py',89),
  ('expression -> assign_expr','expression',1,'p_expression','Mparser.py',92),
  ('expression -> arithmetic_expr','expression',1,'p_expression','Mparser.py',93),
  ('expression -> boolean_expr','expression',1,'p_expression','Mparser.py',94),
  ('if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction','if_instruction',6,'p_if_instruction','Mparser.py',98),
  ('if_instruction -> IF LPAREN boolean_expr RPAREN THEN instruction ELSE instruction','if_instruction',8,'p_if_instruction','Mparser.py',99),
  ('while_instruction -> WHILE LPAREN boolean_expr RPAREN instruction','while_instruction',5,'p_while_instruction','Mparser.py',102),
  ('range -> arithmetic_expr RANGE arithmetic_expr','range',3,'p_for_instruction','Mparser.py',105),
  ('for_instruction -> FOR ID ASSIGN range instruction','for_instruction',5,'p_for_instruction','Mparser.py',106),
  ('print_instruction -> PRINT arithmetic_expr','print_instruction',2,'p_print_instruction','Mparser.py',109),
  ('print_instruction -> PRINT boolean_expr','print_instruction',2,'p_print_instruction','Mparser.py',110),
]
